<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>差分 on cqqqwq的小站</title><link>https://blog.chenqiqian.com/tags/%E5%B7%AE%E5%88%86/</link><description>Recent content in 差分 on cqqqwq的小站</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor><webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster><copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright><lastBuildDate>Fri, 24 Aug 2018 13:15:53 +0000</lastBuildDate><sy:updatePeriod>daily</sy:updatePeriod><atom:link href="https://blog.chenqiqian.com/tags/%E5%B7%AE%E5%88%86/index.xml" rel="self" type="application/rss+xml"/><item><title>「NOI2012」魔幻棋盘-差分+树套树</title><link>https://blog.chenqiqian.com/posts/noi2012-board/</link><pubDate>Fri, 24 Aug 2018 13:15:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 24 Aug 2018 13:15:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2012-board/</guid><description>&lt;p>将要读二年级的小 Q 买了一款新型益智玩具——魔幻棋盘，它是一个 $N$ 行 $M$ 列的网格棋盘，每个格子中均有一个正整数。棋盘守护者在棋盘的第 $X$ 行第 $Y$ 列（行与列均从 $1$ 开始编号）并且始终不会移动。棋盘守护者会进行两种操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>询问：他会以自己所在位置为基础，向四周随机扩展出一块大小不定的矩形区域，向你询问这一区域内所有数的最大公约数是多少。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改：他会随意挑选棋盘上的一块矩形区域，将这一区域内的所有数同时加上一个给定的整数。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>游戏说明书上附有这样一句话“聪明的小朋友，当你连续答对 $19930324$ 次询问后会得到一个惊喜噢！”。小 Q 十分想得到这个惊喜，于是每天都在玩这个玩具。但由于他粗心大意，经常算错数，难以达到这个目标。于是他来向你寻求帮助，希望你帮他写一个程序来回答棋盘守护者的询问，并保证 $100%$ 的正确率。&lt;/p>
&lt;p>为了简化问题，你的程序只需要完成棋盘守护者的 $T$ 次操作，并且问题保证任何时刻棋盘上的数字均为不超过 $2^{62} - 1$ 的正整数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>树套树</category><category>数据结构</category><category>差分</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「LNOI2014」LCA-树链剖分-差分</title><link>https://blog.chenqiqian.com/posts/lnoi2014-lca/</link><pubDate>Sat, 02 Jun 2018 21:23:25 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 02 Jun 2018 21:23:25 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/lnoi2014-lca/</guid><description>&lt;p>给出一个 $n$ 个节点的有根树。有 $q$ 次询问，每次询问给出 $l,r,z$ ，求 $\sum _ {l \leq i \leq r}dep[LCA(i,z)]$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>差分</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CQOI2015」任务查询系统-可持久化线段树</title><link>https://blog.chenqiqian.com/posts/cqoi2015-mission/</link><pubDate>Wed, 16 May 2018 21:16:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 16 May 2018 21:16:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2015-mission/</guid><description>&lt;p>超级计算机中的任务用三元组 $(S_i,E_i,P_i)$ 描述， $(S_i,E_i,P_i)$ 表示任务运行区间为 $[S_i,E_i]$ ,其优先级为 $P_i$ 。&lt;/p>
&lt;p>给出 $n$ 个任务。随后给出 $m$ 个询问，第 $X_i$ 秒正在运行的任务中，优先级最小的 $K_i$ 个任务的优先级之和是多少。特别的，如果 $K_i$ 大于第 $X_i$ 秒正在运行的任务总数，则直接回答第 $X_i$ 秒正在运行的任务优先级之和。&lt;/p>
&lt;p>强制在线。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>可持久化线段树</category><category>差分</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item></channel></rss>