<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>树形dp on cqqqwq的小站</title><link>https://blog.chenqiqian.com/tags/%E6%A0%91%E5%BD%A2dp/</link><description>Recent content in 树形dp on cqqqwq的小站</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor><webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster><copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright><lastBuildDate>Sat, 02 Mar 2019 12:19:10 +0000</lastBuildDate><sy:updatePeriod>daily</sy:updatePeriod><atom:link href="https://blog.chenqiqian.com/tags/%E6%A0%91%E5%BD%A2dp/index.xml" rel="self" type="application/rss+xml"/><item><title>「CF581F」 Zublicanes and Mumocrates - 树形dp</title><link>https://blog.chenqiqian.com/posts/cf581f/</link><pubDate>Sat, 02 Mar 2019 12:19:10 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 02 Mar 2019 12:19:10 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf581f/</guid><description>&lt;p>一棵树上有 $n$ 个节点，把每个节点染成黑色或白色，要求叶子节点一半是黑色，一半是白色（保证叶子节点的个数是偶数）。&lt;/p>
&lt;p>求在满足要求的情况下，最小的两端颜色不同的边的数量。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>树形dp</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「HNOI2014」世界树-虚树+树形dp</title><link>https://blog.chenqiqian.com/posts/hnoi2014-worldtree/</link><pubDate>Sun, 21 Oct 2018 22:29:12 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 21 Oct 2018 22:29:12 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2014-worldtree/</guid><description>&lt;p>世界树的形态可以用一个数学模型来描述：世界树中有 $n$ 个种族，种族的编号分别从 $1$ 到 $n$，分别生活在编号为 $1$ 到 $n$ 的聚居地上，种族的编号与其聚居地的编号相同。有的聚居地之间有双向的道路相连，道路的长度为 $1$。保证连接的方式会形成一棵树结构，即所有的聚居地之间可以互相到达，并且不会出现环。定义两个聚居地之间的距离为连接他们的道路的长度；例如，若聚居地 $a$ 和 $b$ 之间有道路，$b$ 和 $c$ 之间有道路，因为每条道路长度为 $1$ 而且又不可能出现环，所以 $a$ 与 $c$ 之间的距离为 $2$。&lt;/p>
&lt;p>出于对公平的考虑，第 $i$ 年，世界树的国王需要授权 $m_i$ 个种族的聚居地为临时议事处。对于某个种族 $x$（$x$ 为种族的编号），如果距离该种族最近的临时议事处为 $y$（$y$ 为议事处所在聚居地的编号），则种族 $x$ 将接受 $y$ 议事处的管辖（如果有多个临时议事处到该聚居地的距离一样，则 $y$ 为其中编号最小的临时议事处）。&lt;/p>
&lt;p>现在国王想知道，在 $q$ 年的时间里，每一年完成授权后，当年每个临时议事处将会管理多少个种族（议事处所在的聚居地也将接受该议事处管理）。 现在这个任务交给了以智慧著称的灵长类的你：程序猿。请帮国王完成这个任务吧。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>虚树</category><category>树形结构</category><category>树形dp</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SHOI2014」概率充电器-树形dp</title><link>https://blog.chenqiqian.com/posts/shoi2014-charger/</link><pubDate>Thu, 18 Oct 2018 19:50:03 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 18 Oct 2018 19:50:03 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/shoi2014-charger/</guid><description>&lt;p>著名的电子产品品牌 SHOI 刚刚发布了引领世界潮流的下一代电子产品—— 概率充电器：&lt;/p>
&lt;p>“采用全新纳米级加工技术，实现元件与导线能否通电完全由真随机数决定！SHOI 概率充电器，您生活不可或缺的必需品！能充上电吗？现在就试试看吧！”&lt;/p>
&lt;p>SHOI 概率充电器由 $n-1$ 条导线连通了 $n$ 个充电元件。进行充电时，每条导 线是否可以导电以概率决定，每一个充电元件自身是否直接进行充电也由概率 决定。随后电能可以从直接充电的元件经过通电的导线使得其他充电元件进行间接充电。&lt;/p>
&lt;p>作为 SHOI 公司的忠实客户，你无法抑制自己购买 SHOI 产品的冲动。在排 了一个星期的长队之后终于入手了最新型号的 SHOI 概率充电器。你迫不及待地将 SHOI 概率充电器插入电源——这时你突然想知道，进入充电状态的元件个数的期望是多少呢？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>树形dp</category><category>期望</category><category>树形结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2011」消耗战-虚树+树形dp</title><link>https://blog.chenqiqian.com/posts/sdoi2011-war/</link><pubDate>Mon, 15 Oct 2018 21:52:56 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 15 Oct 2018 21:52:56 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2011-war/</guid><description>&lt;p>给定一个 $n$ 个点，以 $1$ 为根的有根树，砍断第 $i$ 条边的代价为 $c_i$。有 $m$ 次询问，每次给出 $k_i$ 个关键点（保证关键点不含 $1$ 号节点），询问能够使 $1$ 号节点不能到达任何关键点，所要砍断边的代价和最小是多少。&lt;/p>
&lt;p>数据范围：$n,m \leq 250000,\sum {k_i} \leq 5 \times 10^5$&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>树形结构</category><category>虚树</category><category>树形dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「JSOI2016」最佳团体-树上背包+0/1分数规划</title><link>https://blog.chenqiqian.com/posts/jsoi2016-team/</link><pubDate>Mon, 18 Jun 2018 09:34:03 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 18 Jun 2018 09:34:03 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/jsoi2016-team/</guid><description>&lt;p>&lt;code>JSOI&lt;/code> 信息学代表队一共有 $N$ 名候选人，这些候选人从 $1$ 到 $N$ 编号。方便起见，&lt;code>JYY&lt;/code> 的编号是 $0$ 号。每个候选人都由一位编号比他小的候选人$R_i$推荐。如果 $R_i = 0$ ，则说明这个候选人是 &lt;code>JYY&lt;/code> 自己看上的。&lt;/p>
&lt;p>为了保证团队的和谐，&lt;code>JYY&lt;/code> 需要保证，如果招募了候选人 $i$，那么候选人 $R_i$ 也一定需要在团队中。当然了，&lt;code>JYY&lt;/code> 自己总是在团队里的。每一个候选人都有一个战斗值 $P_i$ ，也有一个招募费用 $S_i$。&lt;code>JYY&lt;/code> 希望招募 $K$ 个候选人（&lt;code>JYY&lt;/code> 自己不算），组成一个性价比最高的团队。也就是，这 $K$ 个被 &lt;code>JYY&lt;/code> 选择的候选人的总战斗值与总招募费用的比值最大。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>0/1分数规划</category><category>树形结构</category><category>树形dp</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HAOI2009」毛毛虫-树形dp</title><link>https://blog.chenqiqian.com/posts/haoi2009-worm/</link><pubDate>Wed, 06 Jun 2018 19:08:55 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 06 Jun 2018 19:08:55 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/haoi2009-worm/</guid><description>&lt;p>对于一棵树，我们可以将某条链和与该链相连的边抽出来，称其为一个“毛毛虫”。求在这个树中点数最多的毛毛虫的点数。&lt;/p>
&lt;p>$n &amp;lt; 300000$&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>树形dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2007」时态同步-树形dp</title><link>https://blog.chenqiqian.com/posts/zjoi2007-sync/</link><pubDate>Sat, 03 Mar 2018 18:30:16 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 03 Mar 2018 18:30:16 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2007-sync/</guid><description>&lt;p>给定一棵由 $n$ 个节点构成的树。&lt;/p>
&lt;p>在树上存在一个“激发器”，标号为 $s$ 。当激发器工作后，电流会延边传向每一个相邻节点。而中间节点接收到电流后，会将该电流传向与它连接并且尚未接收到电流的节点。对于每条边 $e$ ，电流通过它需要的时间为 $t_e$ ，电流的转发可以认为是在瞬间完成的。最终，激电流将到达一些“终止节点”――接收电流之后不再转发的节点。&lt;/p>
&lt;p>使用一次道具可以使得电流通过某条边的时间增加一个单位。请问最少使用多少次道具才可达到每一个“终止节点”同时收到电流？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>树形dp</category><category>OI</category><category>题解</category><category>各省省选</category></item></channel></rss>