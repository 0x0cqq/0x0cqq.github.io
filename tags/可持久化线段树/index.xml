<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>可持久化线段树 on cqqqwq 的小站</title><link>https://blog.cqqqwq.com/tags/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E7%BA%BF%E6%AE%B5%E6%A0%91/</link><description>Recent content in 可持久化线段树 on cqqqwq 的小站</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor><webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster><copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright><lastBuildDate>Tue, 02 Apr 2019 21:50:00 +0000</lastBuildDate><sy:updatePeriod>daily</sy:updatePeriod><atom:link href="https://blog.cqqqwq.com/tags/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E7%BA%BF%E6%AE%B5%E6%A0%91/index.xml" rel="self" type="application/rss+xml"/><item><title>「FJOI2015」火星商店问题-线段树分治+可持久化Trie</title><link>https://blog.cqqqwq.com/posts/fjoi2015-shop/</link><pubDate>Tue, 02 Apr 2019 21:50:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 02 Apr 2019 21:50:00 +0000</atom:modified><guid>https://blog.cqqqwq.com/posts/fjoi2015-shop/</guid><description>&lt;p>有 $n$ 个商店，每个商店都有一个特殊商品，每个人在任何时间都可以买。第一天可能没有进货，有若干次询问，而之后的每天，都有&lt;strong>一次&lt;/strong>进货和若干次询问，每次进货都是某个商店进了某个编号的货，每次询问都是询问在编号为 $l$ 到 $r$ 的商店中，在 $d$ 天内进的货的编号异或 $x$ 的最大值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>线段树分治</category><category>可持久化线段树</category><category>Trie</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>可持久化线段树学习笔记</title><link>https://blog.cqqqwq.com/posts/notes-prsegtree/</link><pubDate>Thu, 24 May 2018 20:37:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 24 May 2018 20:37:53 +0000</atom:modified><guid>https://blog.cqqqwq.com/posts/notes-prsegtree/</guid><description>&lt;p>可持久化线段树，是一种可以进行可持久化操作的线段树，具有优越的时间复杂度。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>可持久化线段树</category><category>主席树</category><category>数据结构</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「SDOI2013」森林-主席树+LCA+启发式合并</title><link>https://blog.cqqqwq.com/posts/sdoi2013-forest/</link><pubDate>Mon, 21 May 2018 20:10:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 21 May 2018 20:10:00 +0000</atom:modified><guid>https://blog.cqqqwq.com/posts/sdoi2013-forest/</guid><description>&lt;p>小Z有一片森林，含有 $N$ 个节点，每个节点上都有一个非负整数作为权值。初始的时候，森林中有 $M$ 条边。&lt;/p>
&lt;p>小Z希望执行 $T$ 个操作，操作有两类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>Q x y k&lt;/code> 查询点 $x$ 到点 $y$ 路径上所有的权值中，第 $k$ 小的权值是多少。此操作保证点 $x$ 和点 $y$ 连通，同时这两个节点的路径上至少有 $k$ 个点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>L x y&lt;/code> 在点 $x$ 和点 $y$ 之间连接一条边。保证完成此操作后，仍然是一片森林。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>强制在线。&lt;/p>
&lt;p>对于所有的数据 $n,m,T \leq 8 \times 10^4$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>可持久化线段树</category><category>最近公共祖先</category><category>启发式合并</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CQOI2015」任务查询系统-可持久化线段树</title><link>https://blog.cqqqwq.com/posts/cqoi2015-mission/</link><pubDate>Wed, 16 May 2018 21:16:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 16 May 2018 21:16:32 +0000</atom:modified><guid>https://blog.cqqqwq.com/posts/cqoi2015-mission/</guid><description>&lt;p>超级计算机中的任务用三元组 $(S_i,E_i,P_i)$ 描述， $(S_i,E_i,P_i)$ 表示任务运行区间为 $[S_i,E_i]$ ,其优先级为 $P_i$ 。&lt;/p>
&lt;p>给出 $n$ 个任务。随后给出 $m$ 个询问，第 $X_i$ 秒正在运行的任务中，优先级最小的 $K_i$ 个任务的优先级之和是多少。特别的，如果 $K_i$ 大于第 $X_i$ 秒正在运行的任务总数，则直接回答第 $X_i$ 秒正在运行的任务优先级之和。&lt;/p>
&lt;p>强制在线。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>可持久化线段树</category><category>差分</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「Luogu2617」Dynamic Rankings-树状数组-可持久化线段树</title><link>https://blog.cqqqwq.com/posts/luogu-2617/</link><pubDate>Sat, 12 May 2018 18:05:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 12 May 2018 18:05:36 +0000</atom:modified><guid>https://blog.cqqqwq.com/posts/luogu-2617/</guid><description>&lt;p>给定一个含有 $n$ 个数的序列 ${a_n}$ ，回答询问或执行操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>Q i j k&lt;/code> （$1\leq i\leq j\leq n, 1\leq k\leq j-i+1$）表示询问$a[i],a[i+1]&amp;hellip;&amp;hellip;a[j]$中第 $k$ 小的数。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>C i t&lt;/code> ($1 \leq i \leq n,0\leq t \leq 10^{9}$)表示把 $a[i]$ 改变成为 $t$ 。&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>可持久化线段树</category><category>OI</category><category>题解</category><category>Luogu</category></item><item><title>「POI2014」KUR-Couriers-主席树</title><link>https://blog.cqqqwq.com/posts/poi2014-kur/</link><pubDate>Sun, 06 May 2018 19:38:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 06 May 2018 19:38:00 +0000</atom:modified><guid>https://blog.cqqqwq.com/posts/poi2014-kur/</guid><description>&lt;p>给一个数列 ${a_n}$ ，每次询问区间 $[l,r]$ 内有没有一个数出现次数超过一半。如果有，输出这个数，如果没有，输出 $0$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>主席树</category><category>线段树</category><category>可持久化线段树</category><category>OI</category><category>题解</category><category>各国OI</category></item></channel></rss>