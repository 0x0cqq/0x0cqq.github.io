<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>并查集 on cqqqwq的小站</title><link>https://blog.chenqiqian.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/</link><description>Recent content in 并查集 on cqqqwq的小站</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor><webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster><copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright><lastBuildDate>Fri, 05 Apr 2019 17:15:43 +0000</lastBuildDate><sy:updatePeriod>daily</sy:updatePeriod><atom:link href="https://blog.chenqiqian.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/index.xml" rel="self" type="application/rss+xml"/><item><title>「AHOI2013」联通图-线段树分治+并查集</title><link>https://blog.chenqiqian.com/posts/ahoi2013-graph/</link><pubDate>Fri, 05 Apr 2019 17:15:43 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 05 Apr 2019 17:15:43 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/ahoi2013-graph/</guid><description>&lt;p>给定一个 $n$ 个点 $m$ 条边的无向连通图 $G$ 和若干个小集合 $S$，每个小集合包含 $c(1 \le c \le 4)$ 条边，对于每个集合，你需要确定将集合中的边删掉后改图是否保持联通。&lt;/p>
&lt;p>集合间的询问相互独立。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树分治</category><category>并查集</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「APIO2008」免费道路-生成树+并查集</title><link>https://blog.chenqiqian.com/posts/apio2008-road/</link><pubDate>Sat, 18 Aug 2018 20:44:05 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 18 Aug 2018 20:44:05 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/apio2008-road/</guid><description>&lt;p>给定一个 $n$ 个点，$m$ 条边的无向图，每条边有两种权值： $0$ 或者 $1$ 。&lt;/p>
&lt;p>先询问能不能找出一个生成树，使得其中恰有 $k$ 条 $0$ 边，若存在，输出任意一个方案，否则输出 &lt;code>no solution&lt;/code> 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>生成树</category><category>数据结构</category><category>并查集</category><category>OI</category><category>题解</category><category>WC/CTSC/APIO</category></item><item><title>「NOI2015」品酒大会-后缀数组</title><link>https://blog.chenqiqian.com/posts/noi2015-savour/</link><pubDate>Fri, 03 Aug 2018 19:40:39 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 03 Aug 2018 19:40:39 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2015-savour/</guid><description>&lt;p>简单版题意：&lt;/p>
&lt;p>给定一个长度为 $n$ 的字符串，和一个长度为 $n$ 的数列 ${a_n}$ ，求对于 $r$ 从 $0$ 到 $n-1$ ，所有满足 $1 \leq p &amp;lt; q \leq n$ 且 $lcp(p,q) \geq r$ 的数对个数以及满足上述条件的数对中 $a_p \times a_q$ 的最大值。（ $a_i$ 可以为负数）&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>并查集</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「CF990G」GCD Counting-并查集/点分治</title><link>https://blog.chenqiqian.com/posts/cf990g/</link><pubDate>Tue, 17 Jul 2018 19:48:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 17 Jul 2018 19:48:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf990g/</guid><description>&lt;p>给定一个 $n$ 个节点的树，每个点有一个正整数权值 $a_i$ 。我们定义 $g(x,y)$ 为 $x,y$ 之间简单路径上所有点（包括端点）的权值的最大公约数。&lt;/p>
&lt;p>现在请求出对于所有的 $i \in [1,2×10^5]$ ，满足 $1 \le x \le y \le n$ 且 $g(x,y) = i$ 的点对 $(x,y)$ 的数目。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>并查集</category><category>点分治</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「NOI2002」银河英雄传说-并查集</title><link>https://blog.chenqiqian.com/posts/noi2002-hero/</link><pubDate>Sun, 11 Feb 2018 16:27:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 11 Feb 2018 16:27:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2002-hero/</guid><description>&lt;p>初始时，第 $i$ 号战舰处于第 $i$ 列 $(i = 1, 2, …, 30000)$ 。&lt;/p>
&lt;p>有两种指令：&lt;/p>
&lt;p>合并指令为 &lt;code>M i j&lt;/code> ，含义为将第 $i$ 号战舰所在的整个战舰队列，作为一个整体（头在前尾在后）接至第 $j$ 号战舰所在的战舰队列的尾部。&lt;/p>
&lt;p>询问指令为 &lt;code>C i j&lt;/code> 。该指令意思询问第 $i$ 号战舰与第 $j$ 号战舰当前是否在同一列中，如果在同一列中，那么它们之间布置有多少战舰。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>并查集</category><category>OI</category><category>题解</category><category>NOI</category></item></channel></rss>