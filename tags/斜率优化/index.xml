<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>斜率优化 on cqqqwq的小站</title><link>https://blog.chenqiqian.com/tags/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/</link><description>Recent content in 斜率优化 on cqqqwq的小站</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor><webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster><copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright><lastBuildDate>Thu, 27 Dec 2018 20:55:16 +0000</lastBuildDate><sy:updatePeriod>daily</sy:updatePeriod><atom:link href="https://blog.chenqiqian.com/tags/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/index.xml" rel="self" type="application/rss+xml"/><item><title>「CF311B」Cats Transport-斜率优化dp</title><link>https://blog.chenqiqian.com/posts/cf311b/</link><pubDate>Thu, 27 Dec 2018 20:55:16 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 27 Dec 2018 20:55:16 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf311b/</guid><description>&lt;p>Zxr960115 是一个大农场主。他养了 $m$ 只可爱的猫子,雇佣了 $p$ 个铲屎官。这里有一条又直又长的道路穿过了农场，有 $n$ 个山丘坐落在道路周围，编号自左往右从1到n。山丘 $i$ 与山丘 $i-1$ 的距离是 $d_i$ 米。铲屎官们住在 $1$ 号山丘。&lt;/p>
&lt;p>一天，猫子们外出玩耍。猫子 $i$ 去山丘 $h_i$ 游玩，在 $t_i$ 时间结束他的游玩，然后在山丘 $h_i$ 傻等铲屎官。铲屎官们必须把所有的猫子带上。每个铲屎官都会从 $1$ 走到 $n$ 号山丘，可以不花费时间的把所有路途上游玩结束的猫子带上。每个铲屎官的速度为一米每单位时间，并且足够强壮来带上任意数量的猫子。&lt;/p>
&lt;p>你的任务是安排每个铲屎官出发的时间，最小化猫子们等待的时间之和。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>斜率优化</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「ZJOI2007」仓库建设-斜率优化</title><link>https://blog.chenqiqian.com/posts/zjoi2007-warehouse/</link><pubDate>Thu, 18 Oct 2018 19:49:43 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 18 Oct 2018 19:49:43 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2007-warehouse/</guid><description>&lt;p>L 公司有 $N$ 个工厂，由高到底分布在一座山上。工厂 $1$ 在山顶，工厂 $N$ 在山脚。&lt;/p>
&lt;p>由于地形的不同，在不同工厂建立仓库的费用可能是不同的。第 $i$ 个工厂目前已有成品 $P_i$ 件，在第 $i$ 个工厂位置建立仓库的费用是 $C_i$ 。&lt;/p>
&lt;p>对于没有建立仓库的工厂，其产品应被运往其他的仓库进行储藏，而由于 L 公司产品的对外销售处设置在山脚的工厂 $N$ ，故产品只能往山下运（即只能运往编号更大的工厂的仓库），当然运送产品也是需要费用的，假设一件产品运送 $1$ 个单位距离的费用是 $1$ 。&lt;/p>
&lt;p>假设建立的仓库容量都都是足够大的，可以容下所有的产品。你将得到以下数据：&lt;/p>
&lt;ul>
&lt;li>工厂 $i$ 距离工厂 $1$ 的距离 $X_i$（其中 $X_1=0$ ）;&lt;/li>
&lt;li>工厂 $i$ 目前已有成品数量 $P_i$ ;&lt;/li>
&lt;li>在工厂 $i$ 建立仓库的费用 $C_i$ ;&lt;/li>
&lt;/ul>
&lt;p>请你帮助 L 公司寻找一个仓库建设的方案，使得总的费用（建造费用+运输费用）最小。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>斜率优化</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2007」货币兑换-Splay+斜率优化</title><link>https://blog.chenqiqian.com/posts/noi2007-cash/</link><pubDate>Tue, 28 Aug 2018 22:59:54 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 28 Aug 2018 22:59:54 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2007-cash/</guid><description>&lt;p>小 $Y$ 最近在一家金券交易所工作。该金券交易所只发行交易两种金券：$A$ 纪念券（以下简称 $A$ 券）和 $B$ 纪念券（以下简称 $B$ 券）。每个持有金券的顾客都有一个自己的帐户。金券的数目可以是一个实数。每天随着市场的起伏波动，两种金券都有自己当时的价值，即每一单位金券当天可以兑换的人民币数目。我们记录第 $K$ 天中 $A$ 券 和 $B$ 券的价值分别为 $A_K$ 和 $B_K$（元/单位金券）。为了方便顾客，金券交易所提供了一种非常方便的交易方式：比例交易法。比例交易法分为两个方面：&lt;/p>
&lt;p>（a）卖出金券：顾客提供一个 $[0,100]$ 内的实数 $OP$ 作为卖出比例，其意义为：将 $OP%$ 的 $A$ 券和 $OP%$ 的 $B$ 券以当时的价值兑换为人民币；&lt;/p>
&lt;p>（b）买入金券：顾客支付 $IP$ 元人民币，交易所将会兑换给用户总价值为 $IP$ 的金券，并且，满足提供给顾客的 $A$ 券和 $B$ 券的比例在第 $K$ 天恰好为 $Rate_K$ ；&lt;/p>
&lt;p>注意到，&lt;strong>同一天内可以进行多次操作&lt;/strong>。小 $Y$ 是一个很有经济头脑的员工，通过较长时间的运作和行情测算，他已经知道了未来 $N$ 天内的 $A$ 券和 $B$ 券的价值以及 $Rate$ 。他还希望能够计算出来，如果开始时拥有 $S$ 元钱，那么 $N$ 天后最多能够获得多少元钱。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>Splay</category><category>平衡树</category><category>斜率优化</category><category>动态规划</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「APIO2014」序列分割-动态规划-斜率优化</title><link>https://blog.chenqiqian.com/posts/apio2014-sequence/</link><pubDate>Fri, 24 Aug 2018 13:16:24 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 24 Aug 2018 13:16:24 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/apio2014-sequence/</guid><description>&lt;p>你正在玩一个关于长度为 $n$ 的非负整数序列的游戏。这个游戏中你需要把序列分成 $k + 1$ 个非空的块。为了得到 $k + 1$ 块，你需要重复下面的操作 $k$ 次：&lt;/p>
&lt;ul>
&lt;li>选择一个有超过一个元素的块（初始时你只有一块，即整个序列）
&lt;ul>
&lt;li>选择两个相邻元素把这个块从中间分开，得到两个非空的块。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>每次操作后你将获得那两个新产生的块的元素和的乘积的分数。你想要最大化最后的总得分。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>斜率优化</category><category>OI</category><category>题解</category><category>WC/CTSC/APIO</category></item></channel></rss>