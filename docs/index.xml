<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>cqqqwq的小站</title><link>https://blog.chenqiqian.com/</link><description>Recent content on cqqqwq的小站</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor><webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster><copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright><lastBuildDate>Sun, 09 Aug 2020 19:58:59 +0800</lastBuildDate><sy:updatePeriod>daily</sy:updatePeriod><atom:link href="https://blog.chenqiqian.com/index.xml" rel="self" type="application/rss+xml"/><item><title>欧几里得算法学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-gcd/</link><pubDate>Sun, 09 Aug 2020 19:58:59 +0800</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 09 Aug 2020 19:58:59 +0800</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-gcd/</guid><description>前置知识 整除 定义 对于 $a,b \in \mathbb Z$ ，若存在 $q\in \mathbb Z$ 使 $a = qb$ 成立，则称 $b$ 整除 $a$ 或 $a$ 被 $b$ 整除，记作 $b\mid a$ 。 我们称 $b$ 是 $a$ 的因数， $a$ 是 $b$ 的倍数。 否则，我们称 $b$</description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>欧几里得算法</category><category>OI</category><category>学习笔记</category></item><item><title>简单多项式学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-poly/</link><pubDate>Sun, 09 Aug 2020 18:20:11 +0800</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 09 Aug 2020 18:20:11 +0800</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-poly/</guid><description>多项式（概念） 定义 一个以 $x$ 为变量的多项式是一个定义在代数域 $F$ 上的 $A(x)$ ，其可以表示为： $$ A(x) = \sum_{j=0}^{n-1} a_jx^j $$ 表示 系数表示法 在多项式 $A(x)$ 中，我们称 $\overrightarrow{a} = (a_0,a_1,a_2,&amp;hellip;,a_{n-1})$ 为多项</description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>多项式</category><category>OI</category><category>学习笔记</category></item><item><title>「CF750E」New Year and Old Subsequence-矩阵+线段树+dp</title><link>https://blog.chenqiqian.com/posts/cf750e/</link><pubDate>Sun, 09 Aug 2020 12:45:20 +0800</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 09 Aug 2020 12:45:20 +0800</atom:modified><guid>https://blog.chenqiqian.com/posts/cf750e/</guid><description>定义一个数字串为“妙”的当且仅当：该串包含某一子序列为 $2017$ ，且不包含子序列 $2016$。 定义一个数字串的“丑值”为：该串至少删去几个字符，可以</description><dc:creator>cqqqwq</dc:creator><category>矩阵</category><category>线段树</category><category>动态规划</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>Hugo and Zzo Features</title><link>https://blog.chenqiqian.com/posts/hugo-and-zzo-features/</link><pubDate>Mon, 03 Aug 2020 13:02:56 +0800</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 03 Aug 2020 13:02:56 +0800</atom:modified><guid>https://blog.chenqiqian.com/posts/hugo-and-zzo-features/</guid><description>&lt;h2 id="emoji-support">Emoji Support&lt;/h2>
&lt;p>Emoji can be enabled in a Hugo project in a number of ways.&lt;/p></description><dc:creator>cqqqwq</dc:creator><media:content url="https://blog.chenqiqian.comimages/feature2/content.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>test</category><category>hugo</category><category>themes</category><category>themes guide</category></item><item><title>关于这个小站的介绍</title><link>https://blog.chenqiqian.com/posts/about-this-blog/</link><pubDate>Mon, 03 Aug 2020 12:36:10 +0800</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 03 Aug 2020 12:36:10 +0800</atom:modified><guid>https://blog.chenqiqian.com/posts/about-this-blog/</guid><description>&amp;ldquo;记录时光与梦想&amp;rdquo; 这个小站是我在2017年12月的时候建立的啦。那个时候我刚上高中，刚学OI没多久，看到Menci的</description><dc:creator>cqqqwq</dc:creator><category>博客</category></item><item><title>Treap学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-treap/</link><pubDate>Mon, 03 Aug 2020 11:10:34 +0800</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 03 Aug 2020 11:10:34 +0800</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-treap/</guid><description>&lt;p>闲下来了，开始写一点学习笔记，也希望能给后人造福吧。&lt;/p>
&lt;p>第一篇来说一说 Treap 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>平衡树</category><category>Treap</category><category>笔记</category><category>模板</category><category>test</category></item><item><title>「随笔」初心</title><link>https://blog.chenqiqian.com/posts/essay-first-mind-oi/</link><pubDate>Sat, 24 Aug 2019 22:13:06 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 24 Aug 2019 22:13:06 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/essay-first-mind-oi/</guid><description>&lt;blockquote>
&lt;p>高三摸底考试的作文题目是「初心」。&lt;/p>
&lt;/blockquote></description><dc:creator>cqqqwq</dc:creator><category>随笔</category></item><item><title>BJOI2019退役记</title><link>https://blog.chenqiqian.com/posts/trip-bjoi2019/</link><pubDate>Sun, 21 Apr 2019 21:39:12 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 21 Apr 2019 21:39:12 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/trip-bjoi2019/</guid><description>&lt;p>GoodBye, OI.&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>OI</category><category>游记</category></item><item><title>「SCOI2005」骑士精神-搜索</title><link>https://blog.chenqiqian.com/posts/scoi2005-knight/</link><pubDate>Wed, 10 Apr 2019 20:57:59 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 10 Apr 2019 20:57:59 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2005-knight/</guid><description>&lt;p>在一个 $5 \times 5$ 的棋盘上有 $12$ 个白色的骑士和 $12$ 个黑色的骑士， 且有一个空位。在任何时候一个骑士都能按照骑士的走法（它可以走到和它横坐标相差为 $1$ ，纵坐标相差为 $2$ 或者横坐标相差为 $2$ ，纵坐标相差为 $1$ 的格子）移动到空位上。 给定一个初始的棋盘，怎样才能经过移动变成如下目标棋盘： 为了体现出骑士精神，他们必须以最少的步数完成任务。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>搜索</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「JSOI2010」满汉全席-2-SAT</title><link>https://blog.chenqiqian.com/posts/jsoi2010-feast/</link><pubDate>Tue, 09 Apr 2019 22:51:59 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 09 Apr 2019 22:51:59 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/jsoi2010-feast/</guid><description>&lt;p>题意过长，概括如下：&lt;/p>
&lt;p>你有 $n$ 种食材，评委 $m$ 个要求，你需要加工这 $n$ 种食材，每种从&amp;quot;汉式（&lt;code>h&lt;/code>）&amp;ldquo;或者&amp;quot;满式（&lt;code>m&lt;/code>）&amp;ldquo;中选择&lt;strong>一种&lt;/strong>。每个要求用两个形如 $\text{h} x$ 或者 $\text{m}x$ （ $x$ 为一个 $1 \sim n$ 的正整数），意为第 $x$ 道菜需要用用&amp;quot;汉式（&lt;code>h&lt;/code>）&amp;ldquo;或者&amp;quot;满式（&lt;code>m&lt;/code>）&amp;ldquo;来进行加工，每个要求中的两个条件必须至少满足一个，每种食材最多只能用一种方式来加工。&lt;/p>
&lt;p>请你判断存不存在一个合法的方式。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>2-SAT</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HNOI2010」平面图判定-2-SAT</title><link>https://blog.chenqiqian.com/posts/hnoi2010-planarity/</link><pubDate>Tue, 09 Apr 2019 22:51:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 09 Apr 2019 22:51:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2010-planarity/</guid><description>&lt;p>若能将无向图 $G=(V, E)$ 画在平面上使得任意两条无重合顶点的边不相交，则称 $G$ 是平面图。判定一个图是否为平面图的问题是图论中的一个重要问题。现在假设你要判定的是一类特殊的图，图中存在一个包含所有顶点的环，即存在哈密顿回路。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>2-SAT</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2014」数表-数论</title><link>https://blog.chenqiqian.com/posts/sdoi2014-table/</link><pubDate>Sat, 06 Apr 2019 20:06:54 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 06 Apr 2019 20:06:54 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2014-table/</guid><description>&lt;p>有一张 $n \times m$ 的数表，其第 $i$ 行第 $j$ 列（ $1 \le i \le n$， $1 \le j \le m$ ）的数值为能同时整除 $i$ 和 $j$ 的所有自然数之和。给定 $a$ ，计算数表中不大于 $a$ 的数之和。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>数论</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「AHOI2013」联通图-线段树分治+并查集</title><link>https://blog.chenqiqian.com/posts/ahoi2013-graph/</link><pubDate>Fri, 05 Apr 2019 17:15:43 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 05 Apr 2019 17:15:43 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/ahoi2013-graph/</guid><description>&lt;p>给定一个 $n$ 个点 $m$ 条边的无向连通图 $G$ 和若干个小集合 $S$，每个小集合包含 $c(1 \le c \le 4)$ 条边，对于每个集合，你需要确定将集合中的边删掉后改图是否保持联通。&lt;/p>
&lt;p>集合间的询问相互独立。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树分治</category><category>并查集</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HAOI2017」八纵八横-线段树分治+线性基</title><link>https://blog.chenqiqian.com/posts/haoi2017-railway/</link><pubDate>Fri, 05 Apr 2019 13:07:59 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 05 Apr 2019 13:07:59 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/haoi2017-railway/</guid><description>&lt;p>Anihc 国有 $n$ 个城市，这 $n$ 个城市从 $1$ ~ $n$ 编号，$1$ 号城市为首都。城市间初始时有 $m$ 条高速公路，每条高速公路都有一个非负整数的经济影响因子，每条高速公路的两端都是城市（可能两端是同一个城市)，保证任意两个城市都可以通过高速公路互达。&lt;/p>
&lt;p>Anihc 国正在筹划「八纵八横」的高铁建设计划，计划要修建一些高速铁路，每条高速铁路两端也都是城市（可能两端是同一个城市)，也都有一个非负整数的经济影响因子。国家还计划在「八纵八横」计划建成之后，将「一带一路」扩展为「一带一路一环」，增加「内陆城市经济环」即选择一条从首都出发沿若一系列高铁与高速公路走的路径，每条高铁或高速公路可以经过多次，每座城市也可以经过多次，最后路径又在首都结束。令「内陆城市经济环」的 GDP 为依次将这条路径上所经过的高铁或高速公路的经济影响因子异或起来（一条路经过多次则会被计算多次）。&lt;/p>
&lt;p>现在 Anihc 在会议上讨论「八纵八横」的建设计划方案，他们会不断地修改计划方案，希望你能实时反馈对于当前的「八纵八横」的建设计划的方案「内陆城市经济环」的最大是多少。&lt;/p>
&lt;p>初始时，八纵八横计划中不包含任何—条高铁，有以下三种操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>Add x y z&lt;/code> ：在计划中给在城市 $x$ 和城市 $y$ 之间建设一条高铁，其经济影响因子为 $z$ ，如果这是第 $k$ 个 Add 操作，则将这条高铁命名为 $k$ 号高铁。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>Cancel k&lt;/code> ：将计划中的 $k$ 号高铁取消掉，保证此时 $k$ 号高铁一定存在。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>Change k z&lt;/code> ：表示将第 $k$ 号高铁的经济影响因子更改为 $z$ ，保证此时 $k$ 号高铁一定存在。&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树分治</category><category>线性基</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「FJOI2015」火星商店问题-线段树分治+可持久化Trie</title><link>https://blog.chenqiqian.com/posts/fjoi2015-shop/</link><pubDate>Tue, 02 Apr 2019 21:50:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 02 Apr 2019 21:50:00 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/fjoi2015-shop/</guid><description>&lt;p>有 $n$ 个商店，每个商店都有一个特殊商品，每个人在任何时间都可以买。第一天可能没有进货，有若干次询问，而之后的每天，都有&lt;strong>一次&lt;/strong>进货和若干次询问，每次进货都是某个商店进了某个编号的货，每次询问都是询问在编号为 $l$ 到 $r$ 的商店中，在 $d$ 天内进的货的编号异或 $x$ 的最大值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>线段树分治</category><category>可持久化线段树</category><category>Trie</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2017」数字表格-数论</title><link>https://blog.chenqiqian.com/posts/sdoi2017-product/</link><pubDate>Sun, 31 Mar 2019 21:49:37 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 31 Mar 2019 21:49:37 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2017-product/</guid><description>&lt;p>Doris 刚刚学习了 fibnacci 数列，用 $f[i]$ 表示数列的第 $i$ 项，那么： $f[0] = 0,f[1] = 1,f[n] = f[n - 1] + f[n - 2](n \geq 2)$ 。&lt;/p>
&lt;p>Doris 用老师的超级计算机生成了一个 $n \times m$ 的表格，第 $i$ 行第 $j$ 列的格子中的数是 $f[\gcd(i, j)]$，其中 $\gcd(i, j)$ 表示 $i$ 与 $j$ 的最大公约数。&lt;/p>
&lt;p>Doris 的表格中共有 $n \times m$ 个数，她想知道这些数的乘积是多少。&lt;/p>
&lt;p>这些数的乘积实在是太大了，所以 Doris 只想知道乘积对 $1000000007$ 取模后的结果。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数论</category><category>数学</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2017」树点涂色-LCT+树链剖分</title><link>https://blog.chenqiqian.com/posts/sdoi2017-paint/</link><pubDate>Sat, 30 Mar 2019 13:00:28 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 30 Mar 2019 13:00:28 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2017-paint/</guid><description>&lt;p>Bob 有一棵 $n​$ 个点的有根树，其中 $1​$ 号点是根节点。Bob 在每个节点上涂了颜色，并且每个点上的颜色不同。&lt;/p>
&lt;p>定义一条路径的权值是，这条路径上的点（包括起点和终点）共有多少种不同的颜色。&lt;/p>
&lt;p>Bob 可能会进行这几种操作：&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 x&lt;/code>，把点 $x$ 到根节点的路径上的所有的点染上一种没有用过的新颜色；&lt;/li>
&lt;li>&lt;code>2 x y&lt;/code>，求 $x$ 到 $y$ 的路径的权值；&lt;/li>
&lt;li>&lt;code>3 x&lt;/code>，在以 $x$ 为根的子树中选择一个点，使得这个点到根节点的路径权值最大，求最大权值。&lt;/li>
&lt;/ul>
&lt;p>Bob 一共会进行 $m$ 次操作。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>树形结构</category><category>dfs序</category><category>LCT</category><category>线段树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「Luogu4449」于神之怒加强版-数学</title><link>https://blog.chenqiqian.com/posts/luogu-4499/</link><pubDate>Sat, 30 Mar 2019 12:05:02 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 30 Mar 2019 12:05:02 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-4499/</guid><description>&lt;p>给定 $n,m,k$ ，计算&lt;br />
$$&lt;br />
\sum_{i=1}^n\sum_{j=1}^m {\gcd(i,j)}^k&lt;br />
$$&lt;br />
对 $1000000007$ 取模的结果&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>数论</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「网络流 24 题」数字梯形-费用流</title><link>https://blog.chenqiqian.com/posts/loj6010/</link><pubDate>Sat, 30 Mar 2019 08:47:48 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 30 Mar 2019 08:47:48 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6010/</guid><description>&lt;p>给定一个由 $n$ 行数字组成的数字梯形如下图所示。梯形的第一行有 $m$ 个数字。从梯形的顶部的 $m$ 个数字开始，在每个数字处可以沿左下或右下方向移动，形成一条从梯形的顶至底的路径。&lt;/p>
&lt;p>分别遵守以下规则：&lt;/p>
&lt;ol>
&lt;li>从梯形的顶至底的 $m$ 条路径互不相交；&lt;/li>
&lt;li>从梯形的顶至底的 $m$ 条路径仅在数字结点处相交；&lt;/li>
&lt;li>从梯形的顶至底的 $m$ 条路径允许在数字结点相交或边相交。&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>网络流</category><category>费用流</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>「网络流 24 题」软件补丁-最短路</title><link>https://blog.chenqiqian.com/posts/loj6009/</link><pubDate>Sat, 30 Mar 2019 08:40:20 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 30 Mar 2019 08:40:20 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6009/</guid><description>&lt;p>某公司发现其研制的一个软件中有 $n$ 个错误，随即为该软件发放了一批共 $m$ 个补丁程序。每一个补丁程序都有其特定的适用环境，某个补丁只有在软件中包含某些错误而同时又不包含另一些错误时才可以使用。一个补丁在排除某些错误的同时，往往会加入另一些错误。&lt;/p>
&lt;p>换句话说，对于每一个补丁 $i$ ，都有 $2$ 个与之相应的错误集合 $B_1(i)$ 和 $B_2(i)$ ，使得仅当软件包含 $B_1(i)$ 中的所有错误，而不包含 $B_2(i)$ 中的任何错误时，才可以使用补丁 $i$ 。补丁 $i$ 将修复软件中的某些错误 $F_1(i)$ ，而同时加入另一些错误 $F_2(i)$ 。另外，每个补丁都耗费一定的时间。&lt;/p>
&lt;p>试设计一个算法，利用公司提供的 $m$ 个补丁程序将原软件修复成一个没有错误的软件，并使修复后的软件耗时最少。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>最短路</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>「网络流 24 题」餐巾计划-费用流</title><link>https://blog.chenqiqian.com/posts/loj6008/</link><pubDate>Sat, 30 Mar 2019 07:42:29 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 30 Mar 2019 07:42:29 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6008/</guid><description>&lt;p>一个餐厅在相继的 $n$ 天里，每天需用的餐巾数不尽相同。假设第 $i$ 天需要 $r_i$ 块餐巾。餐厅可以购买新的餐巾，每块餐巾的费用为 $P$ 分；或者把旧餐巾送到快洗部，洗一块需 $M$ 天，其费用为 $F$ 分；或者送到慢洗部，洗一块需 $n$ 天，其费用为 $S$ 分（$S &amp;lt; F$）。&lt;/p>
&lt;p>每天结束时，餐厅必须决定将多少块脏的餐巾送到快洗部，多少块餐巾送到慢洗部，以及多少块保存起来延期送洗。但是每天洗好的餐巾和购买的新餐巾数之和，要满足当天的需求量。&lt;/p>
&lt;p>试设计一个算法为餐厅合理地安排好 $n$ 天中餐巾使用计划,使总的花费最小。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>网络流</category><category>费用流</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>「随笔」无题</title><link>https://blog.chenqiqian.com/posts/esay-no-title/</link><pubDate>Fri, 29 Mar 2019 21:44:46 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 29 Mar 2019 21:44:46 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/esay-no-title/</guid><description>&lt;p>昨天回家的路上，在海淀黄庄路口的西北角上，有一位街头歌手在弹唱着吉他。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>随笔</category></item><item><title>「网络流 24 题」方格取数-二分图最大独立集</title><link>https://blog.chenqiqian.com/posts/loj6007/</link><pubDate>Sun, 24 Mar 2019 22:48:57 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 24 Mar 2019 22:48:57 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6007/</guid><description>&lt;p>在一个有 $m \times n$ 个方格的棋盘中，每个方格中有一个正整数。&lt;/p>
&lt;p>现要从方格中取数，使任意 $2$ 个数所在方格没有公共边，且取出的数的总和最大。试设计一个满足要求的取数算法。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>网络流</category><category>二分图</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>「网络流 24 题」试题库-网络最大流</title><link>https://blog.chenqiqian.com/posts/loj6006/</link><pubDate>Sun, 24 Mar 2019 22:39:47 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 24 Mar 2019 22:39:47 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6006/</guid><description>&lt;p>假设一个试题库中有 $n$ 道试题。每道试题都标明了所属类别。同一道题可能有多个类别属性。现要从题库中抽取 $m$ 道题组成试卷。并要求试卷包含指定类型的试题。试设计一个满足要求的组卷算法。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>网络流</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>常见最小费用最大流算法学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-mfmc/</link><pubDate>Fri, 22 Mar 2019 21:20:12 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 22 Mar 2019 21:20:12 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-mfmc/</guid><description>&lt;p>众所周知，最小费用最大流向来是一个算法很多的问题，下面总结了几个常用的最小费用最大流算法。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>网络流</category><category>费用流</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「网络流 24 题」最长递增子序列-dp+网络最大流</title><link>https://blog.chenqiqian.com/posts/loj6005/</link><pubDate>Thu, 21 Mar 2019 22:57:57 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 21 Mar 2019 22:57:57 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6005/</guid><description>&lt;p>给定正整数序列 $x_1 \sim x_n$ ，以下递增子序列均为非严格递增。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>计算其最长递增子序列的长度 $s$ 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>计算从给定的序列中最多可取出多少个长度为 $s$ 的递增子序列。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果允许在取出的序列中多次使用 $x_1$ 和 $x_n$ ，则从给定序列中最多可取出多少个长度为 $s$ 的递增子序列。&lt;/p>
&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>网络流</category><category>动态规划</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>「网络流 24 题」圆桌聚餐-网络最大流</title><link>https://blog.chenqiqian.com/posts/loj6004/</link><pubDate>Wed, 20 Mar 2019 21:12:17 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 20 Mar 2019 21:12:17 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6004/</guid><description>&lt;p>假设有来自 $m$ 个不同单位的代表参加一次国际会议。每个单位的代表数分别为 $r_i$ 。会议餐厅共有 $n$ 张餐桌，每张餐桌可容纳 $c_i$ 个代表就餐。&lt;/p>
&lt;p>为了使代表们充分交流，希望从同一个单位来的代表不在同一个餐桌就餐。&lt;/p>
&lt;p>试设计一个算法，给出满足要求的代表就餐方案。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>网络流</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>「网络流 24 题」魔术球-二分图最大匹配</title><link>https://blog.chenqiqian.com/posts/loj6003/</link><pubDate>Wed, 20 Mar 2019 20:45:09 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 20 Mar 2019 20:45:09 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6003/</guid><description>&lt;p>假设有 $n$ 根柱子，现要按下述规则在这 $n$ 根柱子中依次放入编号为 $1, 2, 3, 4, \cdots$ 的球。&lt;/p>
&lt;ol>
&lt;li>每次只能在某根柱子的最上面放球。&lt;/li>
&lt;li>在同一根柱子中，任何 $2$ 个相邻球的编号之和为完全平方数。&lt;/li>
&lt;/ol>
&lt;p>试设计一个算法，计算出在 $n$ 根柱子上最多能放多少个球。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>网络流</category><category>二分图</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>「网络流 24 题」最小路径覆盖-二分图最大匹配</title><link>https://blog.chenqiqian.com/posts/loj6002/</link><pubDate>Tue, 19 Mar 2019 22:38:15 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 19 Mar 2019 22:38:15 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6002/</guid><description>&lt;p>给定有向图 $G = (V, E)$。设 $P$ 是 $G$ 的一个简单路（顶点不相交）的集合。如果 $V$ 中每个顶点恰好在 $P$ 的一条路上，则称 $P$ 是 $G$ 的一个路径覆盖。 $P$ 中路径可以从 $V$ 的任何一个顶点开始，长度也是任意的，特别地，可以为 $0$ 。 $G$ 的最小路径覆盖是 $G$ 的所含路径条数最少的路径覆盖。&lt;/p>
&lt;p>设计一个有效算法求一个有向无环图 $G$ 的最小路径覆盖。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>网络流</category><category>二分图</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>「网络流 24 题」太空飞行计划-最大权闭合子图</title><link>https://blog.chenqiqian.com/posts/loj6001/</link><pubDate>Tue, 19 Mar 2019 19:43:52 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 19 Mar 2019 19:43:52 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6001/</guid><description>&lt;p>W 教授正在为国家航天中心计划一系列的太空飞行。每次太空飞行可进行一系列商业性实验而获取利润。现已确定了一个可供选择的实验集合 $E = { E_1, E_2, \cdots, E_m }$ ，和进行这些实验需要使用的全部仪器的集合 $I = { I_1, I_2, \cdots, I_n }$ 。实验 $E_j$ 需要用到的仪器是 $I$ 的子集 $R_j \subseteq I$ 。配置仪器 $I_k$ 的费用为 $c_k$ 美元。实验 $E_j$ 的赞助商已同意为该实验结果支付 $p_j$ 美元。W 教授的任务是找出一个有效算法，确定在一次太空飞行中要进行哪些实验并因此而配置哪些仪器才能使太空飞行的净收益最大。这里净收益是指进行实验所获得的全部收入与配置仪器的全部费用的差额。&lt;/p>
&lt;p>对于给定的实验和仪器配置情况，编程找出净收益最大的试验计划。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>最大权闭合子图</category><category>网络流</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>「网络流 24 题」搭配飞行员-二分图最大匹配</title><link>https://blog.chenqiqian.com/posts/loj6000/</link><pubDate>Tue, 19 Mar 2019 19:43:03 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 19 Mar 2019 19:43:03 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6000/</guid><description>&lt;p>飞行大队有若干个来自各地的驾驶员，专门驾驶一种型号的飞机，这种飞机每架有两个驾驶员，需一个正驾驶员和一个副驾驶员。由于种种原因，例如相互配合的问题，有些驾驶员不能在同一架飞机上飞行，问如何搭配驾驶员才能使出航的飞机最多。&lt;/p>
&lt;p>因为驾驶工作分工严格，两个正驾驶员或两个副驾驶员都不能同机飞行。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>网络流</category><category>二分图</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>「SPOJ26374」QTREE5-LCT</title><link>https://blog.chenqiqian.com/posts/spoj26374-qtree5/</link><pubDate>Mon, 18 Mar 2019 22:36:52 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 18 Mar 2019 22:36:52 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj26374-qtree5/</guid><description>&lt;p>你被给定一棵 $n$ 个点的树，点从 $1$ 到 $n$ 编号。每个点可能有两种颜色：黑或白。我们定义 $dist(a,b)$ 为点 $a$ 至点 $b$ 路径上的边个数。一开始所有的点都是黑色的。&lt;/p>
&lt;p>要求作以下操作：&lt;/p>
&lt;ul>
&lt;li>&lt;code>0 i&lt;/code> 将点 $i$ 的颜色反转（黑变白，白变黑）&lt;/li>
&lt;li>&lt;code>1 v&lt;/code> 询问 $dist(u,v)$ 的最小值。$u$ 点必须为白色（ $u$ 与 $v$ 可以相同），显然如果 $v$ 是白点，查询得到的值一定是 $0$ 。&lt;/li>
&lt;/ul>
&lt;p>特别地，如果作 &lt;code>1&lt;/code> 操作时树上没有白点，输出 $-1$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「SPOJ16580」QTREE7-LCT</title><link>https://blog.chenqiqian.com/posts/spoj16580-qtree7/</link><pubDate>Mon, 18 Mar 2019 20:54:33 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 18 Mar 2019 20:54:33 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj16580-qtree7/</guid><description>&lt;p>一棵树,每个点初始有个点权和颜色(输入会给你)&lt;/p>
&lt;ul>
&lt;li>&lt;code>0 u&lt;/code> : 询问所有 $u,v$ 路径上的最大点权,要满足 $u,v$ 路径上所有点的颜色都相同&lt;/li>
&lt;li>&lt;code>1 u&lt;/code> : 反转 $u$ 的颜色&lt;/li>
&lt;li>&lt;code>2 u w&lt;/code> :把 $u$ 的点权改成 $w$&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「SPOJ16549」QTREE6-LCT</title><link>https://blog.chenqiqian.com/posts/spoj16549-qtree6/</link><pubDate>Sun, 17 Mar 2019 12:58:44 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 17 Mar 2019 12:58:44 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj16549-qtree6/</guid><description>&lt;p>给你一棵 $n$ 个点的树，编号 $1$~$n$ 。每个点可以是黑色，可以是白色。初始时所有点都是黑色。有两种操作：&lt;/p>
&lt;ul>
&lt;li>&lt;code>0 u&lt;/code> ：询问有多少个节点 $v$ 满足路径 $u$ 到 $v$ 上所有节点（包括端点）都拥有相同的颜色&lt;/li>
&lt;li>&lt;code>1 u&lt;/code> ：翻转 $u$ 的颜色&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「SPOJ913」QTREE2-LCT</title><link>https://blog.chenqiqian.com/posts/spoj913-qtree2/</link><pubDate>Sat, 16 Mar 2019 09:01:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 16 Mar 2019 09:01:31 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj913-qtree2/</guid><description>&lt;p>给定一棵 $n$ 个点的树，边具有边权。要求作以下操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>DIST a b&lt;/code> 询问点 $a$ 至点 $b$ 路径上的边权之和&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>KTH a b k&lt;/code> 询问点 $a$ 至点 $b$ 有向路径上的第k个点的编号&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>有多组测试数据，每组数据以 &lt;code>DONE&lt;/code> 结尾。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>LCT</category><category>数据结构</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「SPOJ375」QTREE1-LCT</title><link>https://blog.chenqiqian.com/posts/spoj375-qtree1/</link><pubDate>Fri, 15 Mar 2019 20:59:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 15 Mar 2019 20:59:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj375-qtree1/</guid><description>&lt;p>给定 $n$ 个点的树，边按输入顺序编号为 $1,2,&amp;hellip;,n-1$，要求作以下操作：&lt;/p>
&lt;ul>
&lt;li>&lt;code>CHANGE i v&lt;/code> ：将第 $i$ 条边权值改为 $v$&lt;/li>
&lt;li>&lt;code>QUERY a b&lt;/code> ：询问从 $a$ 点到 $b$ 点路径上的最大边权&lt;/li>
&lt;/ul>
&lt;p>有多组测试数据，每组数据以 &lt;code>DONE&lt;/code> 结尾。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「SPOJ2666」QTREE4-LCT</title><link>https://blog.chenqiqian.com/posts/spoj2666-qtree4/</link><pubDate>Tue, 12 Mar 2019 20:51:57 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 12 Mar 2019 20:51:57 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj2666-qtree4/</guid><description>&lt;p>你被给定一棵 $n$ 个点的带边权的树（边权可以为负）。每个点可能有两种颜色：黑或白。我们定义 $dist(a,b)$ 为点 $a$ 至点 $b$ 路径上的边权值之和。一开始所有的点都是&lt;strong>白色&lt;/strong>的。&lt;/p>
&lt;p>要求作以下操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>C a&lt;/code> 将点a的颜色反转（黑变白，白变黑）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>A&lt;/code> 询问 $dist(a,b)$ 的最大值。$a,b$ 点都必须为白色（ $a$ 与 $b$ 可以相同），显然如果树上仍存在白点，查询得到的值一定是个非负数。&lt;br />
特别地，如果进行 &lt;code>A&lt;/code> 操作时树上没有白点，输出 &lt;code>They have disappeared.&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「BJOI2014」大融合-LCT</title><link>https://blog.chenqiqian.com/posts/bjoi2014-mixture/</link><pubDate>Mon, 11 Mar 2019 21:09:49 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 11 Mar 2019 21:09:49 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/bjoi2014-mixture/</guid><description>&lt;p>小强要在 $N$ 个孤立的星球上建立起一套通信系统。这套通信系统就是连接 $N$ 个点的一个树。 这个树的边是一条一条添加上去的。在某个时刻，一条边的负载就是它所在的当前能够 联通的树上路过它的简单路径的数量。&lt;/p>
&lt;p>现在，你的任务就是随着边的添加，动态的回答小强对于某些边的负载的询问。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「国家集训队」最长双回文子串-回文自动机</title><link>https://blog.chenqiqian.com/posts/luogu-4555/</link><pubDate>Sun, 10 Mar 2019 12:25:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 10 Mar 2019 12:25:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-4555/</guid><description>&lt;p>输入长度为 $n$ 的串 $S$ ，求 $S$ 的最长双回文子串 $T$,即可将 $T$ 分为两部分$X$ ， $Y$ ， （ $∣X∣,∣Y∣ \geq 1$ ）且 $X$ 和 $Y$ 都是回文串。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>回文自动机</category><category>OI</category><category>题解</category><category>国家集训队</category></item><item><title>「CF875E」Delivery Club-二分+贪心</title><link>https://blog.chenqiqian.com/posts/cf875e/</link><pubDate>Sun, 03 Mar 2019 23:07:28 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 03 Mar 2019 23:07:28 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf875e/</guid><description>&lt;p>有两个快递员，分别在 $s_1, s_2(0\le s_1,s_2\le 10^9)$ 位置。现在有 $n(1\le n\le 100000)$ 个任务，需要依次完成，每个任务用一个整数 $x_i$ 表示要将货物送到 $x_i$ 位置，让任何一个快递员到 $x_i$ 都可以。&lt;/p>
&lt;p>由于快递员之间需要有对讲机联系，请你设计一种方案使得两个快递员之间的最长距离最短。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>贪心</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF353E」 Antichain-乱搞</title><link>https://blog.chenqiqian.com/posts/cf353e/</link><pubDate>Sat, 02 Mar 2019 12:20:52 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 02 Mar 2019 12:20:52 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf353e/</guid><description>&lt;p>给定一个长度为 $n$ 的 $01$ 序列，第 $i$ 位是 $0$ 代表 节点 $i$ 到节点 $i \bmod n + 1$ 有一条有向边，第 $i$ 位是 $1$ 代表 节点 $i \bmod n + 1$ 到节点 i 有一条有向边。&lt;/p>
&lt;p>我们称一个节点对 $(u,v)$ 是妙的当且仅当不存在 $u$ 到 $v$ 和 $v$ 到 $u$ 的路径任何两者之一。&lt;/p>
&lt;p>现在你要从这个图里面挑出一个集合，使得集合中任意两个不同的节点 $u$ 和 $v$ 之间构成的节点对 $(u,v)$ 都是妙的。&lt;/p>
&lt;p>请你输出这个集合的大小的最大值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>乱搞</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF581F」 Zublicanes and Mumocrates - 树形dp</title><link>https://blog.chenqiqian.com/posts/cf581f/</link><pubDate>Sat, 02 Mar 2019 12:19:10 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 02 Mar 2019 12:19:10 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf581f/</guid><description>&lt;p>一棵树上有 $n$ 个节点，把每个节点染成黑色或白色，要求叶子节点一半是黑色，一半是白色（保证叶子节点的个数是偶数）。&lt;/p>
&lt;p>求在满足要求的情况下，最小的两端颜色不同的边的数量。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>树形dp</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF542D」Superhero's Job - dp + 数论</title><link>https://blog.chenqiqian.com/posts/cf542d/</link><pubDate>Sat, 02 Mar 2019 12:17:18 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 02 Mar 2019 12:17:18 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf542d/</guid><description>&lt;p>我们定义&lt;br />
$$&lt;br />
J(x) = \sum_{d | x} [\gcd(x,\frac{x}{d}) = 1] d&lt;br />
$$&lt;/p>
&lt;p>请你求出 $J(x) = A$ 有多少个 $x$ 满足条件。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>数学</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF804D」Expected diameter of a tree-树的直径+乱搞</title><link>https://blog.chenqiqian.com/posts/cf804d/</link><pubDate>Fri, 15 Feb 2019 22:20:30 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 15 Feb 2019 22:20:30 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf804d/</guid><description>&lt;p>给定一个含有 $n$ 个点， $m$ 条边的森林。有 $q$ 个询问，每次给出两个点 $u_i,v_i$ ，如果 $u_i$ 在联通块 $A$ 内，$v_i$ 在联通块 $B$ 内，我们随机选择两个点 $a \in A,b \in B$ ，我们在 $(a,b)$ 之间连一条边，如果这个连接成后新联通块不构成一个树，输出 $-1$ ，否则输出新联通块树的直径的期望。所有边权均为 $1$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>乱搞</category><category>树的直径</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF543C」Remembering Strings-状态压缩dp</title><link>https://blog.chenqiqian.com/posts/cf543c/</link><pubDate>Fri, 15 Feb 2019 16:30:51 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 15 Feb 2019 16:30:51 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf543c/</guid><description>&lt;p>给定 $n$ 个长度均为 $m$ 的字符串，再给出一个 $n$ 行 $m$ 列的矩阵 ${a_{nm}}$。&lt;br />
矩阵元素 $a_{ij}$ 代表把第 $i$ 个字符串第 $j$ 个字符改成其它任意字符所需要的代价。&lt;/p>
&lt;p>现在要求对于任意一个字符串，总存在某一位置 $j$ 使得该位置上的字符在任意其他字符串该位置的字符不同。&lt;/p>
&lt;p>即为对于第 x 个字符串 ，有 $\exists j \in [1,m] , \forall i \in [1,n],s_{xj} \neq s_{ij}$ 。&lt;/p>
&lt;p>求把所有字符串修改成满足上述要求的字符串的最小代价是多少？&lt;/p>
&lt;p>数据范围： $1 \le n,m \le 20,1\le a_{ij} \le 10^6$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>状压dp</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF321E」Ciel and Gondolas-wqs二分+决策单调性</title><link>https://blog.chenqiqian.com/posts/cf321e/</link><pubDate>Tue, 12 Feb 2019 22:07:23 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 12 Feb 2019 22:07:23 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf321e/</guid><description>&lt;p>Ciel 狐狸在游乐园里排队等待上摩天轮。现在有 $n$ 个人按编号顺次在队列里，有 $m$ 条船，第 $i$ 条船到时，前 $q_{i}$ 个人可以上船。保证 $\sum q_i = n$。 人总是不愿意和陌生人上同一条船的，当第 $i$ 个人与第 $j$ 个人处于同一条船上时，会产生 $u_{i,j}$ 的沮丧值。请你求出最小的沮丧值和。一条船上的人两两都会产生沮丧值，不会计算这个沮丧值两次。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>wqs二分</category><category>决策单调性</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF877F」Ann and Books-莫队</title><link>https://blog.chenqiqian.com/posts/cf877f/</link><pubDate>Mon, 11 Feb 2019 23:39:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 11 Feb 2019 23:39:31 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf877f/</guid><description>&lt;p>有 $n$ 本书，第 $i$ 本书中有 $a_i$ 个问题，均属于第 $t_i$ 类问题。&lt;/p>
&lt;p>有 $q$ 次询问，每次询问给出一个区间 $[l_i,r_i]$ ，询问有多少个原序列的连续子区间是给出区间的子区间，且该子区间中所有书中问题的和满足第 $1$ 类的问题恰好比第 $2$ 类的问题恰好多 $k$ 个。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>莫队</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF476E」Dreamoon and Strings-动态规划</title><link>https://blog.chenqiqian.com/posts/cf476e/</link><pubDate>Mon, 11 Feb 2019 23:23:18 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 11 Feb 2019 23:23:18 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf476e/</guid><description>&lt;p>Dreamoon 有一个字符串 $s$ 和一个模式串 $p$ ，他会先从 $s$ 中删除恰好 $x$ 个字符来产生一个新的字符串 $s'$ 。然后他会计算 $occ(s&amp;rsquo;,p)$，即从 $s'$ 中能找到的等于 pp 的不相交的子串数量的最大值。他想让 $occ(s&amp;rsquo;,p)$ 的值尽可能大。&lt;/p>
&lt;p>更形式地说，让我们用 $ans(x)$ 表示所有可以从 $s$ 中删去恰好 $x$ 个字符得到的 $s'$ 中 $occ(s&amp;rsquo;,p)$ 的最大值。Dreamoon 想要知道对于所有的 $x$ $(0 \leq x \leq |s|)$， $ans(x)$ 的值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF232D」Fence-后缀数组+主席树</title><link>https://blog.chenqiqian.com/posts/cf232d/</link><pubDate>Mon, 04 Feb 2019 17:48:34 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 04 Feb 2019 17:48:34 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf232d/</guid><description>&lt;p>给定长度为 $n$ 的整数序列 $h[n]$ ，有 $Q$ 个询问，每次给出 $l_1,r_1$ ，​询问有多少对 $l_2,r_2$ ，满足以下条件:&lt;/p>
&lt;ol>
&lt;li>$r_2 – l_2 = r_1 – l_1$&lt;/li>
&lt;li>区间 $[l_1, r_1]$ 与区间 $[l_2, r_2]$ 没有交集&lt;/li>
&lt;li>对于任意 $i \in [0,r_1 – l_1]$ ，满足 $h[l_1 + i] + h[l_2 + i] = h[l_1] + h[l_2]$&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>后缀数组</category><category>主席树</category><category>字符串</category><category>数据结构</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF103E」Buying Sets-霍尔定理-网络流-最小权闭合子图</title><link>https://blog.chenqiqian.com/posts/cf103e/</link><pubDate>Sat, 02 Feb 2019 21:59:59 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 02 Feb 2019 21:59:59 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf103e/</guid><description>&lt;p>我们有 $n$ 个集合，第 $i$ 个集合有 $m_i$ 个数（$1$ 到 $n$ 中的整数），权值为 $w_i$ 。&lt;/p>
&lt;p>现在请你从中选出 $k$ （$k$ 为任意 $0$ 到 $n$ 中的整数）个集合，满足这 $k$ 个集合的并集的大小为 $k$ ，询问这 $k$ 个集合的权值和最小值。&lt;/p>
&lt;p>保证从这 $n$ 选出任意 $x$ 个集合，他们的并集大小不小于 $k$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>网络流</category><category>图论</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF813D」Two Melodies-简单dp</title><link>https://blog.chenqiqian.com/posts/cf813d/</link><pubDate>Tue, 29 Jan 2019 07:10:48 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 29 Jan 2019 07:10:48 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf813d/</guid><description>&lt;p>给定一个长度为 $n$ 的数组，我们要从中找出两个不相交（不含邮相同元素的）的子序列，要求每个子序列的任意两个相邻元素的差的绝对值为 $1$ 或 在模 $7$ 意义下相同。请你求出这两个子序列长度和的最大值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「NOI2006」最大获利-网络流-最大权闭合子图</title><link>https://blog.chenqiqian.com/posts/noi2006-benefit/</link><pubDate>Sat, 26 Jan 2019 15:24:46 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 26 Jan 2019 15:24:46 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2006-benefit/</guid><description>&lt;p>新的技术正冲击着手机通讯市场，对于各大运营商来说，这既是机遇，更是挑战。THU 集团旗下的 CS&amp;amp;T 通讯公司在新一代通讯技术血战的前夜，需要做太多的准备工作，仅就站址选择一项，就需要完成前期市场研究、站址勘测、最优化等项目。&lt;/p>
&lt;p>在前期市场调查和站址勘测之后，公司得到了一共 $N$ 个可以作为通讯信号中转站的地址，而由于这些地址的地理位置差异，在不同的地方建造通讯中转站需要投入的成本也是不一样的，所幸在前期调查之后这些都是已知数据：建立第 $i$ 个通讯中转站需要的成本为 $P_i$ 。&lt;/p>
&lt;p>另外公司调查得出了所有期望中的用户群，一共 $M$ 个。关于第 i 个用户群的信息概括为 $A_i$ , $B_i$ 和 $C_i$ ：这些用户会使用中转站 $A_i$ 和中转站 $B_i$ 进行通讯，公司可以获益 $C_i$​ 。&lt;/p>
&lt;p>THU 集团的 CS&amp;amp;T 公司可以有选择的建立一些中转站（投入成本），为一些用户提供服务并获得收益（获益之和）。那么如何选择最终建立的中转站才能让公司的净获利最大呢？（净获利 = 获益之和 – 投入成本之和）&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>网络流</category><category>最大权闭合子图</category><category>图论</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>广州旅游记</title><link>https://blog.chenqiqian.com/posts/trip-thuwc2019/</link><pubDate>Sun, 20 Jan 2019 12:01:29 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 20 Jan 2019 12:01:29 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/trip-thuwc2019/</guid><description>&lt;p>本游记是真的游玩过程记录。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>OI</category><category>游记</category></item><item><title>「CTSC2012」熟悉的文章-广义后缀自动机</title><link>https://blog.chenqiqian.com/posts/ctsc2012-familiar/</link><pubDate>Fri, 18 Jan 2019 22:51:41 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 18 Jan 2019 22:51:41 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/ctsc2012-familiar/</guid><description>&lt;p>为了有说服力地向阿米巴展示阿米巴的作文是多么让人觉得“眼熟”，小强想出了一个评定作文 “熟悉程度”的量化指标：$L_0$ .小强首先将作文转化成一个 $01$ 串。之后，小强搜集了各路名家的文章，同样分别转化成 $01$ 串后，整理出一个包含了 $M$ 个 $01$ 串的“ 标准作文库 ”。&lt;/p>
&lt;p>小强认为：如果一个 $01$ 串长度不少于 $L$ 且在 标准作文库 中的某个串里出现过（即，它是 标准作文库 的 某个串 的一个 连续子串 ），那么它是“ 熟悉 ”的。对于一篇作文（一个 $01$ 串）A，如果能够把 A 分割成若干段子串，其中“ 熟悉 ” 的子串的 长度总和 不少于 A 总长度的 $90%$，那么称 A 是 “ 熟悉的文章 ”。 $L_0$ 是能够让 $A$ 成为 “ 熟悉的文章 ” 的 所有 $L$ 的最大值 （如果不存在这样的 $L$ ，那么规定 $L_0 = 0$ ）。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀自动机</category><category>OI</category><category>题解</category><category>WC/CTSC/APIO</category></item><item><title>「CF68D」Half-decay tree-期望瞎搞题</title><link>https://blog.chenqiqian.com/posts/cf68d/</link><pubDate>Wed, 09 Jan 2019 19:23:03 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 09 Jan 2019 19:23:03 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf68d/</guid><description>&lt;p>定义一个完全二叉树树高为根节点到叶子节点经过的边数。&lt;/p>
&lt;p>给定一个树高为 $h(1 \le h \le 30)$ 的完全二叉树，其中第 $x$ 个节点的左儿子为第 $2x$ 个节点，右儿子为第 $2x+1$ 个节点。&lt;/p>
&lt;p>现在有 $q(1 \le q \le 10^{5})$ 个，分为两种操作：&lt;/p>
&lt;ol>
&lt;li>&lt;code>add v e&lt;/code> （ $1 \le v \le 2^{h+1}-1,1 \le e \le 10^4$ ）表示给第 $v$ 个节点的权值加 $e$ 。&lt;/li>
&lt;li>&lt;code>decay&lt;/code> 操作。我们在这个二叉树里面以等概率选择一个叶子节点，将这个叶子节点到根的路径上所有的边都删去。在删除后，树会形成若干个联通块，我们定义某个联通块的的权值为这个联通块内所有节点的权值之和。我们定义删除后的树的权值为形成的所有联通块的权值的最大值。请你求出这个值的期望。&lt;strong>每次删除后会恢复所有删除的边。&lt;/strong>&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>期望</category><category>树形结构</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF86C」Genetic engineering-AC自动机+dp</title><link>https://blog.chenqiqian.com/posts/cf86c/</link><pubDate>Wed, 09 Jan 2019 19:18:07 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 09 Jan 2019 19:18:07 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf86c/</guid><description>&lt;p>我们定义一个 DNA 序列为仅有 &lt;code>ATCG&lt;/code> 四个字母的字符串。&lt;/p>
&lt;p>给出 $m(1 \le m \le 10)$ 个 DNA 序列模式串 $s_i$，每个长度均不超过 $10$ ，我们定义一个 DNA 序列 $w$ 是好的，当且仅当对于 $w$ 的每一个位置 $i$ ，都存在至少一个模式串 $s_j$ ， 使得 $w[l&amp;hellip;r] = s_j$（ $w[l&amp;hellip;r]$ 表示一个原字符串的一个子串） ， 其中 $1 \le l \le i \le r \le |w|$（ $|w|$ 为 DNA序列 $w$ 的长度） 。&lt;/p>
&lt;p>请你计算出所有长度为 $n(1 \le n \le 1000)$ 的好的 DNA 序列的个数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>动态规划</category><category>AC自动机</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF83D」Numbers-容斥原理</title><link>https://blog.chenqiqian.com/posts/cf83d/</link><pubDate>Wed, 09 Jan 2019 19:17:41 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 09 Jan 2019 19:17:41 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf83d/</guid><description>&lt;p>给出三个整数 $l,r,k (1 \le l \leq r \le 2\cdot10^9, 2 \le k \le 2 \cdot 10^9)$ 。&lt;/p>
&lt;p>求在区间 $[l,r]$ 内满足 $k \mid i$ ， 且对于任意 $j \in [2,k-1]$ 都&lt;strong>不满足&lt;/strong> $k \mid i$ 的数 $i$ 的个数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数论</category><category>容斥原理</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF540E」Infinite Inversions-动态开点线段树</title><link>https://blog.chenqiqian.com/posts/cf540e/</link><pubDate>Tue, 01 Jan 2019 14:11:22 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 01 Jan 2019 14:11:22 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf540e/</guid><description>&lt;p>现在有一个由所有正整数组成的无限递增序列： $p = {1,2,3,&amp;hellip;}$ 。&lt;/p>
&lt;p>对这个序列执行 $n$ 次交换操作。每次一个操作，给出两个整数 $a,b$，交换位置 $a$ 和 $b$ 处的元素。&lt;/p>
&lt;p>你的任务是在所有操作结束后，输出最终序列的逆序对个数，即满足 $i &amp;lt; j$ 且 $p_i &amp;gt; p_j$ 的有序数对 $(i,j)$ 的数量。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF486E」LIS of Sequence-简单数据结构</title><link>https://blog.chenqiqian.com/posts/cf486e/</link><pubDate>Tue, 01 Jan 2019 13:13:38 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 01 Jan 2019 13:13:38 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf486e/</guid><description>&lt;p>给你一个长度为 $n$ 的序列 $a_1,a_2,&amp;hellip;,a_n$ ，你需要把这 $n$ 个元素分成三类：$1,2,3$，每类的条件如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>所有&lt;/strong>的最长上升子序列&lt;strong>都不包含&lt;/strong>这个元素&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>有但非所有&lt;/strong>的最长上升子序列&lt;strong>包含&lt;/strong>这个元素&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>所有&lt;/strong>的最长上升子序列&lt;strong>都包含&lt;/strong>这个元素&lt;/p>
&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>数据结构</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF452E」Three strings-后缀数组</title><link>https://blog.chenqiqian.com/posts/cf452e/</link><pubDate>Mon, 31 Dec 2018 16:03:47 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 31 Dec 2018 16:03:47 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf452e/</guid><description>&lt;p>给出三个仅由小写字母构成的串 $A, B, C$ ，对于每个 $L \in [1, \min(len_A,len_B,len_C)]$ ，求满足$A[a,a+L-1] = B[b,b+L-1] = C[c,c+L-1]$ 的三元组 $(a,b,c)$ 的数量。&lt;/p>
&lt;p>答案对 $1000000007 (10 ^ 9 + 7)$ 取模，字符总数小于 $3 \times 10^5$。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF400E」Inna and Binary Logic-简单数据结构</title><link>https://blog.chenqiqian.com/posts/cf400e/</link><pubDate>Mon, 31 Dec 2018 15:39:18 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 31 Dec 2018 15:39:18 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf400e/</guid><description>&lt;p>Inna 有一个一个长度为 $n$ 的数列 $a_1 [1],a_1 [2],\dots,a_1 [n]$。&lt;/p>
&lt;p>她会进行如下操作，分为 $n$ 个阶段：&lt;br />
在第一阶段，Inna 从数组 $a_1$中写出所有数字，在第 $i$ 个 $(i \ge 2)$ 阶段 Inna 会写出数组的所有元素 $a_i$ ，由 $n - i + 1$ 个整数组成; 数组 $a_i$ 的第 $k$ 个数定义如下：$a_{i} [k] = a_{i-1} [k]\ \mathrm{AND}\ a_{i-1} [k + 1]$ 。 这里 $\mathrm{AND}$ 是二进制的逐位与运算。&lt;/p>
&lt;p>Dima 决定检验 Inna 的技能。 他要求 Inna 改变阵列，进行练习并说出她在当前练习中写出的所有元素的总和，即：&lt;/p>
&lt;p>$$&lt;br />
\sum_{i=1}^n \sum_{j=1}^{n-i+1} a_i[j]&lt;br />
$$&lt;/p>
&lt;p>请帮助 Inna 回答问题！&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF379F」New Year Tree-树的直径-倍增</title><link>https://blog.chenqiqian.com/posts/cf379f/</link><pubDate>Sun, 30 Dec 2018 09:35:29 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 30 Dec 2018 09:35:29 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf379f/</guid><description>&lt;p>你是一个程序猿，现在有一棵新年树（并不是传统的带着叶子的树）——它有四个节点： $1$ ，$2$ ，$3$ ，$4$ . 其中$2$ ，$3$ ，$4$ 的父亲都是 $1$ .&lt;/p>
&lt;p>新年里，程序猿们往往会做一些有趣的事情。你则选择以往这棵树上加节点来取乐。 一个添加节点的操作是这样的：&lt;/p>
&lt;ol>
&lt;li>找到树上的一个叶子结点 $v$ .&lt;/li>
&lt;li>设现在树上有 $n$ 个节点，那么你现在会加入两个节点$n+1$ 和 $n+2$ ，它们都会成为 $v$ 的儿子.&lt;/li>
&lt;/ol>
&lt;p>你的任务是在做 $q$ 次这样的操作，并在每做完一次后计算一次树的直径。来吧，我们一起来解决这道新年问题吧！&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树形结构</category><category>树的直径</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF369E」Valera and Queries-线段树</title><link>https://blog.chenqiqian.com/posts/cf369e/</link><pubDate>Sat, 29 Dec 2018 23:41:25 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 29 Dec 2018 23:41:25 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf369e/</guid><description>&lt;p>有 $n$ 条线段，分别为 $[l_i,r_i]$ 。&lt;/p>
&lt;p>有 $m$ 个询问，分别为 $cnt_i,p_1,p_2,&amp;hellip;,p_{cnt_i}$ 。&lt;/p>
&lt;p>对于每个询问，输出有多少线段至少覆盖这 $cnt_i$ ​个点中的一个。（$\sum cnt_i \le 3 \cdot 10^5$）&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>树套树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF311B」Cats Transport-斜率优化dp</title><link>https://blog.chenqiqian.com/posts/cf311b/</link><pubDate>Thu, 27 Dec 2018 20:55:16 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 27 Dec 2018 20:55:16 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf311b/</guid><description>&lt;p>Zxr960115 是一个大农场主。他养了 $m$ 只可爱的猫子,雇佣了 $p$ 个铲屎官。这里有一条又直又长的道路穿过了农场，有 $n$ 个山丘坐落在道路周围，编号自左往右从1到n。山丘 $i$ 与山丘 $i-1$ 的距离是 $d_i$ 米。铲屎官们住在 $1$ 号山丘。&lt;/p>
&lt;p>一天，猫子们外出玩耍。猫子 $i$ 去山丘 $h_i$ 游玩，在 $t_i$ 时间结束他的游玩，然后在山丘 $h_i$ 傻等铲屎官。铲屎官们必须把所有的猫子带上。每个铲屎官都会从 $1$ 走到 $n$ 号山丘，可以不花费时间的把所有路途上游玩结束的猫子带上。每个铲屎官的速度为一米每单位时间，并且足够强壮来带上任意数量的猫子。&lt;/p>
&lt;p>你的任务是安排每个铲屎官出发的时间，最小化猫子们等待的时间之和。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>斜率优化</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF256E」Lucky Arrays-简单线段树</title><link>https://blog.chenqiqian.com/posts/cf256e/</link><pubDate>Thu, 27 Dec 2018 20:51:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 27 Dec 2018 20:51:00 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf256e/</guid><description>&lt;p>给定一个长度为 $n(1 \le n \le 77777)$ 的数列 $a$ ，初始的时候全为 0。&lt;/p>
&lt;p>给出一个 $3 \times 3$ 的矩阵 $w_{i,j}$ ，$w_{i,j} = 1$ 时代表 $(i,j)$ 这个**有序**数对为和谐的数对，否则 $(i,j)$ 不为一个和谐数对。&lt;/p>
&lt;p>一个数列 $a$ 是和谐的当且仅当对于所有的 $1\le i \le n-1$ ， $(a_i,a_{i+1})$ 均为和谐数对。&lt;/p>
&lt;p>有 $m(1\le m \le 77777)$ 次修改和询问，每次给出两个整数 $v_i,t_i$，将 $a_{v_i} (1 \le v_i \le n)$ 修改为 $t_i(0\le t_i \le 3)$。&lt;/p>
&lt;p>每次修改后都询问，如果将数列里所有的 $0$ 都替换为任意 $1$ 到 $3$ 之间的整数（不同位置的 $0$ 可以替换为不同的数），那么最后产生的和谐的数列有多少种。每次修改后的查询并不会使数列发生任何改变。&lt;/p>
&lt;p>答案对 $777777777$ 取模。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF212D」Cutting a Fence-简单数据结构</title><link>https://blog.chenqiqian.com/posts/cf212d/</link><pubDate>Wed, 26 Dec 2018 19:36:56 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 26 Dec 2018 19:36:56 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf212d/</guid><description>&lt;p>给定一个长度为 $n$ 的数列 $a_1,a_2,&amp;hellip;,a_n$，定义 $f(x,k) = \min_{i=0}^{k-1} (a_{x+i})$ ，请对于每一个 $k = 1$ 到 $n$ ，求出 $\sum_{i=1}^{n-k+1} f(i,k)$ 的值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF208E」Blood Cousins-线段树合并</title><link>https://blog.chenqiqian.com/posts/cf208e/</link><pubDate>Tue, 25 Dec 2018 21:08:48 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 25 Dec 2018 21:08:48 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf208e/</guid><description>&lt;p>给你一片森林，每次询问一个点与多少个点拥有共同的 $K$ 级祖先。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树形结构</category><category>线段树合并</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF160E」Buses and People-线段树</title><link>https://blog.chenqiqian.com/posts/cf160e/</link><pubDate>Mon, 24 Dec 2018 23:57:34 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 24 Dec 2018 23:57:34 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf160e/</guid><description>&lt;p>Bertown 大街可以抽象为一条数轴。在数轴上有 $10^9$ 个巴士站。站点按照它们在数轴上的顺序从 $1$ 到 $10^9$ 的整数编号。这个城市有 $n$ 辆公共汽车。每天第 $i$ 个公共汽车从 $s_i$ 位置出发，到 $f_i$ 位置停止（ $s_i &amp;lt; f_i$ ），它在所有位于 $s_i$ 与 $f_i$ 的中间站点停靠并且仅在晚上返回。公共汽车在时间 $t_i$ 开始行驶，并且它也在时间 $t_i$ 完成行驶（行驶、停靠都是瞬间的）。所有公共汽车的开始时间 $t_i$ 都不同。公交车有无限的容量。&lt;/p>
&lt;p>Bertown 有很多居民。今天第 $i$ 个人要从 $l_i$ 位置出发到 $r_i$ 位置结束（ $l_i &amp;lt; r_i$ ）；第 $i$ 个人在时间 $b_i$ 进入他的出发位置（ $l_i$ ）。一方面，每个人都希望尽快到达目的地，另一方面，他不想换乘公交车。&lt;/p>
&lt;p>也就是：为第 $i$ 个人挑选的公交汽车 $j$ ，满足 $s_j \leq l_i$, $r_i \leq f_j$ 和 $b_i \leq t_j$ 的条件下，$t_j$ 最小。&lt;/p>
&lt;p>你的任务是确定每个人今天是否可以到达目的地，如果可以，找到每个人将乘坐的公交车的号码，不可以则输出 $-1$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF115E」Linear Kingdom Races-dp+线段树优化</title><link>https://blog.chenqiqian.com/posts/cf115e/</link><pubDate>Sun, 23 Dec 2018 22:26:23 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 23 Dec 2018 22:26:23 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf115e/</guid><description>&lt;p>你是一个赛车比赛的组织者，想在线性王国中安排一些比赛。&lt;/p>
&lt;p>线性王国有 $n$ 条连续的从左到右的道路。道路从左到右依次编号为从 $1$ 到 $n$ ，因此道路按照升序排列。在这些道路上可能会有几场比赛，每一场比赛都将使用这些道路的某个连续的子序列。而且，如果某场比赛举行了，你将获得一定数额的金钱。没有比赛在时间上重叠，所以每一段道路可以在多个比赛中使用。&lt;/p>
&lt;p>不幸的是，&lt;strong>所有道路&lt;/strong>的状况都不佳，需要修理。每条路都有与之相关的维修费用，你需要支付这笔费用来修理道路。只有在某场比赛中需要使用的所有道路&lt;strong>都进行了修复&lt;/strong>，才能进行比赛。你的任务是修复道路并使你的利润最大化。你的利润被定义为你从比赛中获得的总金额减去你花在修理道路上的钱。&lt;strong>请注意，您可以决定不修任何道路，并获得利润 $0$ 。&lt;/strong>&lt;/p>
&lt;p>输出你能获得的最大利润。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF91E」Igloo Skyscraper-分块</title><link>https://blog.chenqiqian.com/posts/cf91e/</link><pubDate>Sun, 23 Dec 2018 22:25:44 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 23 Dec 2018 22:25:44 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf91e/</guid><description>&lt;p>有 $n$ 个海象（编号为 $1$ 到 $n$ ）参加比赛建造自己的摩天大楼 。在 $t=0$ 时，第 $i$ 个海象的摩天大楼的高度为 $a_i$ 。每一时刻，编号为 $i$ 的海象会完成 $b_i$ 层楼的建造。&lt;/p>
&lt;p>在奥运会现场报道的记者向活动组织者提出了 $q$ 次询问。每次询问给出三个数字 $l_i$ ，$r_i$ ，$t_i$。活动组织者用数字 $x$ 回答每个查询，$x$ 满足：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>数字 $x$ 位于从 $l_i$ 到 $r_i$ 的区间，即 $l_i \leq x \leq r_i$ 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>编号为 $x$ 的海象的摩天大楼在 $t_i$ 时刻拥有编号在 $[l_i,r_i]$ 中所有海象的摩天大楼中的最大高度。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>对于每位记者的查询，输出符合上述标准的海象的编号 $x$ 。&lt;strong>如果有多个可能的答案，请输出其中任何一个。&lt;/strong>&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>分块</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「Luogu3768」简单的数学题-杜教筛</title><link>https://blog.chenqiqian.com/posts/luogu-3768/</link><pubDate>Thu, 20 Dec 2018 21:15:12 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 20 Dec 2018 21:15:12 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-3768/</guid><description>&lt;p>求&lt;br />
$$&lt;br />
\sum_{i=1}^n\sum_{j=1}^n ij\gcd(i,j))~mod~p&lt;br />
$$&lt;br />
其中 $n &amp;lt; 10^{10}$。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数论</category><category>数论函数</category><category>杜教筛</category><category>OI</category><category>题解</category><category>Luogu</category></item><item><title>「SCOI2016」美味-可持久化线段树</title><link>https://blog.chenqiqian.com/posts/scoi2016-delicious/</link><pubDate>Tue, 11 Dec 2018 21:16:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 11 Dec 2018 21:16:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2016-delicious/</guid><description>&lt;p>一家餐厅有 $n$ 道菜，编号 $1,\dots,n$ ，大家对第 $i$ 道菜的评价值为 $a_i(1 \leq i \leq n)$。有 $m$ 位顾客，第 $i$ 位顾客的期望值为 $b_i$，而他的偏好值为 $x_i$ 。因此，第 $i$ 位顾客认为第 $j$ 道菜的美味度为 $b_i\ \text{XOR}\ (a_j+x_i)$ ，$\text{XOR}$ 表示异或运算。&lt;/p>
&lt;p>第 $i$ 位顾客希望从这些菜中挑出他认为最美味的菜，即美味值最大的菜，但由于价格等因素，他只能从第 $l_i$ 道到第 $r_i$ 道中选择。请你帮助他们找出最美味的菜。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>可持久化主席树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2015」Kinoman-线段树</title><link>https://blog.chenqiqian.com/posts/poi2015-kinoman/</link><pubDate>Mon, 10 Dec 2018 19:50:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 10 Dec 2018 19:50:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2015-kinoman/</guid><description>&lt;p>共有 $m$ 部电影，编号为 $1$ 到 $m$，第 $i$ 部电影的好看值为 $w[i]$。在 $n$ 天之中（从 $1$ 到 $n$ 编号）每天会放映一部电影，第 $i$ 天放映的是第 $f[i]$ 部。你可以选择 $l,r(1 \leq l \leq r \leq n)$ ，并观看第 $l,l+1,\dots , r$ 天内所有的电影。如果同一部电影你观看多于一次，你会感到无聊，于是无法获得这部电影的好看值。所以你希望最大化观看且仅观看过一次的电影的好看值的总和。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「WC2011」最大XOR路径-dfs+线性基</title><link>https://blog.chenqiqian.com/posts/wc2011-xor/</link><pubDate>Tue, 27 Nov 2018 23:12:14 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 27 Nov 2018 23:12:14 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/wc2011-xor/</guid><description>&lt;p>考虑一个边权为非负整数的无向连通图，节点编号为 $1$ 到 $N$ ，试求出一条从 $1$ 号节点到 $N$ 号节点的路径，使得路径上经过的边的权值的 $\text{XOR}$ 和最大。&lt;/p>
&lt;p>路径可以重复经过某些点或边，当一条边在路径中出现了多次时，其权值在计算 $\text{XOR}$ 和时也要被计算相应多的次数。&lt;/p>
&lt;p>图中可能有重边或自环。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>线性基</category><category>OI</category><category>题解</category><category>WC/CTSC/APIO</category></item><item><title>「ZJOI2008」骑士-基环树+dp</title><link>https://blog.chenqiqian.com/posts/zjoi2008-knight/</link><pubDate>Tue, 27 Nov 2018 23:11:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 27 Nov 2018 23:11:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2008-knight/</guid><description>&lt;p>每个骑士都有且仅有一个自己最厌恶的骑士（当然不是他自己），他是绝对不会与自己最厌恶的人一同出征的。&lt;/p>
&lt;p>请你从所有的骑士中选出一个骑士军团，使得军团内没有矛盾的两人（不存在一个骑士与他最痛恨的人一同被选入骑士军团的情况），并且使得这支骑士军团最具有战斗力。&lt;/p>
&lt;p>为了描述战斗力，我们将骑士按照 $1$ 至 $n$ 编号，给每名骑士一个战斗力的估计，一个军团的战斗力为所有骑士的战斗力总和。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>基环树</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「JSOI2008」球形空间产生器-高斯消元</title><link>https://blog.chenqiqian.com/posts/jsoi2008-sphere/</link><pubDate>Sun, 25 Nov 2018 14:57:55 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 25 Nov 2018 14:57:55 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/jsoi2008-sphere/</guid><description>&lt;p>有一个球形空间产生器能够在 $n$ 维空间中产生一个坚硬的球体。现在，你被困在了这个 $n$ 维球体中，你只知道球面上 $n+1$ 个点的坐标，你需要以最快的速度确定这个 $n$ 维球体的球心坐标，以便于摧毁这个球形空间产生器。&lt;/p>
&lt;p>提示：给出两个定义：&lt;/p>
&lt;ol>
&lt;li>球心：到球面上任意一点距离都相等的点。&lt;/li>
&lt;li>距离：设两个n为空间上的点A, B的坐标为$(a_1, a_2, \cdots , a_n)$ , $(b_1, b_2, \cdots , b_n)$，则 AB 的距离定义为：$dist = \sqrt{ \sum_{i=1}^{n}(a_i - b_i)^2 }$&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>高斯消元</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>NOIp2018 游记&amp;题解</title><link>https://blog.chenqiqian.com/posts/trip-noip2018/</link><pubDate>Sun, 11 Nov 2018 23:12:52 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 11 Nov 2018 23:12:52 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/trip-noip2018/</guid><description>&lt;p>垃圾 CCF&lt;br />
毁我青春&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>OI</category><category>游记</category></item><item><title>「HNOI2007」梦幻岛宝珠-背包dp</title><link>https://blog.chenqiqian.com/posts/hnoi2007-diamond/</link><pubDate>Sat, 03 Nov 2018 09:57:05 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 03 Nov 2018 09:57:05 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2007-diamond/</guid><description>&lt;p>给你 $N$ 颗宝石，每颗宝石都有重量 $w_i$ 和价值 $v_i$。要你从这些宝石中选取一些宝石，保证其总重量不超过 $W$ ，且总价值最大。&lt;/p>
&lt;p>请你输出最大的总价值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>背包</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2008」递归数列-矩阵快速幂</title><link>https://blog.chenqiqian.com/posts/sdoi2008-sequence/</link><pubDate>Thu, 01 Nov 2018 23:50:47 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 01 Nov 2018 23:50:47 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2008-sequence/</guid><description>&lt;p>一个由自然数组成的数列按下式定义：&lt;/p>
&lt;p>对于 $i \leq k$ ：$a_i = b_i$&lt;/p>
&lt;p>对于 $i &amp;gt; k$ : $a_i = c_1a_{i-1} + c_2a_{i-2} + &amp;hellip; + c_ka_{i-k}$&lt;/p>
&lt;p>其中 $b_j$ 和 $c_j$ （ $1 \leq j \leq k$）是给定的自然数。写一个程序，给定自然数 $m \leq n$, 计算 $a_m + a_{m+1} + a_{m+2} + &amp;hellip; + a_n$, 并输出它除以给定自然数 $p$ 的余数的值。&lt;/p>
&lt;p>对于 100% 的测试数据：&lt;/p>
&lt;p>$1 \leq k \leq 15,1 \leq m \leq n \leq 10^{18},0 \le b_1, b_2,&amp;hellip; b_k, c_1, c_2,&amp;hellip;, c_k \leq 10^9,1 \leq p \leq 10^8$&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>矩阵快速幂</category><category>数学</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HEOI2016/TJOI2016」树-线段树</title><link>https://blog.chenqiqian.com/posts/heoi2016-tjoi2016-tree/</link><pubDate>Fri, 26 Oct 2018 23:30:51 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 26 Oct 2018 23:30:51 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/heoi2016-tjoi2016-tree/</guid><description>&lt;p>在2016年，佳媛姐姐刚刚学习了树，非常开心。现在他想解决这样一个问题：给定一颗有根树（根为 $1$），有以下两种操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>标记操作：对某个结点打上标记（在最开始，只有结点1有标记，其他结点均无标记，而且对于某个结点，可以打多次标记。）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>询问操作：询问某个结点最近的一个打了标记的祖先（这个结点本身也算自己的祖先）&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>你能帮帮她吗?&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>树形结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「JLOI2011」飞行路线-分层图最短路</title><link>https://blog.chenqiqian.com/posts/jloi2011-flight/</link><pubDate>Fri, 26 Oct 2018 23:29:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 26 Oct 2018 23:29:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/jloi2011-flight/</guid><description>&lt;p>Alice 和 Bob 现在要乘飞机旅行，他们选择了一家相对便宜的航空公司。该航空公司一共在 $n$ 个城市设有业务，设这些城市分别标记为 $0$ 到 $n-1$，一共有 $m$ 种航线，每种航线连接两个城市，并且航线有一定的价格。&lt;/p>
&lt;p>Alice和Bob现在要从一个城市沿着航线到达另一个城市，途中可以进行转机。航空公司对他们这次旅行也推出优惠，他们可以免费在最多 $k$ 种航线上搭乘飞机。那么Alice和Bob这次出行最少花费多少？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>最短路</category><category>分层图</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「随笔」月圆</title><link>https://blog.chenqiqian.com/posts/essay-moon/</link><pubDate>Fri, 26 Oct 2018 23:27:23 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 26 Oct 2018 23:27:23 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/essay-moon/</guid><description>&lt;blockquote>
&lt;p>2018年10月25日，农历戊戌年九月十七。&lt;/p>
&lt;/blockquote></description><dc:creator>cqqqwq</dc:creator><category>随笔</category></item><item><title>「SDOI2010」古代猪文-Lucas+CRT</title><link>https://blog.chenqiqian.com/posts/sdoi2010-pig/</link><pubDate>Tue, 23 Oct 2018 22:58:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 23 Oct 2018 22:58:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2010-pig/</guid><description>&lt;p>猪王国的文明源远流长，博大精深。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>中国剩余定理</category><category>Lucas定理</category><category>数论</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「随笔」天命 人事</title><link>https://blog.chenqiqian.com/posts/essay-r.i.p./</link><pubDate>Sun, 21 Oct 2018 22:31:20 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 21 Oct 2018 22:31:20 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/essay-r.i.p./</guid><description>&lt;blockquote>
&lt;p>很多事，虽说「人定胜天」，但天命毕竟不可违。&lt;/p>
&lt;/blockquote></description><dc:creator>cqqqwq</dc:creator><category>随笔</category></item><item><title>「HNOI2014」世界树-虚树+树形dp</title><link>https://blog.chenqiqian.com/posts/hnoi2014-worldtree/</link><pubDate>Sun, 21 Oct 2018 22:29:12 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 21 Oct 2018 22:29:12 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2014-worldtree/</guid><description>&lt;p>世界树的形态可以用一个数学模型来描述：世界树中有 $n$ 个种族，种族的编号分别从 $1$ 到 $n$，分别生活在编号为 $1$ 到 $n$ 的聚居地上，种族的编号与其聚居地的编号相同。有的聚居地之间有双向的道路相连，道路的长度为 $1$。保证连接的方式会形成一棵树结构，即所有的聚居地之间可以互相到达，并且不会出现环。定义两个聚居地之间的距离为连接他们的道路的长度；例如，若聚居地 $a$ 和 $b$ 之间有道路，$b$ 和 $c$ 之间有道路，因为每条道路长度为 $1$ 而且又不可能出现环，所以 $a$ 与 $c$ 之间的距离为 $2$。&lt;/p>
&lt;p>出于对公平的考虑，第 $i$ 年，世界树的国王需要授权 $m_i$ 个种族的聚居地为临时议事处。对于某个种族 $x$（$x$ 为种族的编号），如果距离该种族最近的临时议事处为 $y$（$y$ 为议事处所在聚居地的编号），则种族 $x$ 将接受 $y$ 议事处的管辖（如果有多个临时议事处到该聚居地的距离一样，则 $y$ 为其中编号最小的临时议事处）。&lt;/p>
&lt;p>现在国王想知道，在 $q$ 年的时间里，每一年完成授权后，当年每个临时议事处将会管理多少个种族（议事处所在的聚居地也将接受该议事处管理）。 现在这个任务交给了以智慧著称的灵长类的你：程序猿。请帮国王完成这个任务吧。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>虚树</category><category>树形结构</category><category>树形dp</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SHOI2014」概率充电器-树形dp</title><link>https://blog.chenqiqian.com/posts/shoi2014-charger/</link><pubDate>Thu, 18 Oct 2018 19:50:03 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 18 Oct 2018 19:50:03 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/shoi2014-charger/</guid><description>&lt;p>著名的电子产品品牌 SHOI 刚刚发布了引领世界潮流的下一代电子产品—— 概率充电器：&lt;/p>
&lt;p>“采用全新纳米级加工技术，实现元件与导线能否通电完全由真随机数决定！SHOI 概率充电器，您生活不可或缺的必需品！能充上电吗？现在就试试看吧！”&lt;/p>
&lt;p>SHOI 概率充电器由 $n-1$ 条导线连通了 $n$ 个充电元件。进行充电时，每条导 线是否可以导电以概率决定，每一个充电元件自身是否直接进行充电也由概率 决定。随后电能可以从直接充电的元件经过通电的导线使得其他充电元件进行间接充电。&lt;/p>
&lt;p>作为 SHOI 公司的忠实客户，你无法抑制自己购买 SHOI 产品的冲动。在排 了一个星期的长队之后终于入手了最新型号的 SHOI 概率充电器。你迫不及待地将 SHOI 概率充电器插入电源——这时你突然想知道，进入充电状态的元件个数的期望是多少呢？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>树形dp</category><category>期望</category><category>树形结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2007」仓库建设-斜率优化</title><link>https://blog.chenqiqian.com/posts/zjoi2007-warehouse/</link><pubDate>Thu, 18 Oct 2018 19:49:43 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 18 Oct 2018 19:49:43 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2007-warehouse/</guid><description>&lt;p>L 公司有 $N$ 个工厂，由高到底分布在一座山上。工厂 $1$ 在山顶，工厂 $N$ 在山脚。&lt;/p>
&lt;p>由于地形的不同，在不同工厂建立仓库的费用可能是不同的。第 $i$ 个工厂目前已有成品 $P_i$ 件，在第 $i$ 个工厂位置建立仓库的费用是 $C_i$ 。&lt;/p>
&lt;p>对于没有建立仓库的工厂，其产品应被运往其他的仓库进行储藏，而由于 L 公司产品的对外销售处设置在山脚的工厂 $N$ ，故产品只能往山下运（即只能运往编号更大的工厂的仓库），当然运送产品也是需要费用的，假设一件产品运送 $1$ 个单位距离的费用是 $1$ 。&lt;/p>
&lt;p>假设建立的仓库容量都都是足够大的，可以容下所有的产品。你将得到以下数据：&lt;/p>
&lt;ul>
&lt;li>工厂 $i$ 距离工厂 $1$ 的距离 $X_i$（其中 $X_1=0$ ）;&lt;/li>
&lt;li>工厂 $i$ 目前已有成品数量 $P_i$ ;&lt;/li>
&lt;li>在工厂 $i$ 建立仓库的费用 $C_i$ ;&lt;/li>
&lt;/ul>
&lt;p>请你帮助 L 公司寻找一个仓库建设的方案，使得总的费用（建造费用+运输费用）最小。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>斜率优化</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CTSC2018」混合果汁-整体二分</title><link>https://blog.chenqiqian.com/posts/ctsc2018-mix/</link><pubDate>Wed, 17 Oct 2018 22:54:44 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 17 Oct 2018 22:54:44 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/ctsc2018-mix/</guid><description>&lt;p>小 R 热衷于做黑暗料理，尤其是混合果汁。&lt;/p>
&lt;p>商店里有 $n$ 种果汁，编号为 $0,1,\cdots,n-1$ 。$i$ 号果汁的美味度是 $d_i$ ，每升价格为 $p_i$​ 。小 R 在制作混合果汁时，还有一些特殊的规定，即在一瓶混合果汁中，$i$ 号果汁最多只能添加 $l_i$ 升。&lt;/p>
&lt;p>现在有 $m$ 个小朋友过来找小 R 要混合果汁喝，他们都希望小 R 用商店里的果汁制作成一瓶混合果汁。其中，第 $j$ 个小朋友希望他得到的混合果汁总价格不大于 $g_j$ ，体积不小于 $L_j$​ 。在上述这些限制条件下，小朋友们还希望混合果汁的美味度尽可能地高，一瓶混合果汁的美味度等于所有参与混合的果汁的美味度的最小值。请你计算每个小朋友能喝到的最美味的混合果汁的美味度。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>整体二分</category><category>set</category><category>OI</category><category>题解</category><category>WC/CTSC/APIO</category></item><item><title>「SHOI2013」发牌-fhq Treap</title><link>https://blog.chenqiqian.com/posts/shoi2013-card/</link><pubDate>Mon, 15 Oct 2018 21:59:15 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 15 Oct 2018 21:59:15 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/shoi2013-card/</guid><description>&lt;p>在一些扑克游戏里，如德州扑克，发牌是有讲究的。一般称呼专业的发牌手为荷官。荷官在发牌前，先要销牌。所谓销牌，就是把当前在牌库顶的那一张牌移动到牌库底，它用来防止玩家猜牌而影响游戏。&lt;/p>
&lt;p>假设一开始，荷官拿出了一副新牌，这副牌有 $N$ 张不同的牌，编号依次为 $1$ 到 $N$ 。由于是新牌，所以牌是按照顺序排好的，从牌库顶开始，依次为 $1, 2, \dots$ 直到$N$ ，$N$ 号牌在牌库底。为了发完所有的牌，荷官会进行$N$ 次发牌操作，在第 $i$ 次发牌之前，他会连续进行 $R_i$ 次销牌操作， $R_i$ 由输入给定。请问最后玩家拿到这副牌的顺序是什么样的？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>平衡树</category><category>Treap</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2011」消耗战-虚树+树形dp</title><link>https://blog.chenqiqian.com/posts/sdoi2011-war/</link><pubDate>Mon, 15 Oct 2018 21:52:56 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 15 Oct 2018 21:52:56 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2011-war/</guid><description>&lt;p>给定一个 $n$ 个点，以 $1$ 为根的有根树，砍断第 $i$ 条边的代价为 $c_i$。有 $m$ 次询问，每次给出 $k_i$ 个关键点（保证关键点不含 $1$ 号节点），询问能够使 $1$ 号节点不能到达任何关键点，所要砍断边的代价和最小是多少。&lt;/p>
&lt;p>数据范围：$n,m \leq 250000,\sum {k_i} \leq 5 \times 10^5$&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>树形结构</category><category>虚树</category><category>树形dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「TJOI2015」棋盘-状压dp+矩阵快速幂</title><link>https://blog.chenqiqian.com/posts/tjoi2015-board/</link><pubDate>Thu, 04 Oct 2018 21:43:30 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 04 Oct 2018 21:43:30 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/tjoi2015-board/</guid><description>&lt;p>有一个 $n$ 行 $m$ 列的棋盘，棋盘上可以放很多特殊的棋子，每个棋子的攻击范围是 $3$ 行 $p$ 列。输入数据用一个 $3 \times p$ 的矩阵给出了棋子攻击范围的模板，棋子被默认在模板中的第 [二] 行，第 [$k+1$] 列，模板中棋子能攻击到的位置标记为 &lt;code>1&lt;/code>，不能攻击到的位置是 &lt;code>0&lt;/code> $(1 \leq p \leq m, 0 \leq k &amp;lt; p)$。输入数据保证模板中的第 [二] 行第 [$k+1$] 列是 &lt;code>1&lt;/code>。&lt;/p>
&lt;p>打开门的密码是这样的：在要求棋子互相不能攻击到的前提下，摆放棋子的方案数。注意什么棋子都不摆也算作一种可行方案。请求出方案对 $2^{32}$ 取余的结果即可。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>状压dp</category><category>动态规划</category><category>矩阵快速幂</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SCOI2014」方伯伯的OJ-动态开点线段树</title><link>https://blog.chenqiqian.com/posts/scoi2014-onlinejudge/</link><pubDate>Wed, 03 Oct 2018 23:35:33 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 03 Oct 2018 23:35:33 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2014-onlinejudge/</guid><description>&lt;p>方伯伯正在做他的 OJ 。现在他在处理 OJ 上的用户排名问题。 OJ 上注册了 $n$ 个用户，编号为 $1$ ～ $n$ ，一开始他们按照编号排名。&lt;/p>
&lt;p>方伯伯会按照心情对这些用户做以下四种操作，修改用户的排名和编号 ，共有 $m$ 次操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>操作格式为 &lt;code>1 x y&lt;/code> ，意味着将编号为 $x$ 的用户编号改为 $y$ ，而排名不变，执行完该操作后需要输出该用户在队列中的位置，数据保证 $x$ 必然出现在队列中，同时， $y$ 是一个当前不在排名中的编号。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作格式为 &lt;code>2 x&lt;/code> ，意味着将编号为 $x$ 的用户的排名提升到第一位，执行完该操作后需要输出执行该操作前编号为 $x$ 用户的排名。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作格式为 &lt;code>3 x&lt;/code> ，意味着将编号为 $x$ 的用户的排名降到最后一位，执行完该操作后需要输出执行该操作前编号为 $x$ 用户的排名。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作格式为 &lt;code>4 k&lt;/code>，意味着查询当前排名为 $k$ 的用户编号，执行完该操作后需要输出当前操作用户的编号。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>对于 $100%$ 的数据， $1 \leq n \leq 10^8,1 \leq m \leq 10^5$。&lt;/p>
&lt;p>强制在线。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HNOI2011」XOR和路径-高斯消元</title><link>https://blog.chenqiqian.com/posts/hnoi2011-xor/</link><pubDate>Tue, 02 Oct 2018 09:39:42 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 02 Oct 2018 09:39:42 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2011-xor/</guid><description>&lt;p>给定一个无向连通图，其节点编号为 $1$ 到 $N$，其边的权值为非负整数。试求出一条从 $1$ 号节点到 $N$ 号节点的路径，使得该路径上经过的边的权值的 “ $\text{XOR}$ 和” 最大。该路径可以重复经过某些节点或边，当一条边在路径中出现多次时，其权值在计算 “$\text{XOR}$ 和” 时也要被重复计算相应多的次数。&lt;/p>
&lt;p>直接求解上述问题比较困难，于是你决定使用非完美算法。具体来说，从 $1$ 号节点开始，以相等的概率，随机选择与当前节点相关联的某条边，并沿这条边走到下一个节点，重复这个过程，直到走到 $N$ 号节点为止，便得到一条从 $1$ 号节点到 $N$ 号节点的路径。显然得到每条这样的路径的概率是不同的，并且每条这样的路径的 “ $\text{XOR}$ 和” 也不一样。现在请你求出该算法得到的路径的 “ $\text{XOR}$ 和” 的期望值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>期望</category><category>高斯消元</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2005」聪聪与可可-期望dp</title><link>https://blog.chenqiqian.com/posts/noi2005-clever-and-cute/</link><pubDate>Tue, 02 Oct 2018 09:37:40 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 02 Oct 2018 09:37:40 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2005-clever-and-cute/</guid><description>&lt;p>给定一个 $n$ 个点， $m$ 条边的无向图。聪聪开始的时候在 &lt;code>S&lt;/code>，可可在节点 &lt;code>T&lt;/code> 处。以后的每个时间单位，可可都会选择去相邻的景点(可能有多个)中的一个或停留在原景点不动。而去这些地方所发生的概率是相等的。假设有 $P$ 个景点与景点 &lt;code>M&lt;/code> 相邻，它们分别是景点 &lt;code>R&lt;/code>、 景点 &lt;code>S&lt;/code>，……，景点 &lt;code>Q&lt;/code>，在时刻 $i$ 可可处在景点 &lt;code>M&lt;/code>，则在 $i+1$ 时刻，可可有 $\frac{1}{1+P}$ 的可能在景点 &lt;code>R&lt;/code>，有 $\frac{1}{1+P}$ 的可能在景点 &lt;code>S&lt;/code>，……，有 $\frac{1}{1+P}$ 的可能在景点 &lt;code>Q&lt;/code>，还有 $\frac{1}{1+P}$ 的可能停在景点 &lt;code>M&lt;/code>。&lt;/p>
&lt;p>当聪聪在景点 &lt;code>C&lt;/code> 时，她会选一个更靠近可可的景点，如果这样的景点有多个，她会选一个标号最小的景点。如果走完第一次移动以后仍然没吃到可可，她还可以在本段时间内再向可可进行一次移动。&lt;/p>
&lt;p>在每个时间单位，假设聪聪先走，可可后走。在某一时刻，若聪聪和可可位于同一个景点，则可怜的可可就被吃掉了。&lt;/p>
&lt;p>请求出平均情况下，聪聪用几个时间单位就可能吃到可可。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>期望dp</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「SCOI2007」排列-状压dp</title><link>https://blog.chenqiqian.com/posts/scoi2007-permutation/</link><pubDate>Tue, 02 Oct 2018 09:35:55 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 02 Oct 2018 09:35:55 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2007-permutation/</guid><description>&lt;p>给一个数字串 $s$ 和正整数 $d$ , 统计 $s$ 有多少种不同的排列能被 $d$ 整除（可以有前导 $0$ ）。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>状压dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SCOI2015」情报传递-树链剖分-主席树</title><link>https://blog.chenqiqian.com/posts/scoi2015-intelligence/</link><pubDate>Tue, 02 Oct 2018 09:33:57 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 02 Oct 2018 09:33:57 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2015-intelligence/</guid><description>&lt;p>给定一个 $n$ 个节点的有根树，开始时每个节点的权值都为 $0$ 。一共有 $q$ 个时刻，每个时刻可能有如下两个操作之一：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>给定一个节点 $x$ ，从下一个时刻起每个时刻都给该节点的权值 $+1$（每个节点只会有一次该操作）；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>给定两个节点 $x,y$ 以及一个数 $C$ ，求这两个节点的简单路径上权值大于 $C$ 的节点个数，以及简单路径上的所有节点个数。&lt;/p>
&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>主席树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2015」Myjnie-区间dp</title><link>https://blog.chenqiqian.com/posts/poi2015-myjnie/</link><pubDate>Sun, 23 Sep 2018 19:32:19 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 23 Sep 2018 19:32:19 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2015-myjnie/</guid><description>&lt;p>有 $n$ 家洗车店从左往右排成一排，每家店都有一个正整数价格 $p_i$ 。有 $m$ 个人要来消费，第 $i$ 个人会驶过第 $a_i$ 个开始一直到第 $b_i$ 个洗车店，且会选择这些店中最便宜的一个进行一次消费。但是如果这个最便宜的价格大于 $c_i$，那么这个人就不洗车了。&lt;/p>
&lt;p>请给每家店指定一个价格，使得所有人花的钱的总和最大。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>区间dp</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「HEOI2016/TJOI2016」序列-CDQ分治优化dp</title><link>https://blog.chenqiqian.com/posts/heoi2016-tjoi2016-sequence/</link><pubDate>Thu, 20 Sep 2018 20:09:29 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 20 Sep 2018 20:09:29 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/heoi2016-tjoi2016-sequence/</guid><description>&lt;p>佳媛姐姐过生日的时候，她的小伙伴从某宝上买了一个有趣的玩具送给他。玩具上有一个数列，数列中某些项的值可能会变化，但同一个时刻最多只有一个值发生变化。&lt;/p>
&lt;p>现在佳媛姐姐已经研究出了所有变化的可能性，她想请教你，能否选出一个子序列，使得在任意一种变化中，这个子序列都是不降的？请你告诉她这个子序列的最长长度即可 。&lt;/p>
&lt;p>注意：每种变化最多只有一个值发生变化。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>CDQ分治</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2011」拦截导弹-CDQ分治优化dp</title><link>https://blog.chenqiqian.com/posts/sdoi2011-missile/</link><pubDate>Thu, 20 Sep 2018 20:08:40 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 20 Sep 2018 20:08:40 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2011-missile/</guid><description>&lt;p>某国为了防御敌国的导弹袭击，发展出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度、并且能够拦截任意速度的导弹，但是以后每一发炮弹都不能高于前一发的高度，其拦截的导弹的飞行速度也不能大于前一发。某天，雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。&lt;/p>
&lt;p>在不能拦截所有的导弹的情况下，我们当然要选择使国家损失最小、也就是拦截导弹的数量最多的方案。但是拦截导弹数量的最多的方案有可能有多个，如果有多个最优方案，那么我们会随机选取一个作为最终的拦截导弹行动蓝图。&lt;/p>
&lt;p>我方间谍已经获取了所有敌军导弹的高度和速度，你的任务是计算出在执行上述决策时，每枚导弹被拦截掉的概率。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>CDQ分治</category><category>树状数组</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「BOI2007」Mokia-CDQ分治套CDQ分治</title><link>https://blog.chenqiqian.com/posts/boi2007-mokia/</link><pubDate>Mon, 17 Sep 2018 21:55:21 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 17 Sep 2018 21:55:21 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/boi2007-mokia/</guid><description>&lt;p>在定位系统中，世界被认为是一个 $W \times W$ 的正方形区域，由 $1 \times 1$ 的方格组成。每个方格都有一个坐标 $(x,y)$ ， $1 \leq x,y \leq W$。&lt;/p>
&lt;p>有三种命令，意义如下：&lt;/p>
&lt;ul>
&lt;li>&lt;code>0 W&lt;/code> 初始化一个全零矩阵。本命令仅开始时出现一次。&lt;/li>
&lt;li>&lt;code>1 x y A&lt;/code> 向方格 $(x,y)$ 中添加A个用户。A是正整数。&lt;/li>
&lt;li>&lt;code>2 X1 Y1 X2 Y2&lt;/code> 查询 $X1 \leq x \leq X_2$ ， $Y_1 \leq y \leq Y_2$ 所规定的矩形中的用户数量&lt;/li>
&lt;li>&lt;code>3&lt;/code> 无参数 结束程序。本命令仅结束时出现一次。&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>CDQ分治</category><category>数据结构</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「AHOI2013」作业-莫队</title><link>https://blog.chenqiqian.com/posts/ahoi2013-homework/</link><pubDate>Sat, 15 Sep 2018 22:38:10 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 15 Sep 2018 22:38:10 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/ahoi2013-homework/</guid><description>&lt;p>给定了一个长度为 $n$ 的数列和 $m$ 个询问。&lt;/p>
&lt;p>每个询问给定数列的一个区间 $[l,r]$ ，你要回答两个问题：&lt;/p>
&lt;ul>
&lt;li>该区间内大于等于 $a$ ，小于等于 $b$ 的数的个数，&lt;/li>
&lt;li>所有大于等于 $a$ ，小于等于 $b$ 的，且在该区间中出现过的数值的个数。&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>莫队</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CQOI2007」余数求和-数论+分块</title><link>https://blog.chenqiqian.com/posts/cqoi2007-sum/</link><pubDate>Sat, 15 Sep 2018 22:24:04 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 15 Sep 2018 22:24:04 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2007-sum/</guid><description>&lt;p>给出正整数 $n$ 和 $k$ ，计算&lt;br />
$$&lt;br />
\sum_{i=1}^{n} k \bmod i&lt;br />
$$&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>分块</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CQOI2018」破解D-H协议-BSGS算法</title><link>https://blog.chenqiqian.com/posts/cqoi2018-crack/</link><pubDate>Fri, 14 Sep 2018 22:43:37 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 14 Sep 2018 22:43:37 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2018-crack/</guid><description>&lt;p>简单题意：&lt;/p>
&lt;p>给定一个质数 $P$ 和其原根 $g$，给定 $X$ 求 $g^x \equiv X \pmod p$ 的非负整数解 $x$。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>数论</category><category>BSGS算法</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CQOI2018」异或序列-莫队</title><link>https://blog.chenqiqian.com/posts/cqoi2018-xor-sequence/</link><pubDate>Fri, 14 Sep 2018 22:11:20 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 14 Sep 2018 22:11:20 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2018-xor-sequence/</guid><description>&lt;p>已知一个长度为 $n$ 的整数数列 $a_1,a_2,&amp;hellip;,a_n$ ，给定查询参数 $l$ 、 $r$ ，问在 $a_l,a_{l+1},&amp;hellip;,a_r$ ​区间内，有多少子序列满足异或和等于 $k$ 。也就是说，对于所有的 $x,y$ $(l \leq x \leq y \leq r)$ ，能够满足 $a_x \bigoplus a_{x+1} \bigoplus &amp;hellip; \bigoplus a_y = k$ 的 $x,y$ 有多少组。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>莫队</category><category>分块</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「JSOI2007」字符加密-后缀数组</title><link>https://blog.chenqiqian.com/posts/jsoi2007-character/</link><pubDate>Tue, 11 Sep 2018 21:13:17 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 11 Sep 2018 21:13:17 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/jsoi2007-character/</guid><description>&lt;p>喜欢钻研问题的 $JS$ 同学，最近又迷上了对加密方法的思考。一天，他突然想出了一种他认为是终极的加密办法：把需要加密的信息排成一圈，显然，它们有很多种不同的读法。&lt;/p>
&lt;p>例如 &lt;code>JSOI07&lt;/code> ，可以读作： &lt;code>JSOI07&lt;/code> &lt;code>SOI07J&lt;/code> &lt;code>OI07JS&lt;/code> &lt;code>I07JSO&lt;/code> &lt;code>07JSOI&lt;/code> &lt;code>7JSOI0&lt;/code> ，把它们按照字符串的大小排序：&lt;/p>
&lt;ul>
&lt;li>&lt;code>07JSOI&lt;/code>&lt;/li>
&lt;li>&lt;code>7JSOI0&lt;/code>&lt;/li>
&lt;li>&lt;code>I07JSO&lt;/code>&lt;/li>
&lt;li>&lt;code>JSOI07&lt;/code>&lt;/li>
&lt;li>&lt;code>OI07JS&lt;/code>&lt;/li>
&lt;li>&lt;code>SOI07J&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>读出最后一列字符：&lt;code>I0O7SJ&lt;/code>，就是加密后的字符串。 但是，如果想加密的字符串实在太长，你能写一个程序完成这个任务吗？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2011」计算器-快速幂+扩展欧几里得+BSGS算法</title><link>https://blog.chenqiqian.com/posts/sdoi2011-calculator/</link><pubDate>Tue, 11 Sep 2018 20:54:56 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 11 Sep 2018 20:54:56 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2011-calculator/</guid><description>&lt;p>你被要求设计一个计算器完成以下三项任务：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>给定 $y,z,p$ ，计算 $y^z \bmod p$ 的值；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>给定 $y,z,p$ ，计算满足 $xy \equiv z \pmod p$ 的最小非负整数 $x$；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>给定 $y,z,p$ ，计算满足 $y^x \equiv z \pmod p$ 的最小非负整数 $x$。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>保证 $p$ 为质数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数论</category><category>快速幂</category><category>扩展欧几里得</category><category>BSGS算法</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2013」随机数生成器-BSGS算法</title><link>https://blog.chenqiqian.com/posts/sdoi2013-random/</link><pubDate>Tue, 11 Sep 2018 20:54:20 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 11 Sep 2018 20:54:20 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2013-random/</guid><description>&lt;p>小 $W$ 喜欢读书，尤其喜欢读《约翰克里斯朵夫》。最近小W准备读一本新书，这本书一共有 $P$ 页，页码范围为 $0 &amp;hellip; P-1$。&lt;/p>
&lt;p>小 $W$ 很忙，所以每天只能读一页书。为了使事情有趣一些，他打算使用 $\text{NOI2012}$ 上学习的线性同余法生成一个序列，来决定每天具体读哪一页。&lt;/p>
&lt;p>我们用 $X_i$ 来表示通过这种方法生成出来的第 $i$ 个数，也即小 $W$ 第 $i$ 天会读哪一页。这个方法需要设置 $3$ 个参数 $a,b,X_1$ ，满足 $0 \leq a,b,X_1 \leq p-1$ ，且 $a,b,X_1$ 都是整数。按照下面的公式生成出来一系列的整数：$X_{i+1} =(aX_i+b)\bmod p$ 其中 $\bmod$ 表示取余操作。&lt;/p>
&lt;p>但是这种方法可能导致某两天读的页码一样。&lt;/p>
&lt;p>小 $W$ 要读这本书的第 $t$ 页，所以他想知道最早在哪一天能读到第 $t$ 页，或者指出他永远不会读到第 $t$ 页。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数论</category><category>BSGS算法</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2008」仪仗队-欧拉函数</title><link>https://blog.chenqiqian.com/posts/sdoi2008-guard/</link><pubDate>Sun, 09 Sep 2018 20:29:47 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 09 Sep 2018 20:29:47 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2008-guard/</guid><description>&lt;p>作为体育委员， $C$ 君负责这次运动会仪仗队的训练。仪仗队是由学生组成的 $N \times N$ 的方阵，为了保证队伍在行进中整齐划一， $C$ 君会跟在仪仗队的左后方，根据其视线所及的学生人数来判断队伍是否整齐(如下图)。&lt;/p>
&lt;p>&lt;img src="1.jpg" alt="" />&lt;/p>
&lt;p>现在， $C$ 君希望你告诉他队伍整齐时能看到的学生人数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>数论</category><category>欧拉函数</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HNOI2004」L语言-AC自动机</title><link>https://blog.chenqiqian.com/posts/hnoi2004-language/</link><pubDate>Sun, 09 Sep 2018 20:11:35 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 09 Sep 2018 20:11:35 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2004-language/</guid><description>&lt;p>一段文章 $T$ 是由若干小写字母构成。一个单词 $W$ 也是由若干小写字母构成。一个字典 $D$ 是若干个单词的集合。我们称一段文章 $T$ 在某个字典 $D$ 下是可以被理解的，是指如果文章 $T$ 可以被分成若干部分，且每一个部分都是字典 $D$ 中的单词。&lt;/p>
&lt;p>给定一个字典 $D$ ，你的程序需要判断若干段文章在字典 $D$ 下是否能够被理解。并给出其在字典 $D$ 下能够被理解的最长前缀的位置。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>AC自动机</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「Luogu 2801」教主的魔法-分块</title><link>https://blog.chenqiqian.com/posts/luogu-2801/</link><pubDate>Sun, 09 Sep 2018 20:00:07 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 09 Sep 2018 20:00:07 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-2801/</guid><description>&lt;p>给定一个长度为 $N$ 的数列，每次一个操作或询问：&lt;/p>
&lt;ul>
&lt;li>把闭区间 $[L, R]$ 内的数全部加上一个整数 $W$&lt;/li>
&lt;li>问闭区间 $[L, R]$ 内有多少英雄身高大于等于 $C$&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>分块</category><category>数据结构</category><category>OI</category><category>题解</category><category>Luogu</category></item><item><title>「HEOI2016/TJOI2016」排序-线段树</title><link>https://blog.chenqiqian.com/posts/heoi2016-tjoi2016-sort/</link><pubDate>Wed, 29 Aug 2018 10:38:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 29 Aug 2018 10:38:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/heoi2016-tjoi2016-sort/</guid><description>&lt;p>在 $2016$ 年，佳媛姐姐喜欢上了数字序列。因而他经常研究关于序列的一些奇奇怪怪的问题，现在他在研究一个难题，需要你来帮助他。这个难题是这样子的：给出一个 $1$ 到 $n$ 的全排列，现在对这个全排列序列进行 $m$ 次局部排序，排序分为两种：&lt;/p>
&lt;ul>
&lt;li>$(0,l,r)$表示将区间 $[l,r]$ 的数字升序排序&lt;/li>
&lt;li>$(1,l,r)$表示将区间 $[l,r]$ 的数字降序排序&lt;br />
最后询问第 $q$ 位置上的数字。&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>排序</category><category>二分答案</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2007」货币兑换-Splay+斜率优化</title><link>https://blog.chenqiqian.com/posts/noi2007-cash/</link><pubDate>Tue, 28 Aug 2018 22:59:54 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 28 Aug 2018 22:59:54 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2007-cash/</guid><description>&lt;p>小 $Y$ 最近在一家金券交易所工作。该金券交易所只发行交易两种金券：$A$ 纪念券（以下简称 $A$ 券）和 $B$ 纪念券（以下简称 $B$ 券）。每个持有金券的顾客都有一个自己的帐户。金券的数目可以是一个实数。每天随着市场的起伏波动，两种金券都有自己当时的价值，即每一单位金券当天可以兑换的人民币数目。我们记录第 $K$ 天中 $A$ 券 和 $B$ 券的价值分别为 $A_K$ 和 $B_K$（元/单位金券）。为了方便顾客，金券交易所提供了一种非常方便的交易方式：比例交易法。比例交易法分为两个方面：&lt;/p>
&lt;p>（a）卖出金券：顾客提供一个 $[0,100]$ 内的实数 $OP$ 作为卖出比例，其意义为：将 $OP%$ 的 $A$ 券和 $OP%$ 的 $B$ 券以当时的价值兑换为人民币；&lt;/p>
&lt;p>（b）买入金券：顾客支付 $IP$ 元人民币，交易所将会兑换给用户总价值为 $IP$ 的金券，并且，满足提供给顾客的 $A$ 券和 $B$ 券的比例在第 $K$ 天恰好为 $Rate_K$ ；&lt;/p>
&lt;p>注意到，&lt;strong>同一天内可以进行多次操作&lt;/strong>。小 $Y$ 是一个很有经济头脑的员工，通过较长时间的运作和行情测算，他已经知道了未来 $N$ 天内的 $A$ 券和 $B$ 券的价值以及 $Rate$ 。他还希望能够计算出来，如果开始时拥有 $S$ 元钱，那么 $N$ 天后最多能够获得多少元钱。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>Splay</category><category>平衡树</category><category>斜率优化</category><category>动态规划</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「NOI2015」寿司晚宴-状压dp</title><link>https://blog.chenqiqian.com/posts/noi2015-dinner/</link><pubDate>Tue, 28 Aug 2018 22:58:15 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 28 Aug 2018 22:58:15 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2015-dinner/</guid><description>&lt;p>为了庆祝 $NOI$ 的成功开幕，主办方为大家准备了一场寿司晚宴。小 $G$ 和小 $W$ 作为参加 $NOI$ 的选手，也被邀请参加了寿司晚宴。&lt;/p>
&lt;p>在晚宴上，主办方为大家提供了 $n−1$ 种不同的寿司，编号 $1,2,3,⋯,n-1$ ，其中第种寿司的美味度为 $i+1$（即寿司的美味度为从 $2$ 到 $n$ ）。&lt;/p>
&lt;p>现在小 $G$ 和小 $W$ 希望每人选一些寿司种类来品尝，他们规定一种品尝方案为不和谐的当且仅当：小 $G$ 品尝的寿司种类中存在一种美味度为 $x$ 的寿司，小 $W$ 品尝的寿司中存在一种美味度为 $y$ 的寿司，而 $x$ 与 $y$ 不互质。&lt;/p>
&lt;p>现在小 $G$ 和小 $W$ 希望统计一共有多少种和谐的品尝寿司的方案（对给定的正整数 $p$ 取模）。注意一个人可以不吃任何寿司。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>状压dp</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>莫比乌斯反演入门题目-题解</title><link>https://blog.chenqiqian.com/posts/notes-mobius-inversion/</link><pubDate>Sat, 25 Aug 2018 09:18:08 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 25 Aug 2018 09:18:08 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-mobius-inversion/</guid><description>&lt;p>以下有几道莫比乌斯反演入门题的详尽版的题解（公式推演）。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>莫比乌斯反演</category><category>OI</category><category>题解</category></item><item><title>「NOI2009」诗人小G-动态规划+决策单调性</title><link>https://blog.chenqiqian.com/posts/noi2009-poet/</link><pubDate>Fri, 24 Aug 2018 14:43:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 24 Aug 2018 14:43:31 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2009-poet/</guid><description>&lt;p>小 $\text{G}$ 是一个出色的诗人，经常作诗自娱自乐。但是，他一直被一件事情所困扰，那就是诗的排版问题。&lt;/p>
&lt;p>一首诗包含了若干个句子，对于一些连续的短句，可以将它们用空格隔开并放在一行中，注意一行中可以放的句子数目是没有限制的。小 $\text{G}$ 给每首诗定义了一个行标准长度（行的长度为一行中符号的总个数），他希望排版后每行的长度都和行标准长度相差不远。显然排版时，&lt;strong>不应改变原有的句子顺序&lt;/strong>，并且小 $\text{G}$ 不允许把一个句子分在两行或者更多的行内。在满足上面两个条件的情况下，小 $\text{G}$ 对于排版中的每行定义了一个不协调度, 为这行的实际长度与行标准长度差值绝对值的 $P$ 次方，而一个排版的不协调度为所有行不协调度的总和。&lt;/p>
&lt;p>小 $\text{G}$ 最近又作了几首诗，现在请你对这首诗进行排版，使得排版后的诗尽量协调（即不协调度尽量小），并把排版的结果告诉他。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>决策单调性</category><category>二分查找</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「APIO2014」序列分割-动态规划-斜率优化</title><link>https://blog.chenqiqian.com/posts/apio2014-sequence/</link><pubDate>Fri, 24 Aug 2018 13:16:24 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 24 Aug 2018 13:16:24 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/apio2014-sequence/</guid><description>&lt;p>你正在玩一个关于长度为 $n$ 的非负整数序列的游戏。这个游戏中你需要把序列分成 $k + 1$ 个非空的块。为了得到 $k + 1$ 块，你需要重复下面的操作 $k$ 次：&lt;/p>
&lt;ul>
&lt;li>选择一个有超过一个元素的块（初始时你只有一块，即整个序列）
&lt;ul>
&lt;li>选择两个相邻元素把这个块从中间分开，得到两个非空的块。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>每次操作后你将获得那两个新产生的块的元素和的乘积的分数。你想要最大化最后的总得分。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>斜率优化</category><category>OI</category><category>题解</category><category>WC/CTSC/APIO</category></item><item><title>「NOI2012」魔幻棋盘-差分+树套树</title><link>https://blog.chenqiqian.com/posts/noi2012-board/</link><pubDate>Fri, 24 Aug 2018 13:15:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 24 Aug 2018 13:15:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2012-board/</guid><description>&lt;p>将要读二年级的小 Q 买了一款新型益智玩具——魔幻棋盘，它是一个 $N$ 行 $M$ 列的网格棋盘，每个格子中均有一个正整数。棋盘守护者在棋盘的第 $X$ 行第 $Y$ 列（行与列均从 $1$ 开始编号）并且始终不会移动。棋盘守护者会进行两种操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>询问：他会以自己所在位置为基础，向四周随机扩展出一块大小不定的矩形区域，向你询问这一区域内所有数的最大公约数是多少。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改：他会随意挑选棋盘上的一块矩形区域，将这一区域内的所有数同时加上一个给定的整数。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>游戏说明书上附有这样一句话“聪明的小朋友，当你连续答对 $19930324$ 次询问后会得到一个惊喜噢！”。小 Q 十分想得到这个惊喜，于是每天都在玩这个玩具。但由于他粗心大意，经常算错数，难以达到这个目标。于是他来向你寻求帮助，希望你帮他写一个程序来回答棋盘守护者的询问，并保证 $100%$ 的正确率。&lt;/p>
&lt;p>为了简化问题，你的程序只需要完成棋盘守护者的 $T$ 次操作，并且问题保证任何时刻棋盘上的数字均为不超过 $2^{62} - 1$ 的正整数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>树套树</category><category>数据结构</category><category>差分</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「NOI2012」随机数生成器-矩阵快速幂</title><link>https://blog.chenqiqian.com/posts/noi2012-random/</link><pubDate>Tue, 21 Aug 2018 21:56:54 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 21 Aug 2018 21:56:54 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2012-random/</guid><description>&lt;p>给定正整数 $n,m,a,c,X[0],g$ ，求按照 $X[n+1] = (a X[n] + c) \bmod m$ 生成出的第 $n$ 项 $X[n] \bmod g$ 的值。&lt;/p>
&lt;p>数据范围： $n,m,a,c,X[0] \leq 10^{18}$&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>矩阵快速幂</category><category>递推</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「NOI2010」海拔-网络流/最短路</title><link>https://blog.chenqiqian.com/posts/noi2010-altitude/</link><pubDate>Tue, 21 Aug 2018 21:53:16 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 21 Aug 2018 21:53:16 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2010-altitude/</guid><description>&lt;blockquote>
&lt;p>题面请点击&lt;strong>查看全文&lt;/strong>&lt;/p>
&lt;/blockquote></description><dc:creator>cqqqwq</dc:creator><category>最短路</category><category>网络流</category><category>对偶图</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「APIO2008」免费道路-生成树+并查集</title><link>https://blog.chenqiqian.com/posts/apio2008-road/</link><pubDate>Sat, 18 Aug 2018 20:44:05 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 18 Aug 2018 20:44:05 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/apio2008-road/</guid><description>&lt;p>给定一个 $n$ 个点，$m$ 条边的无向图，每条边有两种权值： $0$ 或者 $1$ 。&lt;/p>
&lt;p>先询问能不能找出一个生成树，使得其中恰有 $k$ 条 $0$ 边，若存在，输出任意一个方案，否则输出 &lt;code>no solution&lt;/code> 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>生成树</category><category>数据结构</category><category>并查集</category><category>OI</category><category>题解</category><category>WC/CTSC/APIO</category></item><item><title>「SHOI2016」随机序列-线段树</title><link>https://blog.chenqiqian.com/posts/shoi2016-sequence/</link><pubDate>Sat, 18 Aug 2018 20:14:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 18 Aug 2018 20:14:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/shoi2016-sequence/</guid><description>&lt;p>你的面前有 $n$ 个数排成一行，分别为 $a_1,a_2,&amp;hellip;,a_n$ 。你打算在每相邻的两个 $a_i$c和 $a_{i+1}$ 间都插入一个加号、减号或者乘号。那么一共有 $3^{n-1}$ 种可能的表达式。&lt;/p>
&lt;p>你对所有可能的表达式的值的和非常感兴趣。但这毕竟太简单了，所以你还打算支持一个修改操作，可以修改某个 $a_i$ 的值。&lt;/p>
&lt;p>你能够编写一个程序对每个修改都输出修改完之后所有可能表达式的和吗？注意，修改是永久的，也就是说每次修改都是在上一次修改的基础上进行，而不是在最初的表达式上进行。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2010」航空管制-拓扑排序</title><link>https://blog.chenqiqian.com/posts/noi2010-airplane/</link><pubDate>Sat, 18 Aug 2018 19:45:43 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 18 Aug 2018 19:45:43 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2010-airplane/</guid><description>&lt;p>假设目前被延误航班共有 $n$ 个，编号为 $1$ 至 $n$ 。机场只有一条起飞跑道，所有的航班需按某个顺序依次起飞（称这个顺序为起飞序列）。定义一个航班的起飞序号为该航班在起飞序列中的位置，即是第几个起飞的航班。&lt;/p>
&lt;p>起飞序列还存在两类限制条件：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>第一类（最晚起飞时间限制）：编号为 $i$ 的航班起飞序号不得超过 $k_i$ ;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第二类（相对起飞顺序限制）：存在一些相对起飞顺序限制 $(a, b)$ ，表示航班 $a$ 的起飞时间必须早于航班 $b$ ，即航班 $a$ 的起飞序号必须小于航班 $b$ 的起飞序号。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>小 $\text{X}$ 思考的第一个问题是，若给定以上两类限制条件，是否可以计算出一个可行的起飞序列。第二个问题则是，在考虑两类限制条件的情况下，如何求出每个航班在所有可行的起飞序列中的最小起飞序号。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>拓扑排序</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「POI2012」Cloakroom-类背包dp</title><link>https://blog.chenqiqian.com/posts/poi2012-cloakroom/</link><pubDate>Thu, 16 Aug 2018 21:26:17 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 16 Aug 2018 21:26:17 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2012-cloakroom/</guid><description>&lt;p>有 $n$ 件物品，每件物品有三个属性 $a[i], b[i], c[i]$ , $(a[i] &amp;lt; b[i])$ 。&lt;/p>
&lt;p>再给出 $q$ 个询问，每个询问由非负整数 $m$ , $k$ , $s$ 组成，问是否能够选出某些物品使得：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对于每个选的物品 $i$ ，满足 $a[i] \leq m$ 且 $b[i]&amp;gt;m+s$ 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>所有选出物品的 $c[i]$ 的和正好是 $k$ 。&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>背包</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「ZJOI2012」小蓝的好友-Treap</title><link>https://blog.chenqiqian.com/posts/zjoi2012-friend/</link><pubDate>Thu, 16 Aug 2018 21:24:02 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 16 Aug 2018 21:24:02 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2012-friend/</guid><description>&lt;p>简单版题意：&lt;/p>
&lt;p>给定一个 $R \times C$ 的矩形，在其中 $N$ 个位置有&lt;strong>随机生成&lt;/strong>的资源点。现在请你求出在所有的子矩形中，至少包含一个资源点的矩形数量。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>Treap</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2014」Salad Bar-瞎搞</title><link>https://blog.chenqiqian.com/posts/poi2014-salad-bar/</link><pubDate>Thu, 16 Aug 2018 21:23:22 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 16 Aug 2018 21:23:22 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2014-salad-bar/</guid><description>&lt;p>有一个长度为 $n$ 的字符串，每一位只会是 $\text{p}$ 或 $\text{j}$ 。求一个最长子串，使得不管是从左往右还是从右往左取，都保证每时每刻已取出的 $\text{p}$ 的个数不小于 $\text{j}$ 的个数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>瞎搞</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「BZOJ4278」[ONTAK2015]Tasowanie-后缀数组</title><link>https://blog.chenqiqian.com/posts/bzoj4278-tasowanie/</link><pubDate>Tue, 14 Aug 2018 19:56:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 14 Aug 2018 19:56:00 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/bzoj4278-tasowanie/</guid><description>&lt;p>给定两个数字串 $A$ 和 $B$ ，通过将 $A$ 和 $B$ 进行二路归并得到一个新的数字串 $T$ ，请找到字典序最小的 $T$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>后缀数组</category><category>字符串</category><category>OI</category><category>题解</category><category>BZOJ</category></item><item><title>「POI2013」Price List-图论</title><link>https://blog.chenqiqian.com/posts/poi2013-price-list/</link><pubDate>Tue, 14 Aug 2018 19:53:50 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 14 Aug 2018 19:53:50 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2013-price-list/</guid><description>&lt;p>给定一个 $n$ 个点，$m$ 条边的无向联通图，每条边的权值均为 $a$。&lt;/p>
&lt;p>在&lt;strong>原图&lt;/strong>所有满足 $u$ 节点和 $v$ 节点间最短路为 $2 \times a$ 的点对 $(u,v)$ 间建立一条无向边，边的权值均为 $b$。&lt;/p>
&lt;p>给定一个起始节点$k$，求在上述操作后，$k$到所有节点的最短路径。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>最短路</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「POI2006」Periods of Words-KMP</title><link>https://blog.chenqiqian.com/posts/poi2006-okr/</link><pubDate>Tue, 14 Aug 2018 19:50:59 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 14 Aug 2018 19:50:59 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2006-okr/</guid><description>&lt;p>一个串是有限个小写字符的序列,特别的,一个空序列也可以是一个串. 一个串 $P$ 是串 $A$ 的前缀, 当且仅当存在串 $B$ , 使得 $A = PB$. 如果 $P \neq A$ 并且 $P$ 不是一个空串,那么我们说 $P$ 是 $A$ 的一个 $proper$ 前缀. 定义 $Q$ 是 $A$ 的周期, 当且仅当 $Q$ 是 $A$ 的一个 $proper$ 前缀并且 $A$ 是 $QQ$ 的前缀(不一定要是 $proper$ 前缀).&lt;/p>
&lt;p>比如串 $abab$ 和 $ababab$ 都是串 $abababa$ 的周期. 串 $A$ 的最大周期就是它最长的一个周期或者是一个空串(当 $A$ 没有周期的时候), 比如说, $ababab$ 的最大周期是 $abab$ . 串 $abc$ 的最大周期是空串. 给出一个串,求出它所有前缀的最大周期长度之和.&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>KMP</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「JSOI2007」文本生成器-AC自动机+dp</title><link>https://blog.chenqiqian.com/posts/jsoi2007-generator/</link><pubDate>Sat, 11 Aug 2018 19:27:37 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 11 Aug 2018 19:27:37 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/jsoi2007-generator/</guid><description>&lt;p>可读版题意：&lt;/p>
&lt;p>给定 $n$ 个仅包含大写字母的模板串，求所有的长度为 $M$ 且仅包含大写字母的不同字符串中，有多少个包含至少一个模板串。答案对 $10007$ 取模。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>AC自动机</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2010」Antisymmetry-后缀数组</title><link>https://blog.chenqiqian.com/posts/poi2010-antisymmetry/</link><pubDate>Sat, 11 Aug 2018 19:25:24 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 11 Aug 2018 19:25:24 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2010-antisymmetry/</guid><description>&lt;p>对于一个 $0/1$ 字符串，如果将这个字符串 $0$ 和 $1$ 取反后，再将整个串反过来和原串一样，就称作“反对称”字符串。比如 $00001111$ 和 $010101$ 就是反对称的， $1001$ 就不是。&lt;/p>
&lt;p>现在给出一个长度为 $n$ 的 $0/1$ 字符串，求它有多少个子串是反对称的。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「TJOI2013」单词-后缀数组+二分</title><link>https://blog.chenqiqian.com/posts/tjoi2013-word/</link><pubDate>Sat, 11 Aug 2018 19:24:27 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 11 Aug 2018 19:24:27 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/tjoi2013-word/</guid><description>&lt;p>可读版题意：&lt;/p>
&lt;p>给定 $n$ 个字符串，第 $i$ 个字符串的长度为 $M_i$ ，求每个字符串在所有字符串中出现的次数。&lt;/p>
&lt;p>数据范围：$n \leq 100,\ M = \sum M_i \leq 10^6$.&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HNOI2008」GT考试-KMP+dp+矩阵快速幂</title><link>https://blog.chenqiqian.com/posts/hnoi2008-gtexams/</link><pubDate>Thu, 09 Aug 2018 11:19:09 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 09 Aug 2018 11:19:09 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2008-gtexams/</guid><description>&lt;p>阿申准备报名参加 $GT$ 考试，准考证号为 $n$ 位数 $X_1X_2\cdots X_n(0\le X_i\le 9)$，他不希望准考证号上出现不吉利的数字。&lt;/p>
&lt;p>他的不吉利数字 $A_1A_2\cdots A_m(0\le A_i\le 9)$ 有 $m$ 位，不出现是指 $X_1X_2\cdots X_n$ 中没有恰好一段等于 $A_1A_2\cdots A_m$，$A_1$​ 和 $X_1$ 可以为 $0$。&lt;/p>
&lt;p>阿申想知道不出现不吉利数字的号码有多少种，输出模 $K$ 取余的结果。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>KMP</category><category>矩阵快速幂</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2000」病毒-AC自动机</title><link>https://blog.chenqiqian.com/posts/poi2000-virus/</link><pubDate>Thu, 09 Aug 2018 11:03:59 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 09 Aug 2018 11:03:59 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2000-virus/</guid><description>&lt;p>二进制病毒审查委员会最近发现了如下的规律：某些确定的二进制串是病毒的代码。如果某段代码中不存在任何一段病毒代码，那么我们就称这段代码是安全的。现在委员会已经找出了所有的病毒代码段，试问，是否存在一个无限长的安全的二进制代码。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>AC自动机</category><category>字符串</category><category>图论</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「SDOI2009」HH去散步-矩阵快速幂+dp</title><link>https://blog.chenqiqian.com/posts/sdoi2009-walk/</link><pubDate>Thu, 09 Aug 2018 10:41:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 09 Aug 2018 10:41:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2009-walk/</guid><description>&lt;p>&lt;code>HH&lt;/code> 是个喜欢变化的人，所以他不会立刻沿着刚刚走来的路走回。 又因为 &lt;code>HH&lt;/code> 是个喜欢变化的人，所以他每天走过的路径都不完全一样，他想知道他究竟有多少种散步的方法。&lt;/p>
&lt;p>现在给你学校的地图（假设每条路的长度都是一样的都是 $1$ ），问长度为 $t$ ，从给定地点 $A$ 走到给定地点 $B$ 共有多少条符合上述条件的路径。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>矩阵快速幂</category><category>动态规划</category><category>图论</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2012」网络-LCT</title><link>https://blog.chenqiqian.com/posts/zjoi2012-network/</link><pubDate>Fri, 03 Aug 2018 19:41:40 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 03 Aug 2018 19:41:40 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2012-network/</guid><description>&lt;p>有一个无向图 $G$ ，每个点有个权值，每条边有一个颜色。这个无向图满足以下两个条件：&lt;/p>
&lt;ul>
&lt;li>对于任意节点连出去的边中，相同颜色的边不超过两条。&lt;/li>
&lt;li>图中不存在同色的环，同色的环指相同颜色的边构成的环。&lt;/li>
&lt;/ul>
&lt;p>在这个图上，你要支持以下三种操作：&lt;/p>
&lt;ul>
&lt;li>修改一个节点的权值。&lt;/li>
&lt;li>修改一条边的颜色。&lt;/li>
&lt;li>查询由颜色 $c$ 的边构成的图中， $u$ 到节点 $v$ 之间的简单路径上的节点的权值的最大值。&lt;/li>
&lt;/ul>
&lt;p>对于 100% 的数据，保证颜色不多于 $10$ 种。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树形结构</category><category>LCT</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2015」品酒大会-后缀数组</title><link>https://blog.chenqiqian.com/posts/noi2015-savour/</link><pubDate>Fri, 03 Aug 2018 19:40:39 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 03 Aug 2018 19:40:39 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2015-savour/</guid><description>&lt;p>简单版题意：&lt;/p>
&lt;p>给定一个长度为 $n$ 的字符串，和一个长度为 $n$ 的数列 ${a_n}$ ，求对于 $r$ 从 $0$ 到 $n-1$ ，所有满足 $1 \leq p &amp;lt; q \leq n$ 且 $lcp(p,q) \geq r$ 的数对个数以及满足上述条件的数对中 $a_p \times a_q$ 的最大值。（ $a_i$ 可以为负数）&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>并查集</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「SCOI2008」奖励关-期望dp</title><link>https://blog.chenqiqian.com/posts/scoi2008-award/</link><pubDate>Fri, 03 Aug 2018 19:39:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 03 Aug 2018 19:39:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2008-award/</guid><description>&lt;p>系统将依次随机抛出 $k$ 次宝物，每次你都可以选择吃或者不吃。宝物一共有 $n$ 种，系统每次抛出这 $n$ 种宝物的概率都相同且相互独立。&lt;/p>
&lt;p>吃一次第 $i$ 种宝物将得到 $P_i$ 分，但并不是每种宝物都是可以随意获取的。第 $i$ 种宝物有一个前提宝物集合 $S_i$ 。只有当 $S_i$ 中所有宝物都至少吃过一次，才能吃第 $i$ 种宝物。注意，$P_i$ 可以是负数。&lt;/p>
&lt;p>假设你采取最优策略，平均情况你一共能在奖励关得到多少分值？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>期望dp</category><category>各省省选</category></item><item><title>「POI2011」Tree Rotations-线段树合并</title><link>https://blog.chenqiqian.com/posts/poi2011-tree-rotations/</link><pubDate>Mon, 23 Jul 2018 22:51:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 23 Jul 2018 22:51:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2011-tree-rotations/</guid><description>&lt;p>现在有一棵二叉树，所有非叶子节点都有两个孩子。在每个叶子节点上有一个权值(有 $n$ 个叶子节点，满足这些权值为 $1&amp;hellip;n$ 的一个排列)。可以任意交换每个非叶子节点的左右孩子。&lt;br />
要求进行一系列交换，使得最终所有叶子节点的权值按照前序遍历序写出来，逆序对个数最少。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>树形结构</category><category>线段树合并</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「JLOI2015」城池攻占-左偏树</title><link>https://blog.chenqiqian.com/posts/jloi2015-fail/</link><pubDate>Sat, 21 Jul 2018 20:45:52 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 21 Jul 2018 20:45:52 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/jloi2015-fail/</guid><description>&lt;p>有 $m$ 个骑士攻占 $n$ 个城池。除 $1$ 号城池外，城池 $i$ 会受到另一座城池 $f_i$ 的管辖，其中 $f_i &amp;lt; i$。也就是说，所有城池构成了一棵有根树。第 $i$ 个骑士的初始战斗力为 $s_i$，第一个攻击的城池为 $c_i$。&lt;/p>
&lt;p>每个城池有一个防御值 $h_i$，如果一个骑士的战斗力大于等于城池的生命值，那么骑士就可以占领这座城池；否则占领失败，骑士将在这座城池牺牲。占领一个城池以后，骑士的战斗力将发生变化，然后继续攻击管辖这座城池的城池，直到占领 $1$ 号城池，或牺牲为止。&lt;/p>
&lt;p>除 $1$ 号城池外，每个城池 $i$ 会给出一个战斗力变化参数 $a_i$;$v_i$。若 $a_i = 0$，攻占城池 $i$ 以后骑士战斗力会增加 $v_i$；若 $a_i = 1$，攻占城池 $i$ 以后，战斗力会乘以 $v_i$。注意每个骑士是单独计算的。也就是说一个骑士攻击一座城池，不管结果如何，均不会影响其他骑士攻击这座城池的结果。&lt;/p>
&lt;p>对于每个城池，输出有多少个骑士在这里牺牲；对于每个骑士，输出他攻占的城池数量。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>左偏树</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「APIO2012」派遣-左偏树</title><link>https://blog.chenqiqian.com/posts/apio2012-dispatching/</link><pubDate>Sat, 21 Jul 2018 20:45:20 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 21 Jul 2018 20:45:20 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/apio2012-dispatching/</guid><description>&lt;p>给定一棵有根树，每个点有一个代价 $C_i$ ，权值 $L_i$ ，要求从这个树某个节点 $k$ 的子树（包含该节点）选取若干个节点，使得选取节点的个数乘上节点 $k$ 的权值最大，且这若干个节点的代价和不超过给定的限制 $M$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>左偏树</category><category>数据结构</category><category>OI</category><category>题解</category><category>WC/CTSC/APIO</category></item><item><title>左偏树学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-leftist-tree/</link><pubDate>Sat, 21 Jul 2018 20:39:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 21 Jul 2018 20:39:31 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-leftist-tree/</guid><description>&lt;p>左偏树是一种以二叉树为基础的数据结构，可以用来实现可以在$O(\log n)$时间内合并的堆。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>左偏树</category><category>数据结构</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「HNOI2013」游走-期望方程</title><link>https://blog.chenqiqian.com/posts/hnoi2013-walk/</link><pubDate>Thu, 19 Jul 2018 20:07:48 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 19 Jul 2018 20:07:48 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2013-walk/</guid><description>&lt;p>一个无向连通图，顶点从 $1$ 编号到 $N$ ，边从 $1$ 编号到 $M$ 。 小 Z 在该图上进行随机游走，初始时小 Z 在 $1$ 号顶点，每一步小 Z 以相等的概率随机选 择当前顶点的某条边，沿着这条边走到下一个顶点，获得等于这条边的编号的分数。当小 Z 到达 N 号顶点时游走结束，总分为所有获得的分数之和。 现在，请你对这 $M$ 条边进行编号，使得小 Z 获得的总分的期望值最小。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>期望</category><category>高斯消元</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SHOI2012」随机树-期望dp</title><link>https://blog.chenqiqian.com/posts/shoi2012-tree/</link><pubDate>Thu, 19 Jul 2018 20:07:12 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 19 Jul 2018 20:07:12 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/shoi2012-tree/</guid><description>&lt;blockquote>
&lt;p>题面以图片显示，请点击“阅读全文”查看。&lt;/p>
&lt;/blockquote></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>期望</category><category>树形结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HAOI2012」高速公路-期望+线段树</title><link>https://blog.chenqiqian.com/posts/haoi2012-highway/</link><pubDate>Thu, 19 Jul 2018 20:06:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 19 Jul 2018 20:06:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/haoi2012-highway/</guid><description>&lt;p>&lt;code>Y901&lt;/code> 高速公路是一条由 $N-1$ 段路以及 $N$ 个收费站组成的东西向的链，我们按照由西向东的顺序将收费站依次编号为 $1 \sim N$ ，从收费站 $i$ 行驶到 $i+1$ (或从 $i+1$ 行驶到 $i$ )需要收取 $V_i$ 的费用。高速路刚建成时所有的路段都是免费的。&lt;/p>
&lt;p>政府部门根据实际情况，会不定期地对连续路段的收费标准进行调整，根据政策涨价或降价。&lt;/p>
&lt;p>求对于给定的 $l,r(l &amp;lt; r)$ ，在第 $l$ 个到第 $r$ 个收费站里等概率随机取出两个不同的收费站 $a$ 和 $b$ ，那么从 $a$ 行驶到 $b$ 将期望花费多少费用呢?&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>数学</category><category>期望</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2014」力-快速傅立叶变换</title><link>https://blog.chenqiqian.com/posts/zjoi2014-force/</link><pubDate>Thu, 19 Jul 2018 18:00:39 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 19 Jul 2018 18:00:39 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2014-force/</guid><description>&lt;p>给出 $n$ 个数 $q_i$ ，给出 $F_j$ 定义为：&lt;/p>
&lt;p>$$&lt;br />
F_j = \sum_{i &amp;lt; j}\frac{q_i q_j}{(i-j)^2} - \sum_{i &amp;gt; j}\frac{q_i q_j}{(i-j)^2}&lt;br />
$$&lt;/p>
&lt;p>令 $E_i = \frac{F_i}{q_i}$ ，求 $E_i$ 的值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>快速傅立叶变换</category><category>数学</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「IOI2014」Wall-线段树</title><link>https://blog.chenqiqian.com/posts/ioi2014-wall/</link><pubDate>Tue, 17 Jul 2018 19:51:27 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 17 Jul 2018 19:51:27 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/ioi2014-wall/</guid><description>&lt;p>给定一个长度为 $n$ 且初始值全为 $0$ 的序列。你需要支持以下两种操作：&lt;/p>
&lt;ul>
&lt;li>$Add, L, R, h$ ：将序列 $[L, R]$ 内所有值小于 $h$ 的元素都赋为 $h$，此时不改变高度大于 $h$ 的元素值&lt;/li>
&lt;li>$Remove, L, R, h$：将序列 $[L, R]$ 内所有值大于 $h$ 的元素都赋为 $h$ ，此时不改变高度小于 $h$ 的元素值&lt;/li>
&lt;/ul>
&lt;p>你需要输出进行 $k$ 次上述操作之后的序列。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>IOI</category></item><item><title>「CF990G」GCD Counting-并查集/点分治</title><link>https://blog.chenqiqian.com/posts/cf990g/</link><pubDate>Tue, 17 Jul 2018 19:48:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 17 Jul 2018 19:48:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf990g/</guid><description>&lt;p>给定一个 $n$ 个节点的树，每个点有一个正整数权值 $a_i$ 。我们定义 $g(x,y)$ 为 $x,y$ 之间简单路径上所有点（包括端点）的权值的最大公约数。&lt;/p>
&lt;p>现在请求出对于所有的 $i \in [1,2×10^5]$ ，满足 $1 \le x \le y \le n$ 且 $g(x,y) = i$ 的点对 $(x,y)$ 的数目。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>并查集</category><category>点分治</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「错过」</title><link>https://blog.chenqiqian.com/posts/essay-miss/</link><pubDate>Sun, 08 Jul 2018 19:12:06 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 08 Jul 2018 19:12:06 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/essay-miss/</guid><description>&lt;blockquote>
&lt;p>你以为你见证了整个故事，其实你只知道他们的名字，甚至你连他们的名字都不一定知道。&lt;/p>
&lt;/blockquote></description><dc:creator>cqqqwq</dc:creator><category>随笔</category></item><item><title>「SCOI2010」股票交易-dp+单调队列</title><link>https://blog.chenqiqian.com/posts/scoi2010-stock/</link><pubDate>Sun, 08 Jul 2018 10:56:37 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 08 Jul 2018 10:56:37 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2010-stock/</guid><description>&lt;p>&lt;code>lxhgww&lt;/code>预测到了未来 $T$ 天内某只股票的走势，第 $i$ 天的股票买入价为每股 $AP_i$ ，第 $i$ 天的股票卖出价为每股 $BP_i$ （数据保证对于每个 $i$ ，都有$AP_i \ge BP_i$ ），第$i$ 天的一次买入至多只能购买 $AS_i$ 股，一次卖出至多只能卖出 $BS_i$ 股。两次交易（某一天的买入或者卖出均算是一次交易）之间，至少要间隔 $W$ 天；在任何时间一个人的手里的股票数不能超过 $MaxP$ 。&lt;/p>
&lt;p>在第 $1$ 天之前，&lt;code>lxhgww&lt;/code>手里有数目无限的钱，但是没有任何股票，在 $T$ 天以后， &lt;code>lxhgww&lt;/code> 能赚到的钱最多是多少？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>单调队列</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HAOI2016」找相同字符-后缀数组+单调栈</title><link>https://blog.chenqiqian.com/posts/haoi2016-same/</link><pubDate>Wed, 04 Jul 2018 20:39:30 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 04 Jul 2018 20:39:30 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/haoi2016-same/</guid><description>&lt;p>给定两个字符串，求出在两个字符串中各取出一个子串使得这两个子串相同的方案数。当这两个子串中只要有一个取得位置不同时，两个方案不同。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>单调栈</category><category>后缀数组</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2016」优秀的拆分-后缀数组</title><link>https://blog.chenqiqian.com/posts/noi2016-split/</link><pubDate>Wed, 04 Jul 2018 20:38:39 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 04 Jul 2018 20:38:39 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2016-split/</guid><description>&lt;p>如果一个字符串可以被拆分为 $AABB$ 的形式，其中 $A$ 和 $B$ 是任意非空字符串，则我们称该字符串的这种拆分是优秀的。一个字符串可能没有优秀的拆分，也可能存在不止一种优秀的拆分。&lt;/p>
&lt;p>现在给出一个长度为 $n$ 的字符串 $S$ ，我们需要求出，在它&lt;strong>所有&lt;/strong>子串的&lt;strong>所有&lt;/strong>拆分方式中，优秀拆分的总个数。这里的子串是指字符串中连续的一段。&lt;/p>
&lt;p>以下事项需要注意：&lt;/p>
&lt;ul>
&lt;li>出现在不同位置的相同子串，我们认为是不同的子串，它们的优秀拆分均会被记入答案。&lt;/li>
&lt;li>在一个拆分中，允许出现 $A = B$。例如 $cccc$ 存在拆分 $A = B = c$。&lt;/li>
&lt;li>字符串本身也是它的一个子串。&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「POI2014」PTA-单调队列</title><link>https://blog.chenqiqian.com/posts/poi2014-pta/</link><pubDate>Wed, 27 Jun 2018 16:51:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 27 Jun 2018 16:51:31 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2014-pta/</guid><description>&lt;p>给定 $n$ 个点的高度，规定从 $1$ 点出发，跳到比高度小于当前点的点不消耗体力，否则消耗一点体力，最后到达 $n$ 点。&lt;/p>
&lt;p>$q$ 次询问，每次询问有一个步伐限制 $k$ ，求最少耗费的体力。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>单调队列</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>高斯消元法学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-gaussian-elimination/</link><pubDate>Sat, 23 Jun 2018 20:43:54 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 23 Jun 2018 20:43:54 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-gaussian-elimination/</guid><description>&lt;p>高斯消元法是线性代数中的一个算法，可用来为线性方程组求解，求出矩阵的秩，以及求出可逆方阵的逆矩阵。当用于一个矩阵时，高斯消元法会产生出一个行梯阵式。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>高斯消元</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「TJOI2017」DNA-后缀数组</title><link>https://blog.chenqiqian.com/posts/tjoi2017-dna/</link><pubDate>Sat, 23 Jun 2018 20:43:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 23 Jun 2018 20:43:31 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/tjoi2017-dna/</guid><description>&lt;p>加里敦大学的生物研究所发现了决定人喜不喜欢吃藕的基因序列 $S$ ,有这个序列的碱基序列就会表现出喜欢吃藕的性状，但是研究人员发现对碱基序列 $S$ ,任意修改其中不超过 $3$ 个碱基，依然能够表现出吃藕的性状。现在研究人员想知道这个基因在 DNA 链 $S0$ 上的位置。所以你需要统计在一个表现出吃藕性状的人的 DNA 序列 $S0$ 上，有多少个连续子串可能是该基因，即有多少个 $S0$ 的连续子串修改小于等于三个字母能够变成 $S$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CQOI2016」手机号码-数位dp</title><link>https://blog.chenqiqian.com/posts/cqoi2016-phone/</link><pubDate>Tue, 19 Jun 2018 21:59:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 19 Jun 2018 21:59:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2016-phone/</guid><description>&lt;p>手机号码是一个有 $11$ 位且不含前导 $0$ 的数。满足条件手机号码的必须&lt;strong>同时&lt;/strong>满足：号码中出现至少 $3$ 个相邻的相同数字；号码中不能同时出现 $8$ 和 $4$ 。&lt;/p>
&lt;p>给定两个数 $L$ 和 $R$ ，统计出 $[L,R]$区间内所有满足条件的手机号码的个数。 $L$ 和 $R$ 都是符合定义的手机号码。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数位dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2010」数字计数-数位dp</title><link>https://blog.chenqiqian.com/posts/zjoi2010-count/</link><pubDate>Mon, 18 Jun 2018 09:35:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 18 Jun 2018 09:35:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2010-count/</guid><description>&lt;p>给定两个正整数 $a$ 和 $b$ ，求在 $[a,b]$ 中的所有整数中，每个数码(&lt;code>digit&lt;/code>)各出现了多少次。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数位dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「JSOI2016」最佳团体-树上背包+0/1分数规划</title><link>https://blog.chenqiqian.com/posts/jsoi2016-team/</link><pubDate>Mon, 18 Jun 2018 09:34:03 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 18 Jun 2018 09:34:03 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/jsoi2016-team/</guid><description>&lt;p>&lt;code>JSOI&lt;/code> 信息学代表队一共有 $N$ 名候选人，这些候选人从 $1$ 到 $N$ 编号。方便起见，&lt;code>JYY&lt;/code> 的编号是 $0$ 号。每个候选人都由一位编号比他小的候选人$R_i$推荐。如果 $R_i = 0$ ，则说明这个候选人是 &lt;code>JYY&lt;/code> 自己看上的。&lt;/p>
&lt;p>为了保证团队的和谐，&lt;code>JYY&lt;/code> 需要保证，如果招募了候选人 $i$，那么候选人 $R_i$ 也一定需要在团队中。当然了，&lt;code>JYY&lt;/code> 自己总是在团队里的。每一个候选人都有一个战斗值 $P_i$ ，也有一个招募费用 $S_i$。&lt;code>JYY&lt;/code> 希望招募 $K$ 个候选人（&lt;code>JYY&lt;/code> 自己不算），组成一个性价比最高的团队。也就是，这 $K$ 个被 &lt;code>JYY&lt;/code> 选择的候选人的总战斗值与总招募费用的比值最大。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>0/1分数规划</category><category>树形结构</category><category>树形dp</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2010」能量采集-简单数学</title><link>https://blog.chenqiqian.com/posts/noi2010-energy/</link><pubDate>Mon, 18 Jun 2018 09:31:46 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 18 Jun 2018 09:31:46 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2010-energy/</guid><description>&lt;p>给定两个整数 $n,m$ ，对于平面上的整点 ${(x,y)|x \in [1,n],y \in [1,m],x,y \in \mathbb Z}$ 。若 $(x,y)$ 与 $(0,0)$ 的连线上有 $k$ 个整点（不包括 $(0,0),(n,m)$ ），则产生的贡献为 $2k+1$ 。求所有满足条件的点的贡献总和。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数学</category><category>最大公约数</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「NOI2014」魔法森林-LCT</title><link>https://blog.chenqiqian.com/posts/noi2014-forest/</link><pubDate>Sat, 16 Jun 2018 11:36:51 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 16 Jun 2018 11:36:51 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2014-forest/</guid><description>&lt;p>给定一个 $n$ 个点 $m$ 条边的无向图，每条边有两个权值 $a_i,b_i$ 。请你找到一条从 $1 \rightarrow n$ 的道路，令道路上所有边的集合为 $S$ ，使 $ans = \max(a_i)+\max(b_j),i,j \in S$ 最小，求出这个最小值 $ans$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「梦想」</title><link>https://blog.chenqiqian.com/posts/essay-dream/</link><pubDate>Fri, 15 Jun 2018 22:38:55 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 15 Jun 2018 22:38:55 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/essay-dream/</guid><description>&lt;p>什么是梦想呢&amp;hellip;&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>随笔</category></item><item><title>「SCOI2015」小凸玩密室-树形dp</title><link>https://blog.chenqiqian.com/posts/scoi2015-room/</link><pubDate>Fri, 08 Jun 2018 16:08:09 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 08 Jun 2018 16:08:09 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2015-room/</guid><description>&lt;p>小凸和小方相约玩密室逃脱，这个密室是一棵有 $n$ 个节点的完全二叉树，每个节点有一个灯泡。点亮所有灯泡即可逃出密室。&lt;/p>
&lt;p>每个灯泡有个权值 $a_i$ ，每条边也有个权值 $b_i$ 。点亮第 $1$ 个灯泡不需要花费，之后每点亮 $1$ 个新的灯泡 $v$ 的花费，等于上一个被点亮的灯泡 $u$ 到这个点 $v$ 的距离 $D_{u,v}$ ，乘以这个点的权值 $a_v$ 。在点灯的过程中，要保证任意时刻所有被点亮的灯泡**必须连通**，在点亮一个灯泡后**必须先点亮其子树所有灯泡才能点亮其他灯泡**。&lt;/p>
&lt;p>请告诉他们，逃出密室的最少花费是多少。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>树形结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CQOI2011」动态逆序对-CDQ分治</title><link>https://blog.chenqiqian.com/posts/cqoi2011-inverse/</link><pubDate>Thu, 07 Jun 2018 20:58:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 07 Jun 2018 20:58:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2011-inverse/</guid><description>&lt;p>对于序列 $A$ ，它的逆序对数定义为满足 $i&amp;lt;j$ ，且 $A_i&amp;gt;A_j$ 的数对 $(i,j)$ 的个数。&lt;br />
给出一个 $1$ 到 $n$ 的排列，按照某种顺序依次删除 $m$ 个元素，你的任务是在每次删除一个元素之前统计整个序列的逆序对数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>CDQ分治</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2013」K大数查询-整体二分</title><link>https://blog.chenqiqian.com/posts/zjoi2013-kth/</link><pubDate>Wed, 06 Jun 2018 19:17:02 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 06 Jun 2018 19:17:02 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2013-kth/</guid><description>&lt;p>有 $N$ 个位置， $M$ 个操作。&lt;/p>
&lt;p>操作有两种：&lt;/p>
&lt;ul>
&lt;li>如果是 &lt;code>1 a b c&lt;/code> 的形式表示在第 $a$ 个位置到第 $b$ 个位置，每个位置加入一个数 $c$ ；&lt;/li>
&lt;li>如果是 &lt;code>2 a b c&lt;/code> 形式，表示询问从第 $a$ 个位置到第 $b$ 个位置，第 $c$ 大的数是多少。&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>整体二分</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「模板」陌上花开-CDQ分治+树状数组</title><link>https://blog.chenqiqian.com/posts/luogu-3810/</link><pubDate>Wed, 06 Jun 2018 19:16:30 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 06 Jun 2018 19:16:30 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-3810/</guid><description>&lt;p>有 $n$ 朵花,每朵花有三个属性：花形( $s$ )、颜色( $c$ )、气味( $m$ )，用三个整数表示。显然，两朵花可能有同样的属性。&lt;/p>
&lt;p>定义一朵花 $A$ 比另一朵花 $B$ 要美丽，当且仅当 $S_a\geq S_b$ , $C_a\geq C_b$ , $M_a \geq M_b$ 。定义一朵花的等级是它拥有的美丽能超过的花的数量。&lt;/p>
&lt;p>求出每个等级的花的数量。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>CDQ分治</category><category>树状数组</category><category>模板</category><category>OI</category><category>题解</category></item><item><title>「HAOI2009」毛毛虫-树形dp</title><link>https://blog.chenqiqian.com/posts/haoi2009-worm/</link><pubDate>Wed, 06 Jun 2018 19:08:55 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 06 Jun 2018 19:08:55 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/haoi2009-worm/</guid><description>&lt;p>对于一棵树，我们可以将某条链和与该链相连的边抽出来，称其为一个“毛毛虫”。求在这个树中点数最多的毛毛虫的点数。&lt;/p>
&lt;p>$n &amp;lt; 300000$&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>树形dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「摘录」青春设计师-年级范文</title><link>https://blog.chenqiqian.com/posts/essay-youth-designer/</link><pubDate>Sun, 03 Jun 2018 21:23:05 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 03 Jun 2018 21:23:05 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/essay-youth-designer/</guid><description>&lt;p>青春真的是一个非常空泛而又令人迷茫的词汇。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>摘录</category></item><item><title>「LNOI2014」LCA-树链剖分-差分</title><link>https://blog.chenqiqian.com/posts/lnoi2014-lca/</link><pubDate>Sat, 02 Jun 2018 21:23:25 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 02 Jun 2018 21:23:25 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/lnoi2014-lca/</guid><description>&lt;p>给出一个 $n$ 个节点的有根树。有 $q$ 次询问，每次询问给出 $l,r,z$ ，求 $\sum_{l \leq i \leq r}dep[LCA(i,z)]$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>差分</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SCOI2013」多项式的运算-Splay</title><link>https://blog.chenqiqian.com/posts/scoi2013-function/</link><pubDate>Fri, 01 Jun 2018 21:12:47 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 01 Jun 2018 21:12:47 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2013-function/</guid><description>&lt;p>维护一个动态的关于 $x$的无穷多项式 ，这个多项式初始时对于所有 $i$ 有 $a_i = 0$&lt;/p>
&lt;p>$$&lt;br />
f(x)=a_0x^0+a_1x^1+a_2x^2&amp;hellip;&lt;br />
$$&lt;/p>
&lt;p>操作者可以进行四种操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>mul L R V&lt;/code> 表示将 $x^L$ 到 $x^R$ 这些项的系数乘上某个定值 $v$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>add L R V&lt;/code> 表示将 $x^L$ 到 $x^R$ 这些项的系数加上某个定值 $v$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>mulx L R&lt;/code> 表示将 $x^L$ 到 $x^R$ 这些项乘上x变量；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>query V&lt;/code> 求 $f(v)$ 的值。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>操作集中在前三种，第四种操作不会出现超过 $10$ 次。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>Splay</category><category>数据结构</category><category>平衡树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2014」旅行-树链剖分+动态开点线段树</title><link>https://blog.chenqiqian.com/posts/sdoi2014-journey/</link><pubDate>Thu, 24 May 2018 20:38:27 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 24 May 2018 20:38:27 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2014-journey/</guid><description>&lt;p>给定一棵 $n$ 个节点的树，对于每个点都有两个权值 $w_i,c_i$ 。&lt;/p>
&lt;p>存在 $m$ 个操作，分为4类。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>“&lt;code>CC x c&lt;/code>”：将 $c_x$ 更改为 $c$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“&lt;code>CW x w&lt;/code>”：将 $w_x$ 更改为 $w$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“&lt;code>QS x y&lt;/code>”：对所有满足在 $x$ 到 $y$ 路径上且 $c_i = c_x = c_y$ 的节点 $i$，求 $\sum w_i$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“&lt;code>QM x y&lt;/code>”：对所有满足在 $x$ 到 $y$ 路径上且 $c_i = c_x = c_y$ 的节点 $i$ ，求 $\max(w_i)$ ；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>对于后两个操作，保证 $c_x = c_y$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>树链剖分</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>可持久化线段树学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-prsegtree/</link><pubDate>Thu, 24 May 2018 20:37:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 24 May 2018 20:37:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-prsegtree/</guid><description>&lt;p>可持久化线段树，是一种可以进行可持久化操作的线段树，具有优越的时间复杂度。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>可持久化线段树</category><category>主席树</category><category>数据结构</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「SDOI2011」消防-树的直径+单调队列</title><link>https://blog.chenqiqian.com/posts/sdoi2011-fireman/</link><pubDate>Mon, 21 May 2018 20:11:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 21 May 2018 20:11:00 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2011-fireman/</guid><description>&lt;p>某个国家有 $n$ 个城市，这 $n$ 个点之间的边构成一棵树。&lt;/p>
&lt;p>现求一条边长度和不超过 $S$ 的路径（两端都是城市，可以只为一个城市），使得所有城市到这条路径的距离的最大值最小，并输出这个最小值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>单调队列</category><category>树的直径</category><category>树形结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2013」森林-主席树+LCA+启发式合并</title><link>https://blog.chenqiqian.com/posts/sdoi2013-forest/</link><pubDate>Mon, 21 May 2018 20:10:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 21 May 2018 20:10:00 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2013-forest/</guid><description>&lt;p>小Z有一片森林，含有 $N$ 个节点，每个节点上都有一个非负整数作为权值。初始的时候，森林中有 $M$ 条边。&lt;/p>
&lt;p>小Z希望执行 $T$ 个操作，操作有两类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>Q x y k&lt;/code> 查询点 $x$ 到点 $y$ 路径上所有的权值中，第 $k$ 小的权值是多少。此操作保证点 $x$ 和点 $y$ 连通，同时这两个节点的路径上至少有 $k$ 个点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>L x y&lt;/code> 在点 $x$ 和点 $y$ 之间连接一条边。保证完成此操作后，仍然是一片森林。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>强制在线。&lt;/p>
&lt;p>对于所有的数据 $n,m,T \leq 8 \times 10^4$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>可持久化线段树</category><category>最近公共祖先</category><category>启发式合并</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HNOI2009」梦幻布丁-set-启发式合并</title><link>https://blog.chenqiqian.com/posts/hnoi2009-pudding/</link><pubDate>Mon, 21 May 2018 20:08:18 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 21 May 2018 20:08:18 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2009-pudding/</guid><description>&lt;p>$n$ 个布丁摆成一行，每个布丁最开始都有一个颜色 $c_i$ ，进行 $m$ 次操作。&lt;/p>
&lt;p>操作格式：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>1 c d&lt;/code> ：将所有的 $c$ 颜色替换为$d$&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>2&lt;/code> ：查询当前布丁序列一共有多少段颜色。例如颜色分别为 $1,2,2,1$ 的四个布丁一共有3段颜色。&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>启发式合并</category><category>set</category><category>平衡树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HNOI2010」弹飞绵羊-动态树</title><link>https://blog.chenqiqian.com/posts/hnoi2010-bounce/</link><pubDate>Fri, 18 May 2018 18:52:39 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 18 May 2018 18:52:39 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2010-bounce/</guid><description>&lt;p>游戏一开始，&lt;code>Lostmonkey&lt;/code> 在地上沿着一条直线摆上 $n$ 个装置，每个装置设定初始弹力系数 $K_i$ ，当绵羊达到第 $i$ 个装置时，它会往后弹 $K_i$ 步，达到第 $i+K_i$ 个装置，若不存在第 $i+K_i$ 个装置，则绵羊被弹飞。&lt;/p>
&lt;p>存在两种操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查询在第 $i$ 个装置起步时，再经多少次会被弹飞。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改第 $i$ 个装置的弹力系数为 $K'$ 。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>保证任何时候，任何装置弹力系数均为正整数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>LCT</category><category>数据结构</category><category>树形结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HAOI2007」理想的正方形-单调队列</title><link>https://blog.chenqiqian.com/posts/haoi2007-square/</link><pubDate>Fri, 18 May 2018 18:52:06 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 18 May 2018 18:52:06 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/haoi2007-square/</guid><description>&lt;p>有一个 $a \times b$ 的整数组成的矩阵，现请你从中找出一个 $n\times n$ 的正方形区域，使得该区域所有数中的最大值和最小值的差最小，输出这个最小的差值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>单调队列</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CQOI2015」任务查询系统-可持久化线段树</title><link>https://blog.chenqiqian.com/posts/cqoi2015-mission/</link><pubDate>Wed, 16 May 2018 21:16:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 16 May 2018 21:16:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2015-mission/</guid><description>&lt;p>超级计算机中的任务用三元组 $(S_i,E_i,P_i)$ 描述， $(S_i,E_i,P_i)$ 表示任务运行区间为 $[S_i,E_i]$ ,其优先级为 $P_i$ 。&lt;/p>
&lt;p>给出 $n$ 个任务。随后给出 $m$ 个询问，第 $X_i$ 秒正在运行的任务中，优先级最小的 $K_i$ 个任务的优先级之和是多少。特别的，如果 $K_i$ 大于第 $X_i$ 秒正在运行的任务总数，则直接回答第 $X_i$ 秒正在运行的任务优先级之和。&lt;/p>
&lt;p>强制在线。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>可持久化线段树</category><category>差分</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2008」洞穴勘测-LCT</title><link>https://blog.chenqiqian.com/posts/sdoi2008-cave/</link><pubDate>Sat, 12 May 2018 18:06:09 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 12 May 2018 18:06:09 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2008-cave/</guid><description>&lt;p>辉辉热衷于洞穴勘测。&lt;/p>
&lt;p>辉辉有一台监测仪器可以实时将通道的每一次改变状况，并在辉辉手边的终端机上显示：&lt;/p>
&lt;p>&lt;code>Connect u v&lt;/code>代表监测到洞穴u和洞穴v之间出现了一条通道，&lt;code>Destroy u v&lt;/code>代表监测到洞穴u和洞穴v之间的通道被毁。&lt;code>Query u v&lt;/code>，代表向监测仪询问此时洞穴u和洞穴v是否连通。&lt;/p>
&lt;p>保证无论通道怎么改变，任意时刻任意两个洞穴之间至多只有一条路径。&lt;/p>
&lt;p>已知在第一条指令显示之前，洞穴群中没有任何通道存在。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「Luogu2617」Dynamic Rankings-树状数组-可持久化线段树</title><link>https://blog.chenqiqian.com/posts/luogu-2617/</link><pubDate>Sat, 12 May 2018 18:05:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 12 May 2018 18:05:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-2617/</guid><description>&lt;p>给定一个含有 $n$ 个数的序列 ${a_n}$ ，回答询问或执行操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>Q i j k&lt;/code> （$1\leq i\leq j\leq n, 1\leq k\leq j-i+1$）表示询问$a[i],a[i+1]&amp;hellip;&amp;hellip;a[j]$中第 $k$ 小的数。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>C i t&lt;/code> ($1 \leq i \leq n,0\leq t \leq 10^{9}$)表示把 $a[i]$ 改变成为 $t$ 。&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>可持久化线段树</category><category>OI</category><category>题解</category><category>Luogu</category></item><item><title>「SDOI2013」直径-树的直径</title><link>https://blog.chenqiqian.com/posts/sdoi2013-diameter/</link><pubDate>Sat, 12 May 2018 18:04:01 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 12 May 2018 18:04:01 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2013-diameter/</guid><description>&lt;p>定义一棵树上最长的路径为树的直径。树的直径可能不唯一。&lt;/p>
&lt;p>给定的一棵 $n$ 个结点的树，求其直径的长度，以及有多少条边满足所有的直径都经过该边。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>树形结构</category><category>树的直径</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2014」KUR-Couriers-主席树</title><link>https://blog.chenqiqian.com/posts/poi2014-kur/</link><pubDate>Sun, 06 May 2018 19:38:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 06 May 2018 19:38:00 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2014-kur/</guid><description>&lt;p>给一个数列 ${a_n}$ ，每次询问区间 $[l,r]$ 内有没有一个数出现次数超过一半。如果有，输出这个数，如果没有，输出 $0$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>主席树</category><category>线段树</category><category>可持久化线段树</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「NOI2012」美食节-费用流</title><link>https://blog.chenqiqian.com/posts/noi2012-festival/</link><pubDate>Thu, 03 May 2018 22:16:33 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 03 May 2018 22:16:33 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2012-festival/</guid><description>&lt;p>美食节共有 $n$ 种不同的菜品，每个同学都点了一份在这 $n$ 个菜品中的菜。总共有 $m$ 个厨师来制作这些菜品。厨师们会按照要求的顺序进行制作，并且每次只能制作一人份。第 $j$ 个厨师制作第 $i$ 种菜品的时间记为 $t_{i,j}$ 。每个同学的等待时间为所有厨师开始做菜起，到自己那份菜品完成为止的时间总长度。总等待时间为所有同学的等待时间之和。&lt;/p>
&lt;p>已知共有 $n$ 种菜品，第 $i$ 种菜品需要做 $p_i$ 份，共有 $m$ 个厨师。请计算出最小的总等待时间是多少。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>费用流</category><category>图论</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>衡水中学游记</title><link>https://blog.chenqiqian.com/posts/trip-hs-middle-school/</link><pubDate>Sun, 29 Apr 2018 22:31:08 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 29 Apr 2018 22:31:08 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/trip-hs-middle-school/</guid><description>&lt;blockquote>
&lt;p>衡水市，2017年常住人口446.0万人，GDP1550.1亿元，人均GDP3.47万元，衡水市教育局预算支出68644.4万元。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>北京市海淀区，2017年常住人口348.0万人，GDP5915.3亿元，人均GDP17.00万元，海淀区教育委员会预算支出1038648.0万元。&lt;/p>
&lt;/blockquote>
&lt;p>X大附中，高中在校生约3000人，一本率近100%，清北录取人数119人。&lt;/p>
&lt;p>河北衡水中学，在校生约10000人，一本率超过85%，清北录取人数175人。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>游记</category></item><item><title>「NOI2009」二叉查找树-区间dp</title><link>https://blog.chenqiqian.com/posts/noi2009-binary/</link><pubDate>Sat, 28 Apr 2018 20:21:18 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 28 Apr 2018 20:21:18 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2009-binary/</guid><description>&lt;p>给定 $n$ 个结点的数据值 $V_i$ ，权值 $P_i$ ，访问频度 $T_i(T_i \geq 0)$ 。对于 $\forall i,j \in V$ 且 $i \neq j$ ，有 $V_i \neq V_j, P_i \neq P_j$ 。&lt;/p>
&lt;p>现令这 $n$ 个点组成一颗二叉树，且满足 $\forall , i \in V$ ，若 $p$ 为 $i$ 的左子节点， $q$ 为 $i$ 的右子节点，则 $V_p &amp;lt; V_i &amp;lt; V_q$ 且 $P_i &amp;lt; P_p,; P_i &amp;lt; P_q$ 。可以证明，这样的二叉树是唯一的。点$i$ 在树中的深度 $D_i$ 定义为它到根的距离加 $1$ 。定义结点 $i$ 的访问代价 $E_i = T_i \times D_i$ 。可以修改每个点的权值为任意实数，其代价均为给定的正整数 $K$ ，但需保证任两点权值仍互不相同。&lt;/p>
&lt;p>现求上文所述二叉树中，其 $\sum^n _{i = 1}{E_i} + \sum K$ 的最小值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>平衡树</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「SCOI2010」连续攻击游戏-二分图匹配</title><link>https://blog.chenqiqian.com/posts/scoi2010-game/</link><pubDate>Fri, 27 Apr 2018 18:48:55 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 27 Apr 2018 18:48:55 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2010-game/</guid><description>&lt;p>&lt;code>lxhgww&lt;/code> 最近迷上了一款游戏，在游戏里，他拥有 $n$ 个装备（ $n \le 1000000$ ），每种装备都有 $2$ 个属性，这些属性的值用 $[1,10000]$ 之间的数表示。当他使用某种装备时，他只能使用该装备的某一个属性。并且每种装备最多只能使用一次。&lt;/p>
&lt;p>游戏进行到最后， &lt;code>lxhgww&lt;/code> 遇到了终极 &lt;code>boss&lt;/code> ，这个终极 &lt;code>boss&lt;/code> 很奇怪，攻击他的装备所使用的属性值必须从 $1$ 开始连续递增地攻击，才能对 &lt;code>boss&lt;/code> 产生伤害。现在&lt;code>lxhgww&lt;/code>想知道他最多能连续攻击 &lt;code>boss&lt;/code> 多少次？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>二分图匹配</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「Luogu3765」总统选举-平衡树-线段树</title><link>https://blog.chenqiqian.com/posts/luogu-3765/</link><pubDate>Wed, 25 Apr 2018 23:30:25 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 25 Apr 2018 23:30:25 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-3765/</guid><description>&lt;p>秋之国共有 $n$ 个人，分别编号为 $1,2,&amp;hellip;,n$ ，一开始每个人都投了一票，范围 $[1,n]$ ，表示支持对应编号的人当总统。共有 $m$ 次预选，每次选取编号 $[l_i,r_i]$ 内的选民展开小规模预选，在该区间内获得超过区间大小一半的票的人获胜，如果没有人获胜，则由小 C 钦定一位候选者获得此次预选的胜利（获胜者可以不在该区间内），每次预选的结果需要公布出来，并且每次会有 $k_i$ 个人决定将票改投向该次预选的获胜者。全部预选结束后，公布最后成为总统的候选人，没有候选人的话输出 $-1$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>平衡树</category><category>线段树</category><category>OI</category><category>题解</category><category>Luogu</category></item><item><title>「CQOI2012」交换棋子-费用流</title><link>https://blog.chenqiqian.com/posts/cqoi2012-chess/</link><pubDate>Wed, 25 Apr 2018 23:29:56 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 25 Apr 2018 23:29:56 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2012-chess/</guid><description>&lt;p>有一个 $n$ 行 $m$ 列的黑白棋盘，你每次可以交换两个相邻格子（相邻是指有公共边或公共顶点）中的棋子，最终达到目标状态。要求第 $i$ 行第 $j$ 列的格子只能参与 $m_{i,j}$ 次交换。&lt;/p>
&lt;p>输出仅一行，为最小交换总次数。如果无解，输出 $-1$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>费用流</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「国家集训队」聪聪可可-点分治</title><link>https://blog.chenqiqian.com/posts/luogu-2634/</link><pubDate>Sun, 22 Apr 2018 13:14:39 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 22 Apr 2018 13:14:39 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-2634/</guid><description>&lt;p>有一颗 $n$（$n&amp;lt;20000$）个节点的树，每条边都有边权。接下来由聪聪和可可分别随即选一个点，如果两点之间简单路径上的边权和是 $3$ 的倍数，则判聪聪赢，否则可可赢。&lt;/p>
&lt;p>聪聪非常爱思考问题，希望知道对于这张图自己的获胜概率是多少。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>点分治</category><category>数据结构</category><category>树形结构</category><category>OI</category><category>题解</category><category>国家集训队</category></item><item><title>点分治学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-point-dc/</link><pubDate>Sun, 22 Apr 2018 13:14:04 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 22 Apr 2018 13:14:04 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-point-dc/</guid><description>&lt;p>点分治是一种主要在树上的分治，可以在解决一些树上特定条件的路径的问题。其复杂度与大部分分治类似，大概是 $O(K ; \log{n})$（ $K$ 为除分治步骤之外的时间复杂度的多项式）。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>笔记</category><category>点分治</category><category>树形结构</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>BJOI2018游记</title><link>https://blog.chenqiqian.com/posts/trip-bjoi2018/</link><pubDate>Sun, 15 Apr 2018 21:46:43 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 15 Apr 2018 21:46:43 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/trip-bjoi2018/</guid><description>&lt;p>爆零滚粗。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>OI</category><category>游记</category></item><item><title>「NOI2015」软件包管理器-树链剖分</title><link>https://blog.chenqiqian.com/posts/noi2015-manager/</link><pubDate>Mon, 09 Apr 2018 21:07:03 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 09 Apr 2018 21:07:03 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2015-manager/</guid><description>&lt;p>你决定设计你自己的软件包管理器。如果软件包 A 依赖软件包 B ，那么安装软件包 A 以前，必须先安装软件包 B 。同时，如果想要卸载软件包 B ，则必须卸载软件包 A 。现在你已经获得了所有的软件包之间的依赖关系。除 $0$ 号软件包以外，所有软件包都会依赖一个且仅一个软件包，而 $0$ 号软件包不依赖任何一个软件包。依赖关系不存在环。&lt;/p>
&lt;p>现在有一些安装或卸载软件包的操作，需要求出这个操作实际上会改变多少个软件包的安装状态（即安装操作会安装多少个未安装的软件包，或卸载操作会卸载多少个已安装的软件包）。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>线段树</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「SDOI2011」工作安排-费用流</title><link>https://blog.chenqiqian.com/posts/sdoi2011-arrange/</link><pubDate>Fri, 06 Apr 2018 20:00:38 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 06 Apr 2018 20:00:38 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2011-arrange/</guid><description>&lt;p>你的公司需要提供 $n$ 类产品，其中第 $i$ 类产品共需要 $C_{i}$ 件。公司共有 $m$ 名员工。员工能够制造的产品种类有所区别，我们用一个由 $0$ 和 $1$ 组成的 $m\times n$ 的矩阵 $\mathbb {A}$ 来描述每名员工能够制造哪些产品。&lt;/p>
&lt;p>对于员工 $i$ ，给出 $S_i$ 。定义他的愤怒值与他制作的产品数量之间的函数是一个 $S_i+1$ 段的分段函数。设 $T_{i,0}=0$,$T_{i,S_{i+1}}=+\infty$ ，那么当他制造第 $[T_{i,j-1}+1,T_{i,j}]$ 件产品时，每件产品会使他的愤怒值增加 $W_{i,j}$ ， $1\leq j\leq S_{i+1}$ 。保证 $0&amp;lt;W_{i,j} &amp;lt; W_{i,j+1}, ; 0 &amp;lt; T_{i,j} &amp;lt; T_{i,j+1}$ 。&lt;/p>
&lt;p>你的任务是制定出一个产品的分配方案，使得订单条件被满足，并且所有员工的愤怒值之和最小。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>费用流</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>AC自动机学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-ac_automaton/</link><pubDate>Thu, 05 Apr 2018 17:10:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 05 Apr 2018 17:10:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-ac_automaton/</guid><description>&lt;p>&lt;code>Aho–Corasick&lt;/code>算法，常叫做AC自动机。是一种字符串多模式串匹配算法。能在线性时间内完成多个模式串对一个查询串的匹配。&lt;/p>
&lt;blockquote>
&lt;p>能自动AC哦。&lt;/p>
&lt;/blockquote></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>AC自动机</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「NOI2014」动物园-KMP</title><link>https://blog.chenqiqian.com/posts/noi2014-zoo/</link><pubDate>Thu, 05 Apr 2018 16:55:40 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 05 Apr 2018 16:55:40 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2014-zoo/</guid><description>&lt;p>给定一个字符串 $S$ ，求出 $num$ 数组——对于字符串 $S$ 的前 $i$ 个字符构成的子串，既是它的后缀同时又是它的前缀，并且该后缀与该前缀不重叠，将这种字符串的数量记作 $num[i]$ 。&lt;/p>
&lt;p>特别地，为了避免大量的输出，你不需要输出 $num[i]$ 分别是多少，你只需要输出所有 $(num[i]+1)$ 的乘积，对 $10^9+7$ 取模的结果即可。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>KMP</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「ZJOI2010」网络扩容-网络流-费用流</title><link>https://blog.chenqiqian.com/posts/zjoi2010-network/</link><pubDate>Thu, 05 Apr 2018 16:55:11 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 05 Apr 2018 16:55:11 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2010-network/</guid><description>&lt;p>给定一张有向图，每条边都有一个容量 $C$ 和一个扩容费用 $W$ 。这里扩容费用是指将容量扩大 $1$ 所需的费用。&lt;/p>
&lt;p>现在请你编写一个程序求出：&lt;/p>
&lt;ol>
&lt;li>在不扩容的情况下， $1$ 到 $N$ 的最大流；&lt;/li>
&lt;li>将 $1$ 到 $N$ 的最大流增加 $K$ 所需的最小扩容费用。&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>费用流</category><category>网络流</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2007」最大半连通子图-强连通分量-dp</title><link>https://blog.chenqiqian.com/posts/zjoi2007-semi-connected/</link><pubDate>Thu, 05 Apr 2018 16:54:05 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 05 Apr 2018 16:54:05 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2007-semi-connected/</guid><description>&lt;p>给定一个有向图 $G$ ，请求出 $G$ 的最大半连通子图拥有的节点数 $K$ ，以及不同的最大半连通子图的数目 $C$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>强连通分量</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「国家集训队」数颜色-带修改莫队</title><link>https://blog.chenqiqian.com/posts/luogu-1903/</link><pubDate>Sat, 31 Mar 2018 12:21:42 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 31 Mar 2018 12:21:42 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-1903/</guid><description>&lt;p>墨墨购买了一套 $N$ 支彩色画笔（其中有些颜色可能相同）。墨墨会向你发布如下指令：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;code>Q L R&lt;/code> 代表询问你从第 $L$ 支画笔到第 $R$ 支画笔中共有几种不同颜色的画笔。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>R P Col&lt;/code> 把第 $P$ 支画笔替换为颜色 $Col$ 。&lt;/p>
&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>莫队</category><category>OI</category><category>题解</category><category>国家集训队</category></item><item><title>「Violet」蒲公英-分块</title><link>https://blog.chenqiqian.com/posts/luogu-4168/</link><pubDate>Sat, 31 Mar 2018 11:30:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 31 Mar 2018 11:30:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-4168/</guid><description>&lt;p>给定一个数列 ${a_n}$ ，$m$ 次询问在 $[l,r]$ 区间内的最小众数。&lt;br />
强制在线。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>分块</category><category>数据结构</category><category>OI</category><category>题解</category></item><item><title>「AHOI2008」紧急集合-LCA</title><link>https://blog.chenqiqian.com/posts/ahoi2008-emergency/</link><pubDate>Fri, 23 Mar 2018 22:19:33 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 23 Mar 2018 22:19:33 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/ahoi2008-emergency/</guid><description>&lt;p>给出一颗 $n$ 个节点的无权树， $m$ 次询问，每次给出三个点编号为 $a$ ，$b$ ， $c$ ，询问到这三个点距离最小的点的编号以及其距离和。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>最近公共祖先</category><category>图论</category><category>树形结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2011」染色-树链剖分+线段树</title><link>https://blog.chenqiqian.com/posts/sdoi2011-colour/</link><pubDate>Wed, 14 Mar 2018 21:20:54 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 14 Mar 2018 21:20:54 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2011-colour/</guid><description>&lt;p>给定一棵有 $n$ 个节点的无根树和 $m$ 个操作，操作有两类：&lt;/p>
&lt;ul>
&lt;li>将节点 $a$ 到节点 $b$ 路径上所有点都染成颜色 $c$ ；&lt;/li>
&lt;li>询问节点 $a$ 到节点 $b$ 路径上的颜色段数量（连续相同颜色被认为是同一段），&lt;/li>
&lt;/ul>
&lt;p>如“112221”由3段组成：“11”、“222”和“1”。&lt;/p>
&lt;p>请你写一个程序依次完成这 $m$ 个操作。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>线段树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2008」树的统计-树链剖分</title><link>https://blog.chenqiqian.com/posts/zjoi2008-count/</link><pubDate>Sat, 10 Mar 2018 21:18:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 10 Mar 2018 21:18:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2008-count/</guid><description>&lt;p>给定一颗 $n$ 个节点的树，节点编号为 $1$ 到 $n$ ，每个节点都有一个权值 $w_i$ 。&lt;/p>
&lt;p>有以下三种操作或询问：&lt;/p>
&lt;p>I. &lt;code>CHANGE u t&lt;/code> : 把结点 $u$ 的权值改为 $t$&lt;/p>
&lt;p>II. &lt;code>QMAX u v&lt;/code>: 询问从点 $u$ 到点 $v$ 的路径上的节点的最大权值&lt;/p>
&lt;p>III. &lt;code>QSUM u v&lt;/code>: 询问从点 $u$ 到点 $v$ 的路径上的节点的权值和&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2007」时态同步-树形dp</title><link>https://blog.chenqiqian.com/posts/zjoi2007-sync/</link><pubDate>Sat, 03 Mar 2018 18:30:16 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 03 Mar 2018 18:30:16 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2007-sync/</guid><description>&lt;p>给定一棵由 $n$ 个节点构成的树。&lt;/p>
&lt;p>在树上存在一个“激发器”，标号为 $s$ 。当激发器工作后，电流会延边传向每一个相邻节点。而中间节点接收到电流后，会将该电流传向与它连接并且尚未接收到电流的节点。对于每条边 $e$ ，电流通过它需要的时间为 $t_e$ ，电流的转发可以认为是在瞬间完成的。最终，激电流将到达一些“终止节点”――接收电流之后不再转发的节点。&lt;/p>
&lt;p>使用一次道具可以使得电流通过某条边的时间增加一个单位。请问最少使用多少次道具才可达到每一个“终止节点”同时收到电流？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>树形dp</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2007」报表统计-平衡树</title><link>https://blog.chenqiqian.com/posts/zjoi2007-count/</link><pubDate>Sat, 03 Mar 2018 18:29:17 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 03 Mar 2018 18:29:17 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2007-count/</guid><description>&lt;p>有一个长度为 $n$ 的整数序列，并且有以下三种操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>INSERT i k&lt;/code> ：在原数列的第 $i$ 个数后面添加一个新数 $k$ ；如果原数列的第 $i$ 个数已经添加了若干数，则添加在这些数的最后&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MIN GAP&lt;/code>：查询相邻两个数的之间差值（绝对值）的最小值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MIN SORT GAP&lt;/code>：查询所有数中最接近的两个数的差值（绝对值）&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>Treap</category><category>平衡树</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>输入输出优化模板</title><link>https://blog.chenqiqian.com/posts/notes-io-optimize/</link><pubDate>Fri, 23 Feb 2018 22:15:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 23 Feb 2018 22:15:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-io-optimize/</guid><description>&lt;p>输入输出模板替代普通读写方式，可以在一定程度上加快程序运行速度。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>模板</category><category>输入输出</category><category>OI</category><category>模板</category></item><item><title>「红楼一梦」</title><link>https://blog.chenqiqian.com/posts/essay-a-dream-of-red-mansions/</link><pubDate>Sat, 17 Feb 2018 22:40:12 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 17 Feb 2018 22:40:12 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/essay-a-dream-of-red-mansions/</guid><description>&lt;p>最近在做红楼的总结，莫名的也就想来写上两句。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>红楼梦</category><category>随笔</category></item><item><title>「NOI2005」维护数列-非旋Treap</title><link>https://blog.chenqiqian.com/posts/noi2005-sequence/</link><pubDate>Sat, 17 Feb 2018 21:48:01 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 17 Feb 2018 21:48:01 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2005-sequence/</guid><description>&lt;p>维护一个数列，给定初始的 $n$ 个数字。&lt;/p>
&lt;p>现有六种命令：&lt;/p>
&lt;ul>
&lt;li>在第 $pos$ 个数后插入 $tot$ 个数&lt;/li>
&lt;li>翻转从第 $pos$ 个数开始的 $tot$ 个数&lt;/li>
&lt;li>删除从第 $pos$ 个数开始的 $tot$ 个数&lt;/li>
&lt;li>查询从第 $pos$ 个数开始的 $tot$ 个数的和&lt;/li>
&lt;li>设定从第 $pos$ 个数开始的 $tot$ 个数设定为 $c$&lt;/li>
&lt;li>查询整个数列中和最大的连续子区间的和&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>Treap</category><category>平衡树</category><category>数据结构</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>非旋Treap学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-none-rotating-treap/</link><pubDate>Sat, 17 Feb 2018 19:45:17 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 17 Feb 2018 19:45:17 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-none-rotating-treap/</guid><description>&lt;p>非旋 Treap ，是一种不基于旋转的平衡树。它基于 Treap 的树堆思想，并且能够高效的完成某些对区间的操作，而且灵活性比较高。它也可以进行可持久化的操作。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>Treap</category><category>平衡树</category><category>数据结构</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「NOI2002」银河英雄传说-并查集</title><link>https://blog.chenqiqian.com/posts/noi2002-hero/</link><pubDate>Sun, 11 Feb 2018 16:27:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 11 Feb 2018 16:27:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2002-hero/</guid><description>&lt;p>初始时，第 $i$ 号战舰处于第 $i$ 列 $(i = 1, 2, …, 30000)$ 。&lt;/p>
&lt;p>有两种指令：&lt;/p>
&lt;p>合并指令为 &lt;code>M i j&lt;/code> ，含义为将第 $i$ 号战舰所在的整个战舰队列，作为一个整体（头在前尾在后）接至第 $j$ 号战舰所在的战舰队列的尾部。&lt;/p>
&lt;p>询问指令为 &lt;code>C i j&lt;/code> 。该指令意思询问第 $i$ 号战舰与第 $j$ 号战舰当前是否在同一列中，如果在同一列中，那么它们之间布置有多少战舰。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>并查集</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>Dinic学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-dinic/</link><pubDate>Thu, 08 Feb 2018 14:31:15 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 08 Feb 2018 14:31:15 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-dinic/</guid><description>&lt;p>Dinic算法是一种用于网络流中最大流的增广路算法，其时间复杂度为$O(n^2 \times m)$，但大多数情况下会远远优于此时间复杂度。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>Dinic</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「ZJOI2009」假期的宿舍-二分图匹配</title><link>https://blog.chenqiqian.com/posts/zjoi2009-vacation/</link><pubDate>Thu, 08 Feb 2018 07:48:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 08 Feb 2018 07:48:00 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2009-vacation/</guid><description>&lt;p>有些同学回家了，而有些同学则有以前的好朋友来探访，那么住宿就是一个问题。我们假设每个人只能睡和自己直接认识的人的床。我们已知一共有 $n$ 个人，并且知道其中每个人是不是本校学生，也知道每个本校学生是否回家。问是否存在一个方案使得所有不回家的本校学生和来看他们的其他人都有地方住。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>二分图匹配</category><category>Dinic</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>莫队算法学习笔记（一）</title><link>https://blog.chenqiqian.com/posts/notes-mo-algorithm-1/</link><pubDate>Mon, 05 Feb 2018 19:54:29 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 05 Feb 2018 19:54:29 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-mo-algorithm-1/</guid><description>&lt;p>这篇主要介绍在序列上的无修改以及带修改的离线莫队算法。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>莫队</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「SDOI2009」HH的项链-莫队or树状数组</title><link>https://blog.chenqiqian.com/posts/sdoi2009-necklace/</link><pubDate>Mon, 05 Feb 2018 18:11:47 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 05 Feb 2018 18:11:47 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2009-necklace/</guid><description>&lt;p>给定一个长度为 $n$ 的正整数序列 $A$ ,有 $m$ 次询问在 $[l,r]$ 区间内有多少个不同的数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>莫队</category><category>树状数组</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CQOI2014」排序机械臂-Splay</title><link>https://blog.chenqiqian.com/posts/cqoi2014-sort/</link><pubDate>Fri, 02 Feb 2018 15:12:44 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 02 Feb 2018 15:12:44 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2014-sort/</guid><description>&lt;p>维护一个序列，第 $i$ 次操作时寻找第i小的数的所在位置 $P_i$,并将 $(P_{i-1},P_{i}]$ 的区间翻转。&lt;/p>
&lt;p>如果有相同的数，必须保证排序后它们的相对位置关系与初始时相同。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>平衡树</category><category>Splay</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2004」郁闷的出纳员-Splay</title><link>https://blog.chenqiqian.com/posts/noi2004-cashier/</link><pubDate>Wed, 31 Jan 2018 21:05:48 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 31 Jan 2018 21:05:48 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2004-cashier/</guid><description>&lt;p>维护一个数列。&lt;/p>
&lt;p>现有四种命令，新加入一个数 $k$ ，把每个数加上 $k$ ，把每个数减去 $k$ ，查询第 $k$ 大的数。如果数列中的任意数小于 $min$ ，将它立即删除。并在最后输出总共删去的数的个数 $res$ 。&lt;/p>
&lt;p>如果新加入的数 $k$ 的初值小于 $min$ ，它将不会被加入数列。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>平衡树</category><category>Splay</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>考试前要看的东西</title><link>https://blog.chenqiqian.com/posts/notes-test/</link><pubDate>Sun, 28 Jan 2018 10:38:30 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 28 Jan 2018 10:38:30 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-test/</guid><description>&lt;p>OI考试前最好来看一看&amp;hellip;&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>OI</category></item><item><title>冬令营旅游记</title><link>https://blog.chenqiqian.com/posts/trip-bjwc2018/</link><pubDate>Thu, 25 Jan 2018 18:38:19 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 25 Jan 2018 18:38:19 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/trip-bjwc2018/</guid><description>&lt;p>今年冬天，去了趟北京冬令营旅游。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>冬令营</category><category>OI</category><category>游记</category></item><item><title>「随笔」“长大”</title><link>https://blog.chenqiqian.com/posts/essay-growing/</link><pubDate>Wed, 03 Jan 2018 20:33:04 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 03 Jan 2018 20:33:04 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/essay-growing/</guid><description>&lt;p>或许，我一直认为我早就长大了吧。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>随笔</category></item><item><title>「Luogu1043」数字游戏-dp</title><link>https://blog.chenqiqian.com/posts/luogu-1043/</link><pubDate>Sat, 23 Dec 2017 13:15:19 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 23 Dec 2017 13:15:19 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-1043/</guid><description>&lt;p>在你面前有一圈整数（一共 $n$ 个），你要按顺序将其分为 $m$ 个部分，各部分内的数字相加，相加所得的 $m$ 个结果对 10 取模后再相乘，最终得到一个数 $k$ 。游戏的要求是使你所得的 $k$ 最大或者最小。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>OI</category><category>题解</category><category>Luogu</category></item><item><title>[转载]达拉崩吧-OI版</title><link>https://blog.chenqiqian.com/posts/dalabengba-oi/</link><pubDate>Sat, 16 Dec 2017 14:55:42 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 16 Dec 2017 14:55:42 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/dalabengba-oi/</guid><description>&lt;h2 id="原文地址点此查看httpswwwluoguorgdiscussshowpostid29677">原文地址：&lt;a href="https://www.luogu.org/discuss/show?postid=29677">点此查看&lt;/a>&lt;/h2>
&lt;p>很久很久以前 算法突然出现&lt;/p>
&lt;p>带来导论 带走了智商又消失不见&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>歌曲</category><category>OI</category><category>歌曲</category></item></channel></rss>