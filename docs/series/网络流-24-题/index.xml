<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>网络流 24 题 on cqqqwq的小站</title>
    <link>https://blog.chenqiqian.com/series/%E7%BD%91%E7%BB%9C%E6%B5%81-24-%E9%A2%98/</link>
    <description>Recent content in 网络流 24 题 on cqqqwq的小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor>
    <webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster>
    <copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright>
    <lastBuildDate>Sat, 30 Mar 2019 08:47:48 +0000</lastBuildDate>
    <sy:updatePeriod>daily</sy:updatePeriod>
    
        <atom:link href="https://blog.chenqiqian.com/series/%E7%BD%91%E7%BB%9C%E6%B5%81-24-%E9%A2%98/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>「网络流 24 题」数字梯形-费用流</title>
        <link>https://blog.chenqiqian.com/posts/loj6010/</link>
        <pubDate>Sat, 30 Mar 2019 08:47:48 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Sat, 30 Mar 2019 08:47:48 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/loj6010/</guid>
        <description>&lt;p&gt;给定一个由 $n$ 行数字组成的数字梯形如下图所示。梯形的第一行有 $m$ 个数字。从梯形的顶部的 $m$ 个数字开始，在每个数字处可以沿左下或右下方向移动，形成一条从梯形的顶至底的路径。&lt;/p&gt;
&lt;p&gt;分别遵守以下规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从梯形的顶至底的 $m$ 条路径互不相交；&lt;/li&gt;
&lt;li&gt;从梯形的顶至底的 $m$ 条路径仅在数字结点处相交；&lt;/li&gt;
&lt;li&gt;从梯形的顶至底的 $m$ 条路径允许在数字结点相交或边相交。&lt;/li&gt;
&lt;/ol&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>网络流</category>
            
          
            
              <category>费用流</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>网络流 24 题</category>
            
          
        
      </item>
      
      <item>
        <title>「网络流 24 题」软件补丁-最短路</title>
        <link>https://blog.chenqiqian.com/posts/loj6009/</link>
        <pubDate>Sat, 30 Mar 2019 08:40:20 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Sat, 30 Mar 2019 08:40:20 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/loj6009/</guid>
        <description>&lt;p&gt;某公司发现其研制的一个软件中有 $n$ 个错误，随即为该软件发放了一批共 $m$ 个补丁程序。每一个补丁程序都有其特定的适用环境，某个补丁只有在软件中包含某些错误而同时又不包含另一些错误时才可以使用。一个补丁在排除某些错误的同时，往往会加入另一些错误。&lt;/p&gt;
&lt;p&gt;换句话说，对于每一个补丁 $i$ ，都有 $2$ 个与之相应的错误集合 $B_1(i)$ 和 $B_2(i)$ ，使得仅当软件包含 $B_1(i)$ 中的所有错误，而不包含 $B_2(i)$ 中的任何错误时，才可以使用补丁 $i$ 。补丁 $i$ 将修复软件中的某些错误 $F_1(i)$ ，而同时加入另一些错误 $F_2(i)$ 。另外，每个补丁都耗费一定的时间。&lt;/p&gt;
&lt;p&gt;试设计一个算法，利用公司提供的 $m$ 个补丁程序将原软件修复成一个没有错误的软件，并使修复后的软件耗时最少。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>最短路</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>网络流 24 题</category>
            
          
        
      </item>
      
      <item>
        <title>「网络流 24 题」餐巾计划-费用流</title>
        <link>https://blog.chenqiqian.com/posts/loj6008/</link>
        <pubDate>Sat, 30 Mar 2019 07:42:29 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Sat, 30 Mar 2019 07:42:29 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/loj6008/</guid>
        <description>&lt;p&gt;一个餐厅在相继的 $n$ 天里，每天需用的餐巾数不尽相同。假设第 $i$ 天需要 $r_i$ 块餐巾。餐厅可以购买新的餐巾，每块餐巾的费用为 $P$ 分；或者把旧餐巾送到快洗部，洗一块需 $M$ 天，其费用为 $F$ 分；或者送到慢洗部，洗一块需 $n$ 天，其费用为 $S$ 分（$S &amp;lt; F$）。&lt;/p&gt;
&lt;p&gt;每天结束时，餐厅必须决定将多少块脏的餐巾送到快洗部，多少块餐巾送到慢洗部，以及多少块保存起来延期送洗。但是每天洗好的餐巾和购买的新餐巾数之和，要满足当天的需求量。&lt;/p&gt;
&lt;p&gt;试设计一个算法为餐厅合理地安排好 $n$ 天中餐巾使用计划,使总的花费最小。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>网络流</category>
            
          
            
              <category>费用流</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>网络流 24 题</category>
            
          
        
      </item>
      
      <item>
        <title>「网络流 24 题」方格取数-二分图最大独立集</title>
        <link>https://blog.chenqiqian.com/posts/loj6007/</link>
        <pubDate>Sun, 24 Mar 2019 22:48:57 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Sun, 24 Mar 2019 22:48:57 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/loj6007/</guid>
        <description>&lt;p&gt;在一个有 $m \times n$ 个方格的棋盘中，每个方格中有一个正整数。&lt;/p&gt;
&lt;p&gt;现要从方格中取数，使任意 $2$ 个数所在方格没有公共边，且取出的数的总和最大。试设计一个满足要求的取数算法。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>网络流</category>
            
          
            
              <category>二分图</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>网络流 24 题</category>
            
          
        
      </item>
      
      <item>
        <title>「网络流 24 题」试题库-网络最大流</title>
        <link>https://blog.chenqiqian.com/posts/loj6006/</link>
        <pubDate>Sun, 24 Mar 2019 22:39:47 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Sun, 24 Mar 2019 22:39:47 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/loj6006/</guid>
        <description>&lt;p&gt;假设一个试题库中有 $n$ 道试题。每道试题都标明了所属类别。同一道题可能有多个类别属性。现要从题库中抽取 $m$ 道题组成试卷。并要求试卷包含指定类型的试题。试设计一个满足要求的组卷算法。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>网络流</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>网络流 24 题</category>
            
          
        
      </item>
      
      <item>
        <title>「网络流 24 题」最长递增子序列-dp&#43;网络最大流</title>
        <link>https://blog.chenqiqian.com/posts/loj6005/</link>
        <pubDate>Thu, 21 Mar 2019 22:57:57 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Thu, 21 Mar 2019 22:57:57 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/loj6005/</guid>
        <description>&lt;p&gt;给定正整数序列 $x_1 \sim x_n$ ，以下递增子序列均为非严格递增。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;计算其最长递增子序列的长度 $s$ 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算从给定的序列中最多可取出多少个长度为 $s$ 的递增子序列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果允许在取出的序列中多次使用 $x_1$ 和 $x_n$ ，则从给定序列中最多可取出多少个长度为 $s$ 的递增子序列。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>网络流</category>
            
          
            
              <category>动态规划</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>网络流 24 题</category>
            
          
        
      </item>
      
      <item>
        <title>「网络流 24 题」圆桌聚餐-网络最大流</title>
        <link>https://blog.chenqiqian.com/posts/loj6004/</link>
        <pubDate>Wed, 20 Mar 2019 21:12:17 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Wed, 20 Mar 2019 21:12:17 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/loj6004/</guid>
        <description>&lt;p&gt;假设有来自 $m$ 个不同单位的代表参加一次国际会议。每个单位的代表数分别为 $r_i$ 。会议餐厅共有 $n$ 张餐桌，每张餐桌可容纳 $c_i$ 个代表就餐。&lt;/p&gt;
&lt;p&gt;为了使代表们充分交流，希望从同一个单位来的代表不在同一个餐桌就餐。&lt;/p&gt;
&lt;p&gt;试设计一个算法，给出满足要求的代表就餐方案。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>网络流</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>网络流 24 题</category>
            
          
        
      </item>
      
      <item>
        <title>「网络流 24 题」魔术球-二分图最大匹配</title>
        <link>https://blog.chenqiqian.com/posts/loj6003/</link>
        <pubDate>Wed, 20 Mar 2019 20:45:09 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Wed, 20 Mar 2019 20:45:09 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/loj6003/</guid>
        <description>&lt;p&gt;假设有 $n$ 根柱子，现要按下述规则在这 $n$ 根柱子中依次放入编号为 $1, 2, 3, 4, \cdots$ 的球。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;每次只能在某根柱子的最上面放球。&lt;/li&gt;
&lt;li&gt;在同一根柱子中，任何 $2$ 个相邻球的编号之和为完全平方数。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;试设计一个算法，计算出在 $n$ 根柱子上最多能放多少个球。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>网络流</category>
            
          
            
              <category>二分图</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>网络流 24 题</category>
            
          
        
      </item>
      
      <item>
        <title>「网络流 24 题」最小路径覆盖-二分图最大匹配</title>
        <link>https://blog.chenqiqian.com/posts/loj6002/</link>
        <pubDate>Tue, 19 Mar 2019 22:38:15 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Tue, 19 Mar 2019 22:38:15 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/loj6002/</guid>
        <description>&lt;p&gt;给定有向图 $G = (V, E)$。设 $P$ 是 $G$ 的一个简单路（顶点不相交）的集合。如果 $V$ 中每个顶点恰好在 $P$ 的一条路上，则称 $P$ 是 $G$ 的一个路径覆盖。 $P$ 中路径可以从 $V$ 的任何一个顶点开始，长度也是任意的，特别地，可以为 $0$ 。 $G$ 的最小路径覆盖是 $G$ 的所含路径条数最少的路径覆盖。&lt;/p&gt;
&lt;p&gt;设计一个有效算法求一个有向无环图 $G$ 的最小路径覆盖。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>网络流</category>
            
          
            
              <category>二分图</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>网络流 24 题</category>
            
          
        
      </item>
      
      <item>
        <title>「网络流 24 题」太空飞行计划-最大权闭合子图</title>
        <link>https://blog.chenqiqian.com/posts/loj6001/</link>
        <pubDate>Tue, 19 Mar 2019 19:43:52 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Tue, 19 Mar 2019 19:43:52 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/loj6001/</guid>
        <description>&lt;p&gt;W 教授正在为国家航天中心计划一系列的太空飞行。每次太空飞行可进行一系列商业性实验而获取利润。现已确定了一个可供选择的实验集合 $E = { E_1, E_2, \cdots, E_m }$ ，和进行这些实验需要使用的全部仪器的集合 $I = { I_1, I_2, \cdots, I_n }$ 。实验 $E_j$ 需要用到的仪器是 $I$ 的子集 $R_j \subseteq I$ 。配置仪器 $I_k$ 的费用为 $c_k$ 美元。实验 $E_j$ 的赞助商已同意为该实验结果支付 $p_j$ 美元。W 教授的任务是找出一个有效算法，确定在一次太空飞行中要进行哪些实验并因此而配置哪些仪器才能使太空飞行的净收益最大。这里净收益是指进行实验所获得的全部收入与配置仪器的全部费用的差额。&lt;/p&gt;
&lt;p&gt;对于给定的实验和仪器配置情况，编程找出净收益最大的试验计划。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>最大权闭合子图</category>
            
          
            
              <category>网络流</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>网络流 24 题</category>
            
          
        
      </item>
      
      <item>
        <title>「网络流 24 题」搭配飞行员-二分图最大匹配</title>
        <link>https://blog.chenqiqian.com/posts/loj6000/</link>
        <pubDate>Tue, 19 Mar 2019 19:43:03 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Tue, 19 Mar 2019 19:43:03 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/loj6000/</guid>
        <description>&lt;p&gt;飞行大队有若干个来自各地的驾驶员，专门驾驶一种型号的飞机，这种飞机每架有两个驾驶员，需一个正驾驶员和一个副驾驶员。由于种种原因，例如相互配合的问题，有些驾驶员不能在同一架飞机上飞行，问如何搭配驾驶员才能使出航的飞机最多。&lt;/p&gt;
&lt;p&gt;因为驾驶工作分工严格，两个正驾驶员或两个副驾驶员都不能同机飞行。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>网络流</category>
            
          
            
              <category>二分图</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>网络流 24 题</category>
            
          
        
      </item>
      

    
  </channel>
</rss>