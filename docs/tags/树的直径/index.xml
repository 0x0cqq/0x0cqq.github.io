<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>树的直径 on cqqqwq的小站</title>
    <link>https://blog.chenqiqian.com/tags/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/</link>
    <description>Recent content in 树的直径 on cqqqwq的小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor>
    <webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster>
    <copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright>
    <lastBuildDate>Fri, 15 Feb 2019 22:20:30 +0000</lastBuildDate>
    <sy:updatePeriod>daily</sy:updatePeriod>
    
        <atom:link href="https://blog.chenqiqian.com/tags/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>「CF804D」Expected diameter of a tree-树的直径&#43;乱搞</title>
        <link>https://blog.chenqiqian.com/posts/cf804d/</link>
        <pubDate>Fri, 15 Feb 2019 22:20:30 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Fri, 15 Feb 2019 22:20:30 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/cf804d/</guid>
        <description>&lt;p&gt;给定一个含有 $n$ 个点， $m$ 条边的森林。有 $q$ 个询问，每次给出两个点 $u_i,v_i$ ，如果 $u_i$ 在联通块 $A$ 内，$v_i$ 在联通块 $B$ 内，我们随机选择两个点 $a \in A,b \in B$ ，我们在 $(a,b)$ 之间连一条边，如果这个连接成后新联通块不构成一个树，输出 $-1$ ，否则输出新联通块树的直径的期望。所有边权均为 $1$ 。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>乱搞</category>
            
          
            
              <category>树的直径</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>Codeforces</category>
            
          
        
      </item>
      
      <item>
        <title>「CF379F」New Year Tree-树的直径-倍增</title>
        <link>https://blog.chenqiqian.com/posts/cf379f/</link>
        <pubDate>Sun, 30 Dec 2018 09:35:29 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Sun, 30 Dec 2018 09:35:29 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/cf379f/</guid>
        <description>&lt;p&gt;你是一个程序猿，现在有一棵新年树（并不是传统的带着叶子的树）——它有四个节点： $1$ ，$2$ ，$3$ ，$4$ . 其中$2$ ，$3$ ，$4$ 的父亲都是 $1$ .&lt;/p&gt;
&lt;p&gt;新年里，程序猿们往往会做一些有趣的事情。你则选择以往这棵树上加节点来取乐。 一个添加节点的操作是这样的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到树上的一个叶子结点 $v$ .&lt;/li&gt;
&lt;li&gt;设现在树上有 $n$ 个节点，那么你现在会加入两个节点$n+1$ 和 $n+2$ ，它们都会成为 $v$ 的儿子.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;你的任务是在做 $q$ 次这样的操作，并在每做完一次后计算一次树的直径。来吧，我们一起来解决这道新年问题吧！&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>数据结构</category>
            
          
            
              <category>树形结构</category>
            
          
            
              <category>树的直径</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>Codeforces</category>
            
          
        
      </item>
      
      <item>
        <title>「SDOI2011」消防-树的直径&#43;单调队列</title>
        <link>https://blog.chenqiqian.com/posts/sdoi2011-fireman/</link>
        <pubDate>Mon, 21 May 2018 20:11:00 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Mon, 21 May 2018 20:11:00 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/sdoi2011-fireman/</guid>
        <description>&lt;p&gt;某个国家有 $n$ 个城市，这 $n$ 个点之间的边构成一棵树。&lt;/p&gt;
&lt;p&gt;现求一条边长度和不超过 $S$ 的路径（两端都是城市，可以只为一个城市），使得所有城市到这条路径的距离的最大值最小，并输出这个最小值。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>单调队列</category>
            
          
            
              <category>树的直径</category>
            
          
            
              <category>树形结构</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>各省省选</category>
            
          
        
      </item>
      
      <item>
        <title>「SDOI2013」直径-树的直径</title>
        <link>https://blog.chenqiqian.com/posts/sdoi2013-diameter/</link>
        <pubDate>Sat, 12 May 2018 18:04:01 +0000</pubDate>
        <author>cqqqwq@outlook.com (cqqqwq)</author>
        <atom:modified>Sat, 12 May 2018 18:04:01 +0000</atom:modified>
        <guid>https://blog.chenqiqian.com/posts/sdoi2013-diameter/</guid>
        <description>&lt;p&gt;定义一棵树上最长的路径为树的直径。树的直径可能不唯一。&lt;/p&gt;
&lt;p&gt;给定的一棵 $n$ 个结点的树，求其直径的长度，以及有多少条边满足所有的直径都经过该边。&lt;/p&gt;</description>
        
        <dc:creator>cqqqwq</dc:creator>
        
        
        
        
          
            
              <category>图论</category>
            
          
            
              <category>树形结构</category>
            
          
            
              <category>树的直径</category>
            
          
        
        
          
            
              <category>OI</category>
            
          
            
              <category>题解</category>
            
          
        
        
          
            
              <category>各省省选</category>
            
          
        
      </item>
      

    
  </channel>
</rss>