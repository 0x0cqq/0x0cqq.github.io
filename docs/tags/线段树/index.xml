<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>线段树 on cqqqwq的小站</title><link>http://blog.chenqiqian.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/</link><description>Recent content in 线段树 on cqqqwq的小站</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor><webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster><copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright><lastBuildDate>Tue, 02 Apr 2019 21:50:00 +0000</lastBuildDate><sy:updatePeriod>daily</sy:updatePeriod><atom:link href="http://blog.chenqiqian.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/index.xml" rel="self" type="application/rss+xml"/><item><title>「FJOI2015」火星商店问题-线段树分治+可持久化Trie</title><link>http://blog.chenqiqian.com/posts/fjoi2015-shop/</link><pubDate>Tue, 02 Apr 2019 21:50:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 02 Apr 2019 21:50:00 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/fjoi2015-shop/</guid><description>&lt;p>有 $n$ 个商店，每个商店都有一个特殊商品，每个人在任何时间都可以买。第一天可能没有进货，有若干次询问，而之后的每天，都有&lt;strong>一次&lt;/strong>进货和若干次询问，每次进货都是某个商店进了某个编号的货，每次询问都是询问在编号为 $l$ 到 $r$ 的商店中，在 $d$ 天内进的货的编号异或 $x$ 的最大值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>线段树分治</category><category>可持久化线段树</category><category>Trie</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2017」树点涂色-LCT+树链剖分</title><link>http://blog.chenqiqian.com/posts/sdoi2017-paint/</link><pubDate>Sat, 30 Mar 2019 13:00:28 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 30 Mar 2019 13:00:28 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/sdoi2017-paint/</guid><description>&lt;p>Bob 有一棵 $n​$ 个点的有根树，其中 $1​$ 号点是根节点。Bob 在每个节点上涂了颜色，并且每个点上的颜色不同。&lt;/p>
&lt;p>定义一条路径的权值是，这条路径上的点（包括起点和终点）共有多少种不同的颜色。&lt;/p>
&lt;p>Bob 可能会进行这几种操作：&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 x&lt;/code>，把点 $x$ 到根节点的路径上的所有的点染上一种没有用过的新颜色；&lt;/li>
&lt;li>&lt;code>2 x y&lt;/code>，求 $x$ 到 $y$ 的路径的权值；&lt;/li>
&lt;li>&lt;code>3 x&lt;/code>，在以 $x$ 为根的子树中选择一个点，使得这个点到根节点的路径权值最大，求最大权值。&lt;/li>
&lt;/ul>
&lt;p>Bob 一共会进行 $m$ 次操作。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>树形结构</category><category>dfs序</category><category>LCT</category><category>线段树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CF540E」Infinite Inversions-动态开点线段树</title><link>http://blog.chenqiqian.com/posts/cf540e/</link><pubDate>Tue, 01 Jan 2019 14:11:22 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 01 Jan 2019 14:11:22 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/cf540e/</guid><description>&lt;p>现在有一个由所有正整数组成的无限递增序列： $p = {1,2,3,&amp;hellip;}$ 。&lt;/p>
&lt;p>对这个序列执行 $n$ 次交换操作。每次一个操作，给出两个整数 $a,b$，交换位置 $a$ 和 $b$ 处的元素。&lt;/p>
&lt;p>你的任务是在所有操作结束后，输出最终序列的逆序对个数，即满足 $i &amp;lt; j$ 且 $p_i &amp;gt; p_j$ 的有序数对 $(i,j)$ 的数量。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF369E」Valera and Queries-线段树</title><link>http://blog.chenqiqian.com/posts/cf369e/</link><pubDate>Sat, 29 Dec 2018 23:41:25 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 29 Dec 2018 23:41:25 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/cf369e/</guid><description>&lt;p>有 $n$ 条线段，分别为 $[l_i,r_i]$ 。&lt;/p>
&lt;p>有 $m$ 个询问，分别为 $cnt_i,p_1,p_2,&amp;hellip;,p_{cnt_i}$ 。&lt;/p>
&lt;p>对于每个询问，输出有多少线段至少覆盖这 $cnt_i$ ​个点中的一个。（$\sum cnt_i \le 3 \cdot 10^5$）&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>树套树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF256E」Lucky Arrays-简单线段树</title><link>http://blog.chenqiqian.com/posts/cf256e/</link><pubDate>Thu, 27 Dec 2018 20:51:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 27 Dec 2018 20:51:00 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/cf256e/</guid><description>&lt;p>给定一个长度为 $n(1 \le n \le 77777)$ 的数列 $a$ ，初始的时候全为 0。&lt;/p>
&lt;p>给出一个 $3 \times 3$ 的矩阵 $w_{i,j}$ ，$w_{i,j} = 1$ 时代表 $(i,j)$ 这个**有序**数对为和谐的数对，否则 $(i,j)$ 不为一个和谐数对。&lt;/p>
&lt;p>一个数列 $a$ 是和谐的当且仅当对于所有的 $1\le i \le n-1$ ， $(a_i,a_{i+1})$ 均为和谐数对。&lt;/p>
&lt;p>有 $m(1\le m \le 77777)$ 次修改和询问，每次给出两个整数 $v_i,t_i$，将 $a_{v_i} (1 \le v_i \le n)$ 修改为 $t_i(0\le t_i \le 3)$。&lt;/p>
&lt;p>每次修改后都询问，如果将数列里所有的 $0$ 都替换为任意 $1$ 到 $3$ 之间的整数（不同位置的 $0$ 可以替换为不同的数），那么最后产生的和谐的数列有多少种。每次修改后的查询并不会使数列发生任何改变。&lt;/p>
&lt;p>答案对 $777777777$ 取模。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF160E」Buses and People-线段树</title><link>http://blog.chenqiqian.com/posts/cf160e/</link><pubDate>Mon, 24 Dec 2018 23:57:34 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 24 Dec 2018 23:57:34 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/cf160e/</guid><description>&lt;p>Bertown 大街可以抽象为一条数轴。在数轴上有 $10^9$ 个巴士站。站点按照它们在数轴上的顺序从 $1$ 到 $10^9$ 的整数编号。这个城市有 $n$ 辆公共汽车。每天第 $i$ 个公共汽车从 $s_i$ 位置出发，到 $f_i$ 位置停止（ $s_i &amp;lt; f_i$ ），它在所有位于 $s_i$ 与 $f_i$ 的中间站点停靠并且仅在晚上返回。公共汽车在时间 $t_i$ 开始行驶，并且它也在时间 $t_i$ 完成行驶（行驶、停靠都是瞬间的）。所有公共汽车的开始时间 $t_i$ 都不同。公交车有无限的容量。&lt;/p>
&lt;p>Bertown 有很多居民。今天第 $i$ 个人要从 $l_i$ 位置出发到 $r_i$ 位置结束（ $l_i &amp;lt; r_i$ ）；第 $i$ 个人在时间 $b_i$ 进入他的出发位置（ $l_i$ ）。一方面，每个人都希望尽快到达目的地，另一方面，他不想换乘公交车。&lt;/p>
&lt;p>也就是：为第 $i$ 个人挑选的公交汽车 $j$ ，满足 $s_j \leq l_i$, $r_i \leq f_j$ 和 $b_i \leq t_j$ 的条件下，$t_j$ 最小。&lt;/p>
&lt;p>你的任务是确定每个人今天是否可以到达目的地，如果可以，找到每个人将乘坐的公交车的号码，不可以则输出 $-1$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF115E」Linear Kingdom Races-dp+线段树优化</title><link>http://blog.chenqiqian.com/posts/cf115e/</link><pubDate>Sun, 23 Dec 2018 22:26:23 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 23 Dec 2018 22:26:23 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/cf115e/</guid><description>&lt;p>你是一个赛车比赛的组织者，想在线性王国中安排一些比赛。&lt;/p>
&lt;p>线性王国有 $n$ 条连续的从左到右的道路。道路从左到右依次编号为从 $1$ 到 $n$ ，因此道路按照升序排列。在这些道路上可能会有几场比赛，每一场比赛都将使用这些道路的某个连续的子序列。而且，如果某场比赛举行了，你将获得一定数额的金钱。没有比赛在时间上重叠，所以每一段道路可以在多个比赛中使用。&lt;/p>
&lt;p>不幸的是，&lt;strong>所有道路&lt;/strong>的状况都不佳，需要修理。每条路都有与之相关的维修费用，你需要支付这笔费用来修理道路。只有在某场比赛中需要使用的所有道路&lt;strong>都进行了修复&lt;/strong>，才能进行比赛。你的任务是修复道路并使你的利润最大化。你的利润被定义为你从比赛中获得的总金额减去你花在修理道路上的钱。&lt;strong>请注意，您可以决定不修任何道路，并获得利润 $0$ 。&lt;/strong>&lt;/p>
&lt;p>输出你能获得的最大利润。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「SCOI2016」美味-可持久化线段树</title><link>http://blog.chenqiqian.com/posts/scoi2016-delicious/</link><pubDate>Tue, 11 Dec 2018 21:16:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 11 Dec 2018 21:16:36 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/scoi2016-delicious/</guid><description>&lt;p>一家餐厅有 $n$ 道菜，编号 $1,\dots,n$ ，大家对第 $i$ 道菜的评价值为 $a_i(1 \leq i \leq n)$。有 $m$ 位顾客，第 $i$ 位顾客的期望值为 $b_i$，而他的偏好值为 $x_i$ 。因此，第 $i$ 位顾客认为第 $j$ 道菜的美味度为 $b_i\ \text{XOR}\ (a_j+x_i)$ ，$\text{XOR}$ 表示异或运算。&lt;/p>
&lt;p>第 $i$ 位顾客希望从这些菜中挑出他认为最美味的菜，即美味值最大的菜，但由于价格等因素，他只能从第 $l_i$ 道到第 $r_i$ 道中选择。请你帮助他们找出最美味的菜。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>可持久化主席树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2015」Kinoman-线段树</title><link>http://blog.chenqiqian.com/posts/poi2015-kinoman/</link><pubDate>Mon, 10 Dec 2018 19:50:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 10 Dec 2018 19:50:32 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/poi2015-kinoman/</guid><description>&lt;p>共有 $m$ 部电影，编号为 $1$ 到 $m$，第 $i$ 部电影的好看值为 $w[i]$。在 $n$ 天之中（从 $1$ 到 $n$ 编号）每天会放映一部电影，第 $i$ 天放映的是第 $f[i]$ 部。你可以选择 $l,r(1 \leq l \leq r \leq n)$ ，并观看第 $l,l+1,\dots , r$ 天内所有的电影。如果同一部电影你观看多于一次，你会感到无聊，于是无法获得这部电影的好看值。所以你希望最大化观看且仅观看过一次的电影的好看值的总和。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「HEOI2016/TJOI2016」树-线段树</title><link>http://blog.chenqiqian.com/posts/heoi2016-tjoi2016-tree/</link><pubDate>Fri, 26 Oct 2018 23:30:51 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 26 Oct 2018 23:30:51 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/heoi2016-tjoi2016-tree/</guid><description>&lt;p>在2016年，佳媛姐姐刚刚学习了树，非常开心。现在他想解决这样一个问题：给定一颗有根树（根为 $1$），有以下两种操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>标记操作：对某个结点打上标记（在最开始，只有结点1有标记，其他结点均无标记，而且对于某个结点，可以打多次标记。）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>询问操作：询问某个结点最近的一个打了标记的祖先（这个结点本身也算自己的祖先）&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>你能帮帮她吗?&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>树形结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SCOI2014」方伯伯的OJ-动态开点线段树</title><link>http://blog.chenqiqian.com/posts/scoi2014-onlinejudge/</link><pubDate>Wed, 03 Oct 2018 23:35:33 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 03 Oct 2018 23:35:33 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/scoi2014-onlinejudge/</guid><description>&lt;p>方伯伯正在做他的 OJ 。现在他在处理 OJ 上的用户排名问题。 OJ 上注册了 $n$ 个用户，编号为 $1$ ～ $n$ ，一开始他们按照编号排名。&lt;/p>
&lt;p>方伯伯会按照心情对这些用户做以下四种操作，修改用户的排名和编号 ，共有 $m$ 次操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>操作格式为 &lt;code>1 x y&lt;/code> ，意味着将编号为 $x$ 的用户编号改为 $y$ ，而排名不变，执行完该操作后需要输出该用户在队列中的位置，数据保证 $x$ 必然出现在队列中，同时， $y$ 是一个当前不在排名中的编号。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作格式为 &lt;code>2 x&lt;/code> ，意味着将编号为 $x$ 的用户的排名提升到第一位，执行完该操作后需要输出执行该操作前编号为 $x$ 用户的排名。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作格式为 &lt;code>3 x&lt;/code> ，意味着将编号为 $x$ 的用户的排名降到最后一位，执行完该操作后需要输出执行该操作前编号为 $x$ 用户的排名。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作格式为 &lt;code>4 k&lt;/code>，意味着查询当前排名为 $k$ 的用户编号，执行完该操作后需要输出当前操作用户的编号。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>对于 $100%$ 的数据， $1 \leq n \leq 10^8,1 \leq m \leq 10^5$。&lt;/p>
&lt;p>强制在线。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HEOI2016/TJOI2016」排序-线段树</title><link>http://blog.chenqiqian.com/posts/heoi2016-tjoi2016-sort/</link><pubDate>Wed, 29 Aug 2018 10:38:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 29 Aug 2018 10:38:45 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/heoi2016-tjoi2016-sort/</guid><description>&lt;p>在 $2016$ 年，佳媛姐姐喜欢上了数字序列。因而他经常研究关于序列的一些奇奇怪怪的问题，现在他在研究一个难题，需要你来帮助他。这个难题是这样子的：给出一个 $1$ 到 $n$ 的全排列，现在对这个全排列序列进行 $m$ 次局部排序，排序分为两种：&lt;/p>
&lt;ul>
&lt;li>$(0,l,r)$表示将区间 $[l,r]$ 的数字升序排序&lt;/li>
&lt;li>$(1,l,r)$表示将区间 $[l,r]$ 的数字降序排序&lt;br />
最后询问第 $q$ 位置上的数字。&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>排序</category><category>二分答案</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2012」魔幻棋盘-差分+树套树</title><link>http://blog.chenqiqian.com/posts/noi2012-board/</link><pubDate>Fri, 24 Aug 2018 13:15:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 24 Aug 2018 13:15:53 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/noi2012-board/</guid><description>&lt;p>将要读二年级的小 Q 买了一款新型益智玩具——魔幻棋盘，它是一个 $N$ 行 $M$ 列的网格棋盘，每个格子中均有一个正整数。棋盘守护者在棋盘的第 $X$ 行第 $Y$ 列（行与列均从 $1$ 开始编号）并且始终不会移动。棋盘守护者会进行两种操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>询问：他会以自己所在位置为基础，向四周随机扩展出一块大小不定的矩形区域，向你询问这一区域内所有数的最大公约数是多少。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改：他会随意挑选棋盘上的一块矩形区域，将这一区域内的所有数同时加上一个给定的整数。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>游戏说明书上附有这样一句话“聪明的小朋友，当你连续答对 $19930324$ 次询问后会得到一个惊喜噢！”。小 Q 十分想得到这个惊喜，于是每天都在玩这个玩具。但由于他粗心大意，经常算错数，难以达到这个目标。于是他来向你寻求帮助，希望你帮他写一个程序来回答棋盘守护者的询问，并保证 $100%$ 的正确率。&lt;/p>
&lt;p>为了简化问题，你的程序只需要完成棋盘守护者的 $T$ 次操作，并且问题保证任何时刻棋盘上的数字均为不超过 $2^{62} - 1$ 的正整数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>树套树</category><category>数据结构</category><category>差分</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「SHOI2016」随机序列-线段树</title><link>http://blog.chenqiqian.com/posts/shoi2016-sequence/</link><pubDate>Sat, 18 Aug 2018 20:14:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 18 Aug 2018 20:14:36 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/shoi2016-sequence/</guid><description>&lt;p>你的面前有 $n$ 个数排成一行，分别为 $a_1,a_2,&amp;hellip;,a_n$ 。你打算在每相邻的两个 $a_i$c和 $a_{i+1}$ 间都插入一个加号、减号或者乘号。那么一共有 $3^{n-1}$ 种可能的表达式。&lt;/p>
&lt;p>你对所有可能的表达式的值的和非常感兴趣。但这毕竟太简单了，所以你还打算支持一个修改操作，可以修改某个 $a_i$ 的值。&lt;/p>
&lt;p>你能够编写一个程序对每个修改都输出修改完之后所有可能表达式的和吗？注意，修改是永久的，也就是说每次修改都是在上一次修改的基础上进行，而不是在最初的表达式上进行。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2011」Tree Rotations-线段树合并</title><link>http://blog.chenqiqian.com/posts/poi2011-tree-rotations/</link><pubDate>Mon, 23 Jul 2018 22:51:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 23 Jul 2018 22:51:45 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/poi2011-tree-rotations/</guid><description>&lt;p>现在有一棵二叉树，所有非叶子节点都有两个孩子。在每个叶子节点上有一个权值(有 $n$ 个叶子节点，满足这些权值为 $1&amp;hellip;n$ 的一个排列)。可以任意交换每个非叶子节点的左右孩子。&lt;br />
要求进行一系列交换，使得最终所有叶子节点的权值按照前序遍历序写出来，逆序对个数最少。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>树形结构</category><category>线段树合并</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「HAOI2012」高速公路-期望+线段树</title><link>http://blog.chenqiqian.com/posts/haoi2012-highway/</link><pubDate>Thu, 19 Jul 2018 20:06:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 19 Jul 2018 20:06:36 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/haoi2012-highway/</guid><description>&lt;p>&lt;code>Y901&lt;/code> 高速公路是一条由 $N-1$ 段路以及 $N$ 个收费站组成的东西向的链，我们按照由西向东的顺序将收费站依次编号为 $1 \sim N$ ，从收费站 $i$ 行驶到 $i+1$ (或从 $i+1$ 行驶到 $i$ )需要收取 $V_i$ 的费用。高速路刚建成时所有的路段都是免费的。&lt;/p>
&lt;p>政府部门根据实际情况，会不定期地对连续路段的收费标准进行调整，根据政策涨价或降价。&lt;/p>
&lt;p>求对于给定的 $l,r(l &amp;lt; r)$ ，在第 $l$ 个到第 $r$ 个收费站里等概率随机取出两个不同的收费站 $a$ 和 $b$ ，那么从 $a$ 行驶到 $b$ 将期望花费多少费用呢?&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>数学</category><category>期望</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「IOI2014」Wall-线段树</title><link>http://blog.chenqiqian.com/posts/ioi2014-wall/</link><pubDate>Tue, 17 Jul 2018 19:51:27 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 17 Jul 2018 19:51:27 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/ioi2014-wall/</guid><description>&lt;p>给定一个长度为 $n$ 且初始值全为 $0$ 的序列。你需要支持以下两种操作：&lt;/p>
&lt;ul>
&lt;li>$Add, L, R, h$ ：将序列 $[L, R]$ 内所有值小于 $h$ 的元素都赋为 $h$，此时不改变高度大于 $h$ 的元素值&lt;/li>
&lt;li>$Remove, L, R, h$：将序列 $[L, R]$ 内所有值大于 $h$ 的元素都赋为 $h$ ，此时不改变高度小于 $h$ 的元素值&lt;/li>
&lt;/ul>
&lt;p>你需要输出进行 $k$ 次上述操作之后的序列。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>IOI</category></item><item><title>「SDOI2014」旅行-树链剖分+动态开点线段树</title><link>http://blog.chenqiqian.com/posts/sdoi2014-journey/</link><pubDate>Thu, 24 May 2018 20:38:27 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 24 May 2018 20:38:27 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/sdoi2014-journey/</guid><description>&lt;p>给定一棵 $n$ 个节点的树，对于每个点都有两个权值 $w_i,c_i$ 。&lt;/p>
&lt;p>存在 $m$ 个操作，分为4类。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>“&lt;code>CC x c&lt;/code>”：将 $c_x$ 更改为 $c$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“&lt;code>CW x w&lt;/code>”：将 $w_x$ 更改为 $w$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“&lt;code>QS x y&lt;/code>”：对所有满足在 $x$ 到 $y$ 路径上且 $c_i = c_x = c_y$ 的节点 $i$，求 $\sum w_i$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“&lt;code>QM x y&lt;/code>”：对所有满足在 $x$ 到 $y$ 路径上且 $c_i = c_x = c_y$ 的节点 $i$ ，求 $\max(w_i)$ ；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>对于后两个操作，保证 $c_x = c_y$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>树链剖分</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2014」KUR-Couriers-主席树</title><link>http://blog.chenqiqian.com/posts/poi2014-kur/</link><pubDate>Sun, 06 May 2018 19:38:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 06 May 2018 19:38:00 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/poi2014-kur/</guid><description>&lt;p>给一个数列 ${a_n}$ ，每次询问区间 $[l,r]$ 内有没有一个数出现次数超过一半。如果有，输出这个数，如果没有，输出 $0$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>主席树</category><category>线段树</category><category>可持久化线段树</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「Luogu3765」总统选举-平衡树-线段树</title><link>http://blog.chenqiqian.com/posts/luogu-3765/</link><pubDate>Wed, 25 Apr 2018 23:30:25 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 25 Apr 2018 23:30:25 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/luogu-3765/</guid><description>&lt;p>秋之国共有 $n$ 个人，分别编号为 $1,2,&amp;hellip;,n$ ，一开始每个人都投了一票，范围 $[1,n]$ ，表示支持对应编号的人当总统。共有 $m$ 次预选，每次选取编号 $[l_i,r_i]$ 内的选民展开小规模预选，在该区间内获得超过区间大小一半的票的人获胜，如果没有人获胜，则由小 C 钦定一位候选者获得此次预选的胜利（获胜者可以不在该区间内），每次预选的结果需要公布出来，并且每次会有 $k_i$ 个人决定将票改投向该次预选的获胜者。全部预选结束后，公布最后成为总统的候选人，没有候选人的话输出 $-1$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>平衡树</category><category>线段树</category><category>OI</category><category>题解</category><category>Luogu</category></item><item><title>「NOI2015」软件包管理器-树链剖分</title><link>http://blog.chenqiqian.com/posts/noi2015-manager/</link><pubDate>Mon, 09 Apr 2018 21:07:03 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 09 Apr 2018 21:07:03 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/noi2015-manager/</guid><description>&lt;p>你决定设计你自己的软件包管理器。如果软件包 A 依赖软件包 B ，那么安装软件包 A 以前，必须先安装软件包 B 。同时，如果想要卸载软件包 B ，则必须卸载软件包 A 。现在你已经获得了所有的软件包之间的依赖关系。除 $0$ 号软件包以外，所有软件包都会依赖一个且仅一个软件包，而 $0$ 号软件包不依赖任何一个软件包。依赖关系不存在环。&lt;/p>
&lt;p>现在有一些安装或卸载软件包的操作，需要求出这个操作实际上会改变多少个软件包的安装状态（即安装操作会安装多少个未安装的软件包，或卸载操作会卸载多少个已安装的软件包）。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>线段树</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「SDOI2011」染色-树链剖分+线段树</title><link>http://blog.chenqiqian.com/posts/sdoi2011-colour/</link><pubDate>Wed, 14 Mar 2018 21:20:54 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 14 Mar 2018 21:20:54 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/sdoi2011-colour/</guid><description>&lt;p>给定一棵有 $n$ 个节点的无根树和 $m$ 个操作，操作有两类：&lt;/p>
&lt;ul>
&lt;li>将节点 $a$ 到节点 $b$ 路径上所有点都染成颜色 $c$ ；&lt;/li>
&lt;li>询问节点 $a$ 到节点 $b$ 路径上的颜色段数量（连续相同颜色被认为是同一段），&lt;/li>
&lt;/ul>
&lt;p>如“112221”由3段组成：“11”、“222”和“1”。&lt;/p>
&lt;p>请你写一个程序依次完成这 $m$ 个操作。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>线段树</category><category>OI</category><category>题解</category><category>各省省选</category></item></channel></rss>