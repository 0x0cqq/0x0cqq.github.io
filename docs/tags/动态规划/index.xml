<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>动态规划 on cqqqwq的小站</title><link>https://blog.chenqiqian.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link><description>Recent content in 动态规划 on cqqqwq的小站</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor><webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster><copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright><lastBuildDate>Sun, 09 Aug 2020 12:45:20 +0800</lastBuildDate><sy:updatePeriod>daily</sy:updatePeriod><atom:link href="https://blog.chenqiqian.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/index.xml" rel="self" type="application/rss+xml"/><item><title>「CF750E」New Year and Old Subsequence-矩阵+线段树+dp</title><link>https://blog.chenqiqian.com/posts/cf750e/</link><pubDate>Sun, 09 Aug 2020 12:45:20 +0800</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 09 Aug 2020 12:45:20 +0800</atom:modified><guid>https://blog.chenqiqian.com/posts/cf750e/</guid><description>&lt;p>定义一个数字串为“妙”的当且仅当：该串包含某一子序列为 $2017$ ，且不包含子序列 $2016$。&lt;/p>
&lt;p>定义一个数字串的“丑值”为：该串至少删去几个字符，可以使得剩余串变“妙”；如果删去任意多个字符，均无法使该串变“妙”，则该串的“丑值”是 $-1$。&lt;/p>
&lt;p>给定一个长度为 $n$ 的数字串 $s$ 。有 $q$ 次询问，每次询问用 $(l_i,r_i)$ 表示。对于每次询问，回答子串 $s[l_i&amp;hellip;r_i]$ 的“丑值”。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>矩阵</category><category>线段树</category><category>动态规划</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「网络流 24 题」最长递增子序列-dp+网络最大流</title><link>https://blog.chenqiqian.com/posts/loj6005/</link><pubDate>Thu, 21 Mar 2019 22:57:57 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 21 Mar 2019 22:57:57 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/loj6005/</guid><description>&lt;p>给定正整数序列 $x_1 \sim x_n$ ，以下递增子序列均为非严格递增。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>计算其最长递增子序列的长度 $s$ 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>计算从给定的序列中最多可取出多少个长度为 $s$ 的递增子序列。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果允许在取出的序列中多次使用 $x_1$ 和 $x_n$ ，则从给定序列中最多可取出多少个长度为 $s$ 的递增子序列。&lt;/p>
&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>网络流</category><category>动态规划</category><category>OI</category><category>题解</category><category>网络流 24 题</category></item><item><title>「CF581F」 Zublicanes and Mumocrates - 树形dp</title><link>https://blog.chenqiqian.com/posts/cf581f/</link><pubDate>Sat, 02 Mar 2019 12:19:10 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 02 Mar 2019 12:19:10 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf581f/</guid><description>&lt;p>一棵树上有 $n$ 个节点，把每个节点染成黑色或白色，要求叶子节点一半是黑色，一半是白色（保证叶子节点的个数是偶数）。&lt;/p>
&lt;p>求在满足要求的情况下，最小的两端颜色不同的边的数量。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>树形dp</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF542D」Superhero's Job - dp + 数论</title><link>https://blog.chenqiqian.com/posts/cf542d/</link><pubDate>Sat, 02 Mar 2019 12:17:18 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 02 Mar 2019 12:17:18 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf542d/</guid><description>&lt;p>我们定义&lt;br />
$$&lt;br />
J(x) = \sum_{d | x} [\gcd(x,\frac{x}{d}) = 1] d&lt;br />
$$&lt;/p>
&lt;p>请你求出 $J(x) = A$ 有多少个 $x$ 满足条件。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>数学</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF543C」Remembering Strings-状态压缩dp</title><link>https://blog.chenqiqian.com/posts/cf543c/</link><pubDate>Fri, 15 Feb 2019 16:30:51 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 15 Feb 2019 16:30:51 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf543c/</guid><description>&lt;p>给定 $n$ 个长度均为 $m$ 的字符串，再给出一个 $n$ 行 $m$ 列的矩阵 ${a_{nm}}$。&lt;br />
矩阵元素 $a_{ij}$ 代表把第 $i$ 个字符串第 $j$ 个字符改成其它任意字符所需要的代价。&lt;/p>
&lt;p>现在要求对于任意一个字符串，总存在某一位置 $j$ 使得该位置上的字符在任意其他字符串该位置的字符不同。&lt;/p>
&lt;p>即为对于第 x 个字符串 ，有 $\exists j \in [1,m] , \forall i \in [1,n],s_{xj} \neq s_{ij}$ 。&lt;/p>
&lt;p>求把所有字符串修改成满足上述要求的字符串的最小代价是多少？&lt;/p>
&lt;p>数据范围： $1 \le n,m \le 20,1\le a_{ij} \le 10^6$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>状压dp</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF321E」Ciel and Gondolas-wqs二分+决策单调性</title><link>https://blog.chenqiqian.com/posts/cf321e/</link><pubDate>Tue, 12 Feb 2019 22:07:23 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 12 Feb 2019 22:07:23 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf321e/</guid><description>&lt;p>Ciel 狐狸在游乐园里排队等待上摩天轮。现在有 $n$ 个人按编号顺次在队列里，有 $m$ 条船，第 $i$ 条船到时，前 $q_{i}$ 个人可以上船。保证 $\sum q_i = n$。 人总是不愿意和陌生人上同一条船的，当第 $i$ 个人与第 $j$ 个人处于同一条船上时，会产生 $u_{i,j}$ 的沮丧值。请你求出最小的沮丧值和。一条船上的人两两都会产生沮丧值，不会计算这个沮丧值两次。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>wqs二分</category><category>决策单调性</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF476E」Dreamoon and Strings-动态规划</title><link>https://blog.chenqiqian.com/posts/cf476e/</link><pubDate>Mon, 11 Feb 2019 23:23:18 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 11 Feb 2019 23:23:18 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf476e/</guid><description>&lt;p>Dreamoon 有一个字符串 $s$ 和一个模式串 $p$ ，他会先从 $s$ 中删除恰好 $x$ 个字符来产生一个新的字符串 $s'$ 。然后他会计算 $occ(s',p)$，即从 $s'$ 中能找到的等于 pp 的不相交的子串数量的最大值。他想让 $occ(s',p)$ 的值尽可能大。&lt;/p>
&lt;p>更形式地说，让我们用 $ans(x)$ 表示所有可以从 $s$ 中删去恰好 $x$ 个字符得到的 $s'$ 中 $occ(s',p)$ 的最大值。Dreamoon 想要知道对于所有的 $x$ $(0 \leq x \leq |s|)$， $ans(x)$ 的值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF813D」Two Melodies-简单dp</title><link>https://blog.chenqiqian.com/posts/cf813d/</link><pubDate>Tue, 29 Jan 2019 07:10:48 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 29 Jan 2019 07:10:48 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf813d/</guid><description>&lt;p>给定一个长度为 $n$ 的数组，我们要从中找出两个不相交（不含邮相同元素的）的子序列，要求每个子序列的任意两个相邻元素的差的绝对值为 $1$ 或 在模 $7$ 意义下相同。请你求出这两个子序列长度和的最大值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF86C」Genetic engineering-AC自动机+dp</title><link>https://blog.chenqiqian.com/posts/cf86c/</link><pubDate>Wed, 09 Jan 2019 19:18:07 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 09 Jan 2019 19:18:07 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf86c/</guid><description>&lt;p>我们定义一个 DNA 序列为仅有 &lt;code>ATCG&lt;/code> 四个字母的字符串。&lt;/p>
&lt;p>给出 $m(1 \le m \le 10)$ 个 DNA 序列模式串 $s_i$，每个长度均不超过 $10$ ，我们定义一个 DNA 序列 $w$ 是好的，当且仅当对于 $w$ 的每一个位置 $i$ ，都存在至少一个模式串 $s_j$ ， 使得 $w[l&amp;hellip;r] = s_j$（ $w[l&amp;hellip;r]$ 表示一个原字符串的一个子串） ， 其中 $1 \le l \le i \le r \le |w|$（ $|w|$ 为 DNA序列 $w$ 的长度） 。&lt;/p>
&lt;p>请你计算出所有长度为 $n(1 \le n \le 1000)$ 的好的 DNA 序列的个数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>动态规划</category><category>AC自动机</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF486E」LIS of Sequence-简单数据结构</title><link>https://blog.chenqiqian.com/posts/cf486e/</link><pubDate>Tue, 01 Jan 2019 13:13:38 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 01 Jan 2019 13:13:38 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf486e/</guid><description>&lt;p>给你一个长度为 $n$ 的序列 $a_1,a_2,&amp;hellip;,a_n$ ，你需要把这 $n$ 个元素分成三类：$1,2,3$，每类的条件如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>所有&lt;/strong>的最长上升子序列&lt;strong>都不包含&lt;/strong>这个元素&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>有但非所有&lt;/strong>的最长上升子序列&lt;strong>包含&lt;/strong>这个元素&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>所有&lt;/strong>的最长上升子序列&lt;strong>都包含&lt;/strong>这个元素&lt;/p>
&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>数据结构</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF311B」Cats Transport-斜率优化dp</title><link>https://blog.chenqiqian.com/posts/cf311b/</link><pubDate>Thu, 27 Dec 2018 20:55:16 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 27 Dec 2018 20:55:16 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf311b/</guid><description>&lt;p>Zxr960115 是一个大农场主。他养了 $m$ 只可爱的猫子,雇佣了 $p$ 个铲屎官。这里有一条又直又长的道路穿过了农场，有 $n$ 个山丘坐落在道路周围，编号自左往右从1到n。山丘 $i$ 与山丘 $i-1$ 的距离是 $d_i$ 米。铲屎官们住在 $1$ 号山丘。&lt;/p>
&lt;p>一天，猫子们外出玩耍。猫子 $i$ 去山丘 $h_i$ 游玩，在 $t_i$ 时间结束他的游玩，然后在山丘 $h_i$ 傻等铲屎官。铲屎官们必须把所有的猫子带上。每个铲屎官都会从 $1$ 走到 $n$ 号山丘，可以不花费时间的把所有路途上游玩结束的猫子带上。每个铲屎官的速度为一米每单位时间，并且足够强壮来带上任意数量的猫子。&lt;/p>
&lt;p>你的任务是安排每个铲屎官出发的时间，最小化猫子们等待的时间之和。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>斜率优化</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF115E」Linear Kingdom Races-dp+线段树优化</title><link>https://blog.chenqiqian.com/posts/cf115e/</link><pubDate>Sun, 23 Dec 2018 22:26:23 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 23 Dec 2018 22:26:23 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf115e/</guid><description>&lt;p>你是一个赛车比赛的组织者，想在线性王国中安排一些比赛。&lt;/p>
&lt;p>线性王国有 $n$ 条连续的从左到右的道路。道路从左到右依次编号为从 $1$ 到 $n$ ，因此道路按照升序排列。在这些道路上可能会有几场比赛，每一场比赛都将使用这些道路的某个连续的子序列。而且，如果某场比赛举行了，你将获得一定数额的金钱。没有比赛在时间上重叠，所以每一段道路可以在多个比赛中使用。&lt;/p>
&lt;p>不幸的是，&lt;strong>所有道路&lt;/strong>的状况都不佳，需要修理。每条路都有与之相关的维修费用，你需要支付这笔费用来修理道路。只有在某场比赛中需要使用的所有道路&lt;strong>都进行了修复&lt;/strong>，才能进行比赛。你的任务是修复道路并使你的利润最大化。你的利润被定义为你从比赛中获得的总金额减去你花在修理道路上的钱。&lt;strong>请注意，您可以决定不修任何道路，并获得利润 $0$ 。&lt;/strong>&lt;/p>
&lt;p>输出你能获得的最大利润。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「ZJOI2008」骑士-基环树+dp</title><link>https://blog.chenqiqian.com/posts/zjoi2008-knight/</link><pubDate>Tue, 27 Nov 2018 23:11:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 27 Nov 2018 23:11:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2008-knight/</guid><description>&lt;p>每个骑士都有且仅有一个自己最厌恶的骑士（当然不是他自己），他是绝对不会与自己最厌恶的人一同出征的。&lt;/p>
&lt;p>请你从所有的骑士中选出一个骑士军团，使得军团内没有矛盾的两人（不存在一个骑士与他最痛恨的人一同被选入骑士军团的情况），并且使得这支骑士军团最具有战斗力。&lt;/p>
&lt;p>为了描述战斗力，我们将骑士按照 $1$ 至 $n$ 编号，给每名骑士一个战斗力的估计，一个军团的战斗力为所有骑士的战斗力总和。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>基环树</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HNOI2007」梦幻岛宝珠-背包dp</title><link>https://blog.chenqiqian.com/posts/hnoi2007-diamond/</link><pubDate>Sat, 03 Nov 2018 09:57:05 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 03 Nov 2018 09:57:05 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2007-diamond/</guid><description>&lt;p>给你 $N$ 颗宝石，每颗宝石都有重量 $w_i$ 和价值 $v_i$。要你从这些宝石中选取一些宝石，保证其总重量不超过 $W$ ，且总价值最大。&lt;/p>
&lt;p>请你输出最大的总价值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>背包</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2007」仓库建设-斜率优化</title><link>https://blog.chenqiqian.com/posts/zjoi2007-warehouse/</link><pubDate>Thu, 18 Oct 2018 19:49:43 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 18 Oct 2018 19:49:43 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2007-warehouse/</guid><description>&lt;p>L 公司有 $N$ 个工厂，由高到底分布在一座山上。工厂 $1$ 在山顶，工厂 $N$ 在山脚。&lt;/p>
&lt;p>由于地形的不同，在不同工厂建立仓库的费用可能是不同的。第 $i$ 个工厂目前已有成品 $P_i$ 件，在第 $i$ 个工厂位置建立仓库的费用是 $C_i$ 。&lt;/p>
&lt;p>对于没有建立仓库的工厂，其产品应被运往其他的仓库进行储藏，而由于 L 公司产品的对外销售处设置在山脚的工厂 $N$ ，故产品只能往山下运（即只能运往编号更大的工厂的仓库），当然运送产品也是需要费用的，假设一件产品运送 $1$ 个单位距离的费用是 $1$ 。&lt;/p>
&lt;p>假设建立的仓库容量都都是足够大的，可以容下所有的产品。你将得到以下数据：&lt;/p>
&lt;ul>
&lt;li>工厂 $i$ 距离工厂 $1$ 的距离 $X_i$（其中 $X_1=0$ ）;&lt;/li>
&lt;li>工厂 $i$ 目前已有成品数量 $P_i$ ;&lt;/li>
&lt;li>在工厂 $i$ 建立仓库的费用 $C_i$ ;&lt;/li>
&lt;/ul>
&lt;p>请你帮助 L 公司寻找一个仓库建设的方案，使得总的费用（建造费用+运输费用）最小。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>斜率优化</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2011」消耗战-虚树+树形dp</title><link>https://blog.chenqiqian.com/posts/sdoi2011-war/</link><pubDate>Mon, 15 Oct 2018 21:52:56 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 15 Oct 2018 21:52:56 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2011-war/</guid><description>&lt;p>给定一个 $n$ 个点，以 $1$ 为根的有根树，砍断第 $i$ 条边的代价为 $c_i$。有 $m$ 次询问，每次给出 $k_i$ 个关键点（保证关键点不含 $1$ 号节点），询问能够使 $1$ 号节点不能到达任何关键点，所要砍断边的代价和最小是多少。&lt;/p>
&lt;p>数据范围：$n,m \leq 250000,\sum {k_i} \leq 5 \times 10^5$&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>树形结构</category><category>虚树</category><category>树形dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「TJOI2015」棋盘-状压dp+矩阵快速幂</title><link>https://blog.chenqiqian.com/posts/tjoi2015-board/</link><pubDate>Thu, 04 Oct 2018 21:43:30 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 04 Oct 2018 21:43:30 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/tjoi2015-board/</guid><description>&lt;p>有一个 $n$ 行 $m$ 列的棋盘，棋盘上可以放很多特殊的棋子，每个棋子的攻击范围是 $3$ 行 $p$ 列。输入数据用一个 $3 \times p$ 的矩阵给出了棋子攻击范围的模板，棋子被默认在模板中的第 [二] 行，第 [$k+1$] 列，模板中棋子能攻击到的位置标记为 &lt;code>1&lt;/code>，不能攻击到的位置是 &lt;code>0&lt;/code> $(1 \leq p \leq m, 0 \leq k &amp;lt; p)$。输入数据保证模板中的第 [二] 行第 [$k+1$] 列是 &lt;code>1&lt;/code>。&lt;/p>
&lt;p>打开门的密码是这样的：在要求棋子互相不能攻击到的前提下，摆放棋子的方案数。注意什么棋子都不摆也算作一种可行方案。请求出方案对 $2^{32}$ 取余的结果即可。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>状压dp</category><category>动态规划</category><category>矩阵快速幂</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2005」聪聪与可可-期望dp</title><link>https://blog.chenqiqian.com/posts/noi2005-clever-and-cute/</link><pubDate>Tue, 02 Oct 2018 09:37:40 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 02 Oct 2018 09:37:40 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2005-clever-and-cute/</guid><description>&lt;p>给定一个 $n$ 个点， $m$ 条边的无向图。聪聪开始的时候在 &lt;code>S&lt;/code>，可可在节点 &lt;code>T&lt;/code> 处。以后的每个时间单位，可可都会选择去相邻的景点(可能有多个)中的一个或停留在原景点不动。而去这些地方所发生的概率是相等的。假设有 $P$ 个景点与景点 &lt;code>M&lt;/code> 相邻，它们分别是景点 &lt;code>R&lt;/code>、 景点 &lt;code>S&lt;/code>，……，景点 &lt;code>Q&lt;/code>，在时刻 $i$ 可可处在景点 &lt;code>M&lt;/code>，则在 $i+1$ 时刻，可可有 $\frac{1}{1+P}$ 的可能在景点 &lt;code>R&lt;/code>，有 $\frac{1}{1+P}$ 的可能在景点 &lt;code>S&lt;/code>，……，有 $\frac{1}{1+P}$ 的可能在景点 &lt;code>Q&lt;/code>，还有 $\frac{1}{1+P}$ 的可能停在景点 &lt;code>M&lt;/code>。&lt;/p>
&lt;p>当聪聪在景点 &lt;code>C&lt;/code> 时，她会选一个更靠近可可的景点，如果这样的景点有多个，她会选一个标号最小的景点。如果走完第一次移动以后仍然没吃到可可，她还可以在本段时间内再向可可进行一次移动。&lt;/p>
&lt;p>在每个时间单位，假设聪聪先走，可可后走。在某一时刻，若聪聪和可可位于同一个景点，则可怜的可可就被吃掉了。&lt;/p>
&lt;p>请求出平均情况下，聪聪用几个时间单位就可能吃到可可。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>期望dp</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「SCOI2007」排列-状压dp</title><link>https://blog.chenqiqian.com/posts/scoi2007-permutation/</link><pubDate>Tue, 02 Oct 2018 09:35:55 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 02 Oct 2018 09:35:55 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2007-permutation/</guid><description>&lt;p>给一个数字串 $s$ 和正整数 $d$ , 统计 $s$ 有多少种不同的排列能被 $d$ 整除（可以有前导 $0$ ）。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>状压dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2015」Myjnie-区间dp</title><link>https://blog.chenqiqian.com/posts/poi2015-myjnie/</link><pubDate>Sun, 23 Sep 2018 19:32:19 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 23 Sep 2018 19:32:19 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2015-myjnie/</guid><description>&lt;p>有 $n$ 家洗车店从左往右排成一排，每家店都有一个正整数价格 $p_i$ 。有 $m$ 个人要来消费，第 $i$ 个人会驶过第 $a_i$ 个开始一直到第 $b_i$ 个洗车店，且会选择这些店中最便宜的一个进行一次消费。但是如果这个最便宜的价格大于 $c_i$，那么这个人就不洗车了。&lt;/p>
&lt;p>请给每家店指定一个价格，使得所有人花的钱的总和最大。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>区间dp</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「HEOI2016/TJOI2016」序列-CDQ分治优化dp</title><link>https://blog.chenqiqian.com/posts/heoi2016-tjoi2016-sequence/</link><pubDate>Thu, 20 Sep 2018 20:09:29 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 20 Sep 2018 20:09:29 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/heoi2016-tjoi2016-sequence/</guid><description>&lt;p>佳媛姐姐过生日的时候，她的小伙伴从某宝上买了一个有趣的玩具送给他。玩具上有一个数列，数列中某些项的值可能会变化，但同一个时刻最多只有一个值发生变化。&lt;/p>
&lt;p>现在佳媛姐姐已经研究出了所有变化的可能性，她想请教你，能否选出一个子序列，使得在任意一种变化中，这个子序列都是不降的？请你告诉她这个子序列的最长长度即可 。&lt;/p>
&lt;p>注意：每种变化最多只有一个值发生变化。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>CDQ分治</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2011」拦截导弹-CDQ分治优化dp</title><link>https://blog.chenqiqian.com/posts/sdoi2011-missile/</link><pubDate>Thu, 20 Sep 2018 20:08:40 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 20 Sep 2018 20:08:40 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2011-missile/</guid><description>&lt;p>某国为了防御敌国的导弹袭击，发展出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度、并且能够拦截任意速度的导弹，但是以后每一发炮弹都不能高于前一发的高度，其拦截的导弹的飞行速度也不能大于前一发。某天，雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。&lt;/p>
&lt;p>在不能拦截所有的导弹的情况下，我们当然要选择使国家损失最小、也就是拦截导弹的数量最多的方案。但是拦截导弹数量的最多的方案有可能有多个，如果有多个最优方案，那么我们会随机选取一个作为最终的拦截导弹行动蓝图。&lt;/p>
&lt;p>我方间谍已经获取了所有敌军导弹的高度和速度，你的任务是计算出在执行上述决策时，每枚导弹被拦截掉的概率。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>CDQ分治</category><category>树状数组</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2007」货币兑换-Splay+斜率优化</title><link>https://blog.chenqiqian.com/posts/noi2007-cash/</link><pubDate>Tue, 28 Aug 2018 22:59:54 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 28 Aug 2018 22:59:54 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2007-cash/</guid><description>&lt;p>小 $Y$ 最近在一家金券交易所工作。该金券交易所只发行交易两种金券：$A$ 纪念券（以下简称 $A$ 券）和 $B$ 纪念券（以下简称 $B$ 券）。每个持有金券的顾客都有一个自己的帐户。金券的数目可以是一个实数。每天随着市场的起伏波动，两种金券都有自己当时的价值，即每一单位金券当天可以兑换的人民币数目。我们记录第 $K$ 天中 $A$ 券 和 $B$ 券的价值分别为 $A_K$ 和 $B_K$（元/单位金券）。为了方便顾客，金券交易所提供了一种非常方便的交易方式：比例交易法。比例交易法分为两个方面：&lt;/p>
&lt;p>（a）卖出金券：顾客提供一个 $[0,100]$ 内的实数 $OP$ 作为卖出比例，其意义为：将 $OP%$ 的 $A$ 券和 $OP%$ 的 $B$ 券以当时的价值兑换为人民币；&lt;/p>
&lt;p>（b）买入金券：顾客支付 $IP$ 元人民币，交易所将会兑换给用户总价值为 $IP$ 的金券，并且，满足提供给顾客的 $A$ 券和 $B$ 券的比例在第 $K$ 天恰好为 $Rate_K$ ；&lt;/p>
&lt;p>注意到，&lt;strong>同一天内可以进行多次操作&lt;/strong>。小 $Y$ 是一个很有经济头脑的员工，通过较长时间的运作和行情测算，他已经知道了未来 $N$ 天内的 $A$ 券和 $B$ 券的价值以及 $Rate$ 。他还希望能够计算出来，如果开始时拥有 $S$ 元钱，那么 $N$ 天后最多能够获得多少元钱。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>Splay</category><category>平衡树</category><category>斜率优化</category><category>动态规划</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「NOI2015」寿司晚宴-状压dp</title><link>https://blog.chenqiqian.com/posts/noi2015-dinner/</link><pubDate>Tue, 28 Aug 2018 22:58:15 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 28 Aug 2018 22:58:15 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2015-dinner/</guid><description>&lt;p>为了庆祝 $NOI$ 的成功开幕，主办方为大家准备了一场寿司晚宴。小 $G$ 和小 $W$ 作为参加 $NOI$ 的选手，也被邀请参加了寿司晚宴。&lt;/p>
&lt;p>在晚宴上，主办方为大家提供了 $n−1$ 种不同的寿司，编号 $1,2,3,⋯,n-1$ ，其中第种寿司的美味度为 $i+1$（即寿司的美味度为从 $2$ 到 $n$ ）。&lt;/p>
&lt;p>现在小 $G$ 和小 $W$ 希望每人选一些寿司种类来品尝，他们规定一种品尝方案为不和谐的当且仅当：小 $G$ 品尝的寿司种类中存在一种美味度为 $x$ 的寿司，小 $W$ 品尝的寿司中存在一种美味度为 $y$ 的寿司，而 $x$ 与 $y$ 不互质。&lt;/p>
&lt;p>现在小 $G$ 和小 $W$ 希望统计一共有多少种和谐的品尝寿司的方案（对给定的正整数 $p$ 取模）。注意一个人可以不吃任何寿司。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>状压dp</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「NOI2009」诗人小G-动态规划+决策单调性</title><link>https://blog.chenqiqian.com/posts/noi2009-poet/</link><pubDate>Fri, 24 Aug 2018 14:43:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 24 Aug 2018 14:43:31 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2009-poet/</guid><description>&lt;p>小 $\text{G}$ 是一个出色的诗人，经常作诗自娱自乐。但是，他一直被一件事情所困扰，那就是诗的排版问题。&lt;/p>
&lt;p>一首诗包含了若干个句子，对于一些连续的短句，可以将它们用空格隔开并放在一行中，注意一行中可以放的句子数目是没有限制的。小 $\text{G}$ 给每首诗定义了一个行标准长度（行的长度为一行中符号的总个数），他希望排版后每行的长度都和行标准长度相差不远。显然排版时，&lt;strong>不应改变原有的句子顺序&lt;/strong>，并且小 $\text{G}$ 不允许把一个句子分在两行或者更多的行内。在满足上面两个条件的情况下，小 $\text{G}$ 对于排版中的每行定义了一个不协调度, 为这行的实际长度与行标准长度差值绝对值的 $P$ 次方，而一个排版的不协调度为所有行不协调度的总和。&lt;/p>
&lt;p>小 $\text{G}$ 最近又作了几首诗，现在请你对这首诗进行排版，使得排版后的诗尽量协调（即不协调度尽量小），并把排版的结果告诉他。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>决策单调性</category><category>二分查找</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「APIO2014」序列分割-动态规划-斜率优化</title><link>https://blog.chenqiqian.com/posts/apio2014-sequence/</link><pubDate>Fri, 24 Aug 2018 13:16:24 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 24 Aug 2018 13:16:24 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/apio2014-sequence/</guid><description>&lt;p>你正在玩一个关于长度为 $n$ 的非负整数序列的游戏。这个游戏中你需要把序列分成 $k + 1$ 个非空的块。为了得到 $k + 1$ 块，你需要重复下面的操作 $k$ 次：&lt;/p>
&lt;ul>
&lt;li>选择一个有超过一个元素的块（初始时你只有一块，即整个序列）
&lt;ul>
&lt;li>选择两个相邻元素把这个块从中间分开，得到两个非空的块。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>每次操作后你将获得那两个新产生的块的元素和的乘积的分数。你想要最大化最后的总得分。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>斜率优化</category><category>OI</category><category>题解</category><category>WC/CTSC/APIO</category></item><item><title>「POI2012」Cloakroom-类背包dp</title><link>https://blog.chenqiqian.com/posts/poi2012-cloakroom/</link><pubDate>Thu, 16 Aug 2018 21:26:17 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 16 Aug 2018 21:26:17 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2012-cloakroom/</guid><description>&lt;p>有 $n$ 件物品，每件物品有三个属性 $a[i], b[i], c[i]$ , $(a[i] &amp;lt; b[i])$ 。&lt;/p>
&lt;p>再给出 $q$ 个询问，每个询问由非负整数 $m$ , $k$ , $s$ 组成，问是否能够选出某些物品使得：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对于每个选的物品 $i$ ，满足 $a[i] \leq m$ 且 $b[i]&amp;gt;m+s$ 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>所有选出物品的 $c[i]$ 的和正好是 $k$ 。&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>背包</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「JSOI2007」文本生成器-AC自动机+dp</title><link>https://blog.chenqiqian.com/posts/jsoi2007-generator/</link><pubDate>Sat, 11 Aug 2018 19:27:37 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 11 Aug 2018 19:27:37 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/jsoi2007-generator/</guid><description>&lt;p>可读版题意：&lt;/p>
&lt;p>给定 $n$ 个仅包含大写字母的模板串，求所有的长度为 $M$ 且仅包含大写字母的不同字符串中，有多少个包含至少一个模板串。答案对 $10007$ 取模。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>AC自动机</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HNOI2008」GT考试-KMP+dp+矩阵快速幂</title><link>https://blog.chenqiqian.com/posts/hnoi2008-gtexams/</link><pubDate>Thu, 09 Aug 2018 11:19:09 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 09 Aug 2018 11:19:09 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2008-gtexams/</guid><description>&lt;p>阿申准备报名参加 $GT$ 考试，准考证号为 $n$ 位数 $X_1X_2\cdots X_n(0\le X_i\le 9)$，他不希望准考证号上出现不吉利的数字。&lt;/p>
&lt;p>他的不吉利数字 $A_1A_2\cdots A_m(0\le A_i\le 9)$ 有 $m$ 位，不出现是指 $X_1X_2\cdots X_n$ 中没有恰好一段等于 $A_1A_2\cdots A_m$，$A_1$​ 和 $X_1$ 可以为 $0$。&lt;/p>
&lt;p>阿申想知道不出现不吉利数字的号码有多少种，输出模 $K$ 取余的结果。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>KMP</category><category>矩阵快速幂</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2009」HH去散步-矩阵快速幂+dp</title><link>https://blog.chenqiqian.com/posts/sdoi2009-walk/</link><pubDate>Thu, 09 Aug 2018 10:41:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 09 Aug 2018 10:41:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2009-walk/</guid><description>&lt;p>&lt;code>HH&lt;/code> 是个喜欢变化的人，所以他不会立刻沿着刚刚走来的路走回。 又因为 &lt;code>HH&lt;/code> 是个喜欢变化的人，所以他每天走过的路径都不完全一样，他想知道他究竟有多少种散步的方法。&lt;/p>
&lt;p>现在给你学校的地图（假设每条路的长度都是一样的都是 $1$ ），问长度为 $t$ ，从给定地点 $A$ 走到给定地点 $B$ 共有多少条符合上述条件的路径。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>矩阵快速幂</category><category>动态规划</category><category>图论</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SCOI2008」奖励关-期望dp</title><link>https://blog.chenqiqian.com/posts/scoi2008-award/</link><pubDate>Fri, 03 Aug 2018 19:39:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 03 Aug 2018 19:39:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2008-award/</guid><description>&lt;p>系统将依次随机抛出 $k$ 次宝物，每次你都可以选择吃或者不吃。宝物一共有 $n$ 种，系统每次抛出这 $n$ 种宝物的概率都相同且相互独立。&lt;/p>
&lt;p>吃一次第 $i$ 种宝物将得到 $P_i$ 分，但并不是每种宝物都是可以随意获取的。第 $i$ 种宝物有一个前提宝物集合 $S_i$ 。只有当 $S_i$ 中所有宝物都至少吃过一次，才能吃第 $i$ 种宝物。注意，$P_i$ 可以是负数。&lt;/p>
&lt;p>假设你采取最优策略，平均情况你一共能在奖励关得到多少分值？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>期望dp</category><category>各省省选</category></item><item><title>「SCOI2010」股票交易-dp+单调队列</title><link>https://blog.chenqiqian.com/posts/scoi2010-stock/</link><pubDate>Sun, 08 Jul 2018 10:56:37 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 08 Jul 2018 10:56:37 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2010-stock/</guid><description>&lt;p>&lt;code>lxhgww&lt;/code>预测到了未来 $T$ 天内某只股票的走势，第 $i$ 天的股票买入价为每股 $AP_i$ ，第 $i$ 天的股票卖出价为每股 $BP_i$ （数据保证对于每个 $i$ ，都有$AP_i \ge BP_i$ ），第$i$ 天的一次买入至多只能购买 $AS_i$ 股，一次卖出至多只能卖出 $BS_i$ 股。两次交易（某一天的买入或者卖出均算是一次交易）之间，至少要间隔 $W$ 天；在任何时间一个人的手里的股票数不能超过 $MaxP$ 。&lt;/p>
&lt;p>在第 $1$ 天之前，&lt;code>lxhgww&lt;/code>手里有数目无限的钱，但是没有任何股票，在 $T$ 天以后， &lt;code>lxhgww&lt;/code> 能赚到的钱最多是多少？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>单调队列</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2014」PTA-单调队列</title><link>https://blog.chenqiqian.com/posts/poi2014-pta/</link><pubDate>Wed, 27 Jun 2018 16:51:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 27 Jun 2018 16:51:31 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2014-pta/</guid><description>&lt;p>给定 $n$ 个点的高度，规定从 $1$ 点出发，跳到比高度小于当前点的点不消耗体力，否则消耗一点体力，最后到达 $n$ 点。&lt;/p>
&lt;p>$q$ 次询问，每次询问有一个步伐限制 $k$ ，求最少耗费的体力。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>单调队列</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「CQOI2016」手机号码-数位dp</title><link>https://blog.chenqiqian.com/posts/cqoi2016-phone/</link><pubDate>Tue, 19 Jun 2018 21:59:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 19 Jun 2018 21:59:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2016-phone/</guid><description>&lt;p>手机号码是一个有 $11$ 位且不含前导 $0$ 的数。满足条件手机号码的必须&lt;strong>同时&lt;/strong>满足：号码中出现至少 $3$ 个相邻的相同数字；号码中不能同时出现 $8$ 和 $4$ 。&lt;/p>
&lt;p>给定两个数 $L$ 和 $R$ ，统计出 $[L,R]$区间内所有满足条件的手机号码的个数。 $L$ 和 $R$ 都是符合定义的手机号码。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数位dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2010」数字计数-数位dp</title><link>https://blog.chenqiqian.com/posts/zjoi2010-count/</link><pubDate>Mon, 18 Jun 2018 09:35:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 18 Jun 2018 09:35:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2010-count/</guid><description>&lt;p>给定两个正整数 $a$ 和 $b$ ，求在 $[a,b]$ 中的所有整数中，每个数码(&lt;code>digit&lt;/code>)各出现了多少次。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数位dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SCOI2015」小凸玩密室-树形dp</title><link>https://blog.chenqiqian.com/posts/scoi2015-room/</link><pubDate>Fri, 08 Jun 2018 16:08:09 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 08 Jun 2018 16:08:09 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2015-room/</guid><description>&lt;p>小凸和小方相约玩密室逃脱，这个密室是一棵有 $n$ 个节点的完全二叉树，每个节点有一个灯泡。点亮所有灯泡即可逃出密室。&lt;/p>
&lt;p>每个灯泡有个权值 $a_i$ ，每条边也有个权值 $b_i$ 。点亮第 $1$ 个灯泡不需要花费，之后每点亮 $1$ 个新的灯泡 $v$ 的花费，等于上一个被点亮的灯泡 $u$ 到这个点 $v$ 的距离 $D_{u,v}$ ，乘以这个点的权值 $a_v$ 。在点灯的过程中，要保证任意时刻所有被点亮的灯泡**必须连通**，在点亮一个灯泡后**必须先点亮其子树所有灯泡才能点亮其他灯泡**。&lt;/p>
&lt;p>请告诉他们，逃出密室的最少花费是多少。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>树形结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HAOI2009」毛毛虫-树形dp</title><link>https://blog.chenqiqian.com/posts/haoi2009-worm/</link><pubDate>Wed, 06 Jun 2018 19:08:55 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 06 Jun 2018 19:08:55 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/haoi2009-worm/</guid><description>&lt;p>对于一棵树，我们可以将某条链和与该链相连的边抽出来，称其为一个“毛毛虫”。求在这个树中点数最多的毛毛虫的点数。&lt;/p>
&lt;p>$n &amp;lt; 300000$&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>树形dp</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2009」二叉查找树-区间dp</title><link>https://blog.chenqiqian.com/posts/noi2009-binary/</link><pubDate>Sat, 28 Apr 2018 20:21:18 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 28 Apr 2018 20:21:18 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2009-binary/</guid><description>&lt;p>给定 $n$ 个结点的数据值 $V_i$ ，权值 $P_i$ ，访问频度 $T_i(T_i \geq 0)$ 。对于 $\forall i,j \in V$ 且 $i \neq j$ ，有 $V_i \neq V_j, P_i \neq P_j$ 。&lt;/p>
&lt;p>现令这 $n$ 个点组成一颗二叉树，且满足 $\forall , i \in V$ ，若 $p$ 为 $i$ 的左子节点， $q$ 为 $i$ 的右子节点，则 $V_p &amp;lt; V_i &amp;lt; V_q$ 且 $P_i &amp;lt; P_p,; P_i &amp;lt; P_q$ 。可以证明，这样的二叉树是唯一的。点$i$ 在树中的深度 $D_i$ 定义为它到根的距离加 $1$ 。定义结点 $i$ 的访问代价 $E_i = T_i \times D_i$ 。可以修改每个点的权值为任意实数，其代价均为给定的正整数 $K$ ，但需保证任两点权值仍互不相同。&lt;/p>
&lt;p>现求上文所述二叉树中，其 $\sum^n _{i = 1}{E_i} + \sum K$ 的最小值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>平衡树</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「ZJOI2007」最大半连通子图-强连通分量-dp</title><link>https://blog.chenqiqian.com/posts/zjoi2007-semi-connected/</link><pubDate>Thu, 05 Apr 2018 16:54:05 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 05 Apr 2018 16:54:05 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2007-semi-connected/</guid><description>&lt;p>给定一个有向图 $G$ ，请求出 $G$ 的最大半连通子图拥有的节点数 $K$ ，以及不同的最大半连通子图的数目 $C$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>强连通分量</category><category>动态规划</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2007」时态同步-树形dp</title><link>https://blog.chenqiqian.com/posts/zjoi2007-sync/</link><pubDate>Sat, 03 Mar 2018 18:30:16 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 03 Mar 2018 18:30:16 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2007-sync/</guid><description>&lt;p>给定一棵由 $n$ 个节点构成的树。&lt;/p>
&lt;p>在树上存在一个“激发器”，标号为 $s$ 。当激发器工作后，电流会延边传向每一个相邻节点。而中间节点接收到电流后，会将该电流传向与它连接并且尚未接收到电流的节点。对于每条边 $e$ ，电流通过它需要的时间为 $t_e$ ，电流的转发可以认为是在瞬间完成的。最终，激电流将到达一些“终止节点”――接收电流之后不再转发的节点。&lt;/p>
&lt;p>使用一次道具可以使得电流通过某条边的时间增加一个单位。请问最少使用多少次道具才可达到每一个“终止节点”同时收到电流？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>树形dp</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「Luogu1043」数字游戏-dp</title><link>https://blog.chenqiqian.com/posts/luogu-1043/</link><pubDate>Sat, 23 Dec 2017 13:15:19 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 23 Dec 2017 13:15:19 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-1043/</guid><description>&lt;p>在你面前有一圈整数（一共 $n$ 个），你要按顺序将其分为 $m$ 个部分，各部分内的数字相加，相加所得的 $m$ 个结果对 10 取模后再相乘，最终得到一个数 $k$ 。游戏的要求是使你所得的 $k$ 最大或者最小。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>OI</category><category>题解</category><category>Luogu</category></item></channel></rss>