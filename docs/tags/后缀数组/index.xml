<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>后缀数组 on cqqqwq的小站</title><link>http://blog.chenqiqian.com/tags/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/</link><description>Recent content in 后缀数组 on cqqqwq的小站</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor><webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster><copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright><lastBuildDate>Mon, 04 Feb 2019 17:48:34 +0000</lastBuildDate><sy:updatePeriod>daily</sy:updatePeriod><atom:link href="http://blog.chenqiqian.com/tags/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/index.xml" rel="self" type="application/rss+xml"/><item><title>「CF232D」Fence-后缀数组+主席树</title><link>http://blog.chenqiqian.com/posts/cf232d/</link><pubDate>Mon, 04 Feb 2019 17:48:34 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 04 Feb 2019 17:48:34 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/cf232d/</guid><description>&lt;p>给定长度为 $n$ 的整数序列 $h[n]$ ，有 $Q$ 个询问，每次给出 $l_1,r_1$ ，​询问有多少对 $l_2,r_2$ ，满足以下条件:&lt;/p>
&lt;ol>
&lt;li>$r_2 – l_2 = r_1 – l_1$&lt;/li>
&lt;li>区间 $[l_1, r_1]$ 与区间 $[l_2, r_2]$ 没有交集&lt;/li>
&lt;li>对于任意 $i \in [0,r_1 – l_1]$ ，满足 $h[l_1 + i] + h[l_2 + i] = h[l_1] + h[l_2]$&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>后缀数组</category><category>主席树</category><category>字符串</category><category>数据结构</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF452E」Three strings-后缀数组</title><link>http://blog.chenqiqian.com/posts/cf452e/</link><pubDate>Mon, 31 Dec 2018 16:03:47 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 31 Dec 2018 16:03:47 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/cf452e/</guid><description>&lt;p>给出三个仅由小写字母构成的串 $A, B, C$ ，对于每个 $L \in [1, \min(len_A,len_B,len_C)]$ ，求满足$A[a,a+L-1] = B[b,b+L-1] = C[c,c+L-1]$ 的三元组 $(a,b,c)$ 的数量。&lt;/p>
&lt;p>答案对 $1000000007 (10 ^ 9 + 7)$ 取模，字符总数小于 $3 \times 10^5$。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「JSOI2007」字符加密-后缀数组</title><link>http://blog.chenqiqian.com/posts/jsoi2007-character/</link><pubDate>Tue, 11 Sep 2018 21:13:17 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 11 Sep 2018 21:13:17 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/jsoi2007-character/</guid><description>&lt;p>喜欢钻研问题的 $JS$ 同学，最近又迷上了对加密方法的思考。一天，他突然想出了一种他认为是终极的加密办法：把需要加密的信息排成一圈，显然，它们有很多种不同的读法。&lt;/p>
&lt;p>例如 &lt;code>JSOI07&lt;/code> ，可以读作： &lt;code>JSOI07&lt;/code> &lt;code>SOI07J&lt;/code> &lt;code>OI07JS&lt;/code> &lt;code>I07JSO&lt;/code> &lt;code>07JSOI&lt;/code> &lt;code>7JSOI0&lt;/code> ，把它们按照字符串的大小排序：&lt;/p>
&lt;ul>
&lt;li>&lt;code>07JSOI&lt;/code>&lt;/li>
&lt;li>&lt;code>7JSOI0&lt;/code>&lt;/li>
&lt;li>&lt;code>I07JSO&lt;/code>&lt;/li>
&lt;li>&lt;code>JSOI07&lt;/code>&lt;/li>
&lt;li>&lt;code>OI07JS&lt;/code>&lt;/li>
&lt;li>&lt;code>SOI07J&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>读出最后一列字符：&lt;code>I0O7SJ&lt;/code>，就是加密后的字符串。 但是，如果想加密的字符串实在太长，你能写一个程序完成这个任务吗？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「BZOJ4278」[ONTAK2015]Tasowanie-后缀数组</title><link>http://blog.chenqiqian.com/posts/bzoj4278-tasowanie/</link><pubDate>Tue, 14 Aug 2018 19:56:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 14 Aug 2018 19:56:00 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/bzoj4278-tasowanie/</guid><description>&lt;p>给定两个数字串 $A$ 和 $B$ ，通过将 $A$ 和 $B$ 进行二路归并得到一个新的数字串 $T$ ，请找到字典序最小的 $T$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>后缀数组</category><category>字符串</category><category>OI</category><category>题解</category><category>BZOJ</category></item><item><title>「POI2010」Antisymmetry-后缀数组</title><link>http://blog.chenqiqian.com/posts/poi2010-antisymmetry/</link><pubDate>Sat, 11 Aug 2018 19:25:24 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 11 Aug 2018 19:25:24 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/poi2010-antisymmetry/</guid><description>&lt;p>对于一个 $0/1$ 字符串，如果将这个字符串 $0$ 和 $1$ 取反后，再将整个串反过来和原串一样，就称作“反对称”字符串。比如 $00001111$ 和 $010101$ 就是反对称的， $1001$ 就不是。&lt;/p>
&lt;p>现在给出一个长度为 $n$ 的 $0/1$ 字符串，求它有多少个子串是反对称的。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「TJOI2013」单词-后缀数组+二分</title><link>http://blog.chenqiqian.com/posts/tjoi2013-word/</link><pubDate>Sat, 11 Aug 2018 19:24:27 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 11 Aug 2018 19:24:27 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/tjoi2013-word/</guid><description>&lt;p>可读版题意：&lt;/p>
&lt;p>给定 $n$ 个字符串，第 $i$ 个字符串的长度为 $M_i$ ，求每个字符串在所有字符串中出现的次数。&lt;/p>
&lt;p>数据范围：$n \leq 100,\ M = \sum M_i \leq 10^6$.&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2015」品酒大会-后缀数组</title><link>http://blog.chenqiqian.com/posts/noi2015-savour/</link><pubDate>Fri, 03 Aug 2018 19:40:39 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 03 Aug 2018 19:40:39 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/noi2015-savour/</guid><description>&lt;p>简单版题意：&lt;/p>
&lt;p>给定一个长度为 $n$ 的字符串，和一个长度为 $n$ 的数列 ${a_n}$ ，求对于 $r$ 从 $0$ 到 $n-1$ ，所有满足 $1 \leq p &amp;lt; q \leq n$ 且 $lcp(p,q) \geq r$ 的数对个数以及满足上述条件的数对中 $a_p \times a_q$ 的最大值。（ $a_i$ 可以为负数）&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>并查集</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「HAOI2016」找相同字符-后缀数组+单调栈</title><link>http://blog.chenqiqian.com/posts/haoi2016-same/</link><pubDate>Wed, 04 Jul 2018 20:39:30 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 04 Jul 2018 20:39:30 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/haoi2016-same/</guid><description>&lt;p>给定两个字符串，求出在两个字符串中各取出一个子串使得这两个子串相同的方案数。当这两个子串中只要有一个取得位置不同时，两个方案不同。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>单调栈</category><category>后缀数组</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2016」优秀的拆分-后缀数组</title><link>http://blog.chenqiqian.com/posts/noi2016-split/</link><pubDate>Wed, 04 Jul 2018 20:38:39 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 04 Jul 2018 20:38:39 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/noi2016-split/</guid><description>&lt;p>如果一个字符串可以被拆分为 $AABB$ 的形式，其中 $A$ 和 $B$ 是任意非空字符串，则我们称该字符串的这种拆分是优秀的。一个字符串可能没有优秀的拆分，也可能存在不止一种优秀的拆分。&lt;/p>
&lt;p>现在给出一个长度为 $n$ 的字符串 $S$ ，我们需要求出，在它&lt;strong>所有&lt;/strong>子串的&lt;strong>所有&lt;/strong>拆分方式中，优秀拆分的总个数。这里的子串是指字符串中连续的一段。&lt;/p>
&lt;p>以下事项需要注意：&lt;/p>
&lt;ul>
&lt;li>出现在不同位置的相同子串，我们认为是不同的子串，它们的优秀拆分均会被记入答案。&lt;/li>
&lt;li>在一个拆分中，允许出现 $A = B$。例如 $cccc$ 存在拆分 $A = B = c$。&lt;/li>
&lt;li>字符串本身也是它的一个子串。&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「TJOI2017」DNA-后缀数组</title><link>http://blog.chenqiqian.com/posts/tjoi2017-dna/</link><pubDate>Sat, 23 Jun 2018 20:43:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 23 Jun 2018 20:43:31 +0000</atom:modified><guid>http://blog.chenqiqian.com/posts/tjoi2017-dna/</guid><description>&lt;p>加里敦大学的生物研究所发现了决定人喜不喜欢吃藕的基因序列 $S$ ,有这个序列的碱基序列就会表现出喜欢吃藕的性状，但是研究人员发现对碱基序列 $S$ ,任意修改其中不超过 $3$ 个碱基，依然能够表现出吃藕的性状。现在研究人员想知道这个基因在 DNA 链 $S0$ 上的位置。所以你需要统计在一个表现出吃藕性状的人的 DNA 序列 $S0$ 上，有多少个连续子串可能是该基因，即有多少个 $S0$ 的连续子串修改小于等于三个字母能够变成 $S$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>字符串</category><category>后缀数组</category><category>OI</category><category>题解</category><category>各省省选</category></item></channel></rss>