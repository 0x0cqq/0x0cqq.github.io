<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>数据结构 on cqqqwq的小站</title><link>https://blog.chenqiqian.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link><description>Recent content in 数据结构 on cqqqwq的小站</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cqqqwq@outlook.com (cqqqwq)</managingEditor><webMaster>cqqqwq@outlook.com (cqqqwq)</webMaster><copyright>&amp;copy;cqqqwq 2017-{year}, All Rights Reserved.</copyright><lastBuildDate>Fri, 05 Apr 2019 17:15:43 +0000</lastBuildDate><sy:updatePeriod>daily</sy:updatePeriod><atom:link href="https://blog.chenqiqian.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml"/><item><title>「AHOI2013」联通图-线段树分治+并查集</title><link>https://blog.chenqiqian.com/posts/ahoi2013-graph/</link><pubDate>Fri, 05 Apr 2019 17:15:43 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 05 Apr 2019 17:15:43 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/ahoi2013-graph/</guid><description>&lt;p>给定一个 $n$ 个点 $m$ 条边的无向连通图 $G$ 和若干个小集合 $S$，每个小集合包含 $c(1 \le c \le 4)$ 条边，对于每个集合，你需要确定将集合中的边删掉后改图是否保持联通。&lt;/p>
&lt;p>集合间的询问相互独立。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树分治</category><category>并查集</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HAOI2017」八纵八横-线段树分治+线性基</title><link>https://blog.chenqiqian.com/posts/haoi2017-railway/</link><pubDate>Fri, 05 Apr 2019 13:07:59 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 05 Apr 2019 13:07:59 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/haoi2017-railway/</guid><description>&lt;p>Anihc 国有 $n$ 个城市，这 $n$ 个城市从 $1$ ~ $n$ 编号，$1$ 号城市为首都。城市间初始时有 $m$ 条高速公路，每条高速公路都有一个非负整数的经济影响因子，每条高速公路的两端都是城市（可能两端是同一个城市)，保证任意两个城市都可以通过高速公路互达。&lt;/p>
&lt;p>Anihc 国正在筹划「八纵八横」的高铁建设计划，计划要修建一些高速铁路，每条高速铁路两端也都是城市（可能两端是同一个城市)，也都有一个非负整数的经济影响因子。国家还计划在「八纵八横」计划建成之后，将「一带一路」扩展为「一带一路一环」，增加「内陆城市经济环」即选择一条从首都出发沿若一系列高铁与高速公路走的路径，每条高铁或高速公路可以经过多次，每座城市也可以经过多次，最后路径又在首都结束。令「内陆城市经济环」的 GDP 为依次将这条路径上所经过的高铁或高速公路的经济影响因子异或起来（一条路经过多次则会被计算多次）。&lt;/p>
&lt;p>现在 Anihc 在会议上讨论「八纵八横」的建设计划方案，他们会不断地修改计划方案，希望你能实时反馈对于当前的「八纵八横」的建设计划的方案「内陆城市经济环」的最大是多少。&lt;/p>
&lt;p>初始时，八纵八横计划中不包含任何—条高铁，有以下三种操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>Add x y z&lt;/code> ：在计划中给在城市 $x$ 和城市 $y$ 之间建设一条高铁，其经济影响因子为 $z$ ，如果这是第 $k$ 个 Add 操作，则将这条高铁命名为 $k$ 号高铁。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>Cancel k&lt;/code> ：将计划中的 $k$ 号高铁取消掉，保证此时 $k$ 号高铁一定存在。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>Change k z&lt;/code> ：表示将第 $k$ 号高铁的经济影响因子更改为 $z$ ，保证此时 $k$ 号高铁一定存在。&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树分治</category><category>线性基</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「FJOI2015」火星商店问题-线段树分治+可持久化Trie</title><link>https://blog.chenqiqian.com/posts/fjoi2015-shop/</link><pubDate>Tue, 02 Apr 2019 21:50:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 02 Apr 2019 21:50:00 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/fjoi2015-shop/</guid><description>&lt;p>有 $n$ 个商店，每个商店都有一个特殊商品，每个人在任何时间都可以买。第一天可能没有进货，有若干次询问，而之后的每天，都有&lt;strong>一次&lt;/strong>进货和若干次询问，每次进货都是某个商店进了某个编号的货，每次询问都是询问在编号为 $l$ 到 $r$ 的商店中，在 $d$ 天内进的货的编号异或 $x$ 的最大值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>线段树分治</category><category>可持久化线段树</category><category>Trie</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SPOJ26374」QTREE5-LCT</title><link>https://blog.chenqiqian.com/posts/spoj26374-qtree5/</link><pubDate>Mon, 18 Mar 2019 22:36:52 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 18 Mar 2019 22:36:52 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj26374-qtree5/</guid><description>&lt;p>你被给定一棵 $n$ 个点的树，点从 $1$ 到 $n$ 编号。每个点可能有两种颜色：黑或白。我们定义 $dist(a,b)$ 为点 $a$ 至点 $b$ 路径上的边个数。一开始所有的点都是黑色的。&lt;/p>
&lt;p>要求作以下操作：&lt;/p>
&lt;ul>
&lt;li>&lt;code>0 i&lt;/code> 将点 $i$ 的颜色反转（黑变白，白变黑）&lt;/li>
&lt;li>&lt;code>1 v&lt;/code> 询问 $dist(u,v)$ 的最小值。$u$ 点必须为白色（ $u$ 与 $v$ 可以相同），显然如果 $v$ 是白点，查询得到的值一定是 $0$ 。&lt;/li>
&lt;/ul>
&lt;p>特别地，如果作 &lt;code>1&lt;/code> 操作时树上没有白点，输出 $-1$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「SPOJ16580」QTREE7-LCT</title><link>https://blog.chenqiqian.com/posts/spoj16580-qtree7/</link><pubDate>Mon, 18 Mar 2019 20:54:33 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 18 Mar 2019 20:54:33 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj16580-qtree7/</guid><description>&lt;p>一棵树,每个点初始有个点权和颜色(输入会给你)&lt;/p>
&lt;ul>
&lt;li>&lt;code>0 u&lt;/code> : 询问所有 $u,v$ 路径上的最大点权,要满足 $u,v$ 路径上所有点的颜色都相同&lt;/li>
&lt;li>&lt;code>1 u&lt;/code> : 反转 $u$ 的颜色&lt;/li>
&lt;li>&lt;code>2 u w&lt;/code> :把 $u$ 的点权改成 $w$&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「SPOJ16549」QTREE6-LCT</title><link>https://blog.chenqiqian.com/posts/spoj16549-qtree6/</link><pubDate>Sun, 17 Mar 2019 12:58:44 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 17 Mar 2019 12:58:44 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj16549-qtree6/</guid><description>&lt;p>给你一棵 $n$ 个点的树，编号 $1$~$n$ 。每个点可以是黑色，可以是白色。初始时所有点都是黑色。有两种操作：&lt;/p>
&lt;ul>
&lt;li>&lt;code>0 u&lt;/code> ：询问有多少个节点 $v$ 满足路径 $u$ 到 $v$ 上所有节点（包括端点）都拥有相同的颜色&lt;/li>
&lt;li>&lt;code>1 u&lt;/code> ：翻转 $u$ 的颜色&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「SPOJ913」QTREE2-LCT</title><link>https://blog.chenqiqian.com/posts/spoj913-qtree2/</link><pubDate>Sat, 16 Mar 2019 09:01:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 16 Mar 2019 09:01:31 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj913-qtree2/</guid><description>&lt;p>给定一棵 $n$ 个点的树，边具有边权。要求作以下操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>DIST a b&lt;/code> 询问点 $a$ 至点 $b$ 路径上的边权之和&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>KTH a b k&lt;/code> 询问点 $a$ 至点 $b$ 有向路径上的第k个点的编号&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>有多组测试数据，每组数据以 &lt;code>DONE&lt;/code> 结尾。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>LCT</category><category>数据结构</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「SPOJ375」QTREE1-LCT</title><link>https://blog.chenqiqian.com/posts/spoj375-qtree1/</link><pubDate>Fri, 15 Mar 2019 20:59:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 15 Mar 2019 20:59:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj375-qtree1/</guid><description>&lt;p>给定 $n$ 个点的树，边按输入顺序编号为 $1,2,&amp;hellip;,n-1$，要求作以下操作：&lt;/p>
&lt;ul>
&lt;li>&lt;code>CHANGE i v&lt;/code> ：将第 $i$ 条边权值改为 $v$&lt;/li>
&lt;li>&lt;code>QUERY a b&lt;/code> ：询问从 $a$ 点到 $b$ 点路径上的最大边权&lt;/li>
&lt;/ul>
&lt;p>有多组测试数据，每组数据以 &lt;code>DONE&lt;/code> 结尾。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「SPOJ2666」QTREE4-LCT</title><link>https://blog.chenqiqian.com/posts/spoj2666-qtree4/</link><pubDate>Tue, 12 Mar 2019 20:51:57 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 12 Mar 2019 20:51:57 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/spoj2666-qtree4/</guid><description>&lt;p>你被给定一棵 $n$ 个点的带边权的树（边权可以为负）。每个点可能有两种颜色：黑或白。我们定义 $dist(a,b)$ 为点 $a$ 至点 $b$ 路径上的边权值之和。一开始所有的点都是&lt;strong>白色&lt;/strong>的。&lt;/p>
&lt;p>要求作以下操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>C a&lt;/code> 将点a的颜色反转（黑变白，白变黑）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>A&lt;/code> 询问 $dist(a,b)$ 的最大值。$a,b$ 点都必须为白色（ $a$ 与 $b$ 可以相同），显然如果树上仍存在白点，查询得到的值一定是个非负数。&lt;br />
特别地，如果进行 &lt;code>A&lt;/code> 操作时树上没有白点，输出 &lt;code>They have disappeared.&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>QTREE</category></item><item><title>「BJOI2014」大融合-LCT</title><link>https://blog.chenqiqian.com/posts/bjoi2014-mixture/</link><pubDate>Mon, 11 Mar 2019 21:09:49 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 11 Mar 2019 21:09:49 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/bjoi2014-mixture/</guid><description>&lt;p>小强要在 $N$ 个孤立的星球上建立起一套通信系统。这套通信系统就是连接 $N$ 个点的一个树。 这个树的边是一条一条添加上去的。在某个时刻，一条边的负载就是它所在的当前能够 联通的树上路过它的简单路径的数量。&lt;/p>
&lt;p>现在，你的任务就是随着边的添加，动态的回答小强对于某些边的负载的询问。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CF877F」Ann and Books-莫队</title><link>https://blog.chenqiqian.com/posts/cf877f/</link><pubDate>Mon, 11 Feb 2019 23:39:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 11 Feb 2019 23:39:31 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf877f/</guid><description>&lt;p>有 $n$ 本书，第 $i$ 本书中有 $a_i$ 个问题，均属于第 $t_i$ 类问题。&lt;/p>
&lt;p>有 $q$ 次询问，每次询问给出一个区间 $[l_i,r_i]$ ，询问有多少个原序列的连续子区间是给出区间的子区间，且该子区间中所有书中问题的和满足第 $1$ 类的问题恰好比第 $2$ 类的问题恰好多 $k$ 个。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>莫队</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF232D」Fence-后缀数组+主席树</title><link>https://blog.chenqiqian.com/posts/cf232d/</link><pubDate>Mon, 04 Feb 2019 17:48:34 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 04 Feb 2019 17:48:34 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf232d/</guid><description>&lt;p>给定长度为 $n$ 的整数序列 $h[n]$ ，有 $Q$ 个询问，每次给出 $l_1,r_1$ ，​询问有多少对 $l_2,r_2$ ，满足以下条件:&lt;/p>
&lt;ol>
&lt;li>$r_2 – l_2 = r_1 – l_1$&lt;/li>
&lt;li>区间 $[l_1, r_1]$ 与区间 $[l_2, r_2]$ 没有交集&lt;/li>
&lt;li>对于任意 $i \in [0,r_1 – l_1]$ ，满足 $h[l_1 + i] + h[l_2 + i] = h[l_1] + h[l_2]$&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>后缀数组</category><category>主席树</category><category>字符串</category><category>数据结构</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF540E」Infinite Inversions-动态开点线段树</title><link>https://blog.chenqiqian.com/posts/cf540e/</link><pubDate>Tue, 01 Jan 2019 14:11:22 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 01 Jan 2019 14:11:22 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf540e/</guid><description>&lt;p>现在有一个由所有正整数组成的无限递增序列： $p = {1,2,3,&amp;hellip;}$ 。&lt;/p>
&lt;p>对这个序列执行 $n$ 次交换操作。每次一个操作，给出两个整数 $a,b$，交换位置 $a$ 和 $b$ 处的元素。&lt;/p>
&lt;p>你的任务是在所有操作结束后，输出最终序列的逆序对个数，即满足 $i &amp;lt; j$ 且 $p_i &amp;gt; p_j$ 的有序数对 $(i,j)$ 的数量。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF486E」LIS of Sequence-简单数据结构</title><link>https://blog.chenqiqian.com/posts/cf486e/</link><pubDate>Tue, 01 Jan 2019 13:13:38 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 01 Jan 2019 13:13:38 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf486e/</guid><description>&lt;p>给你一个长度为 $n$ 的序列 $a_1,a_2,&amp;hellip;,a_n$ ，你需要把这 $n$ 个元素分成三类：$1,2,3$，每类的条件如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>所有&lt;/strong>的最长上升子序列&lt;strong>都不包含&lt;/strong>这个元素&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>有但非所有&lt;/strong>的最长上升子序列&lt;strong>包含&lt;/strong>这个元素&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>所有&lt;/strong>的最长上升子序列&lt;strong>都包含&lt;/strong>这个元素&lt;/p>
&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>数据结构</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF400E」Inna and Binary Logic-简单数据结构</title><link>https://blog.chenqiqian.com/posts/cf400e/</link><pubDate>Mon, 31 Dec 2018 15:39:18 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 31 Dec 2018 15:39:18 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf400e/</guid><description>&lt;p>Inna 有一个一个长度为 $n$ 的数列 $a_1 [1],a_1 [2],\dots,a_1 [n]$。&lt;/p>
&lt;p>她会进行如下操作，分为 $n$ 个阶段：&lt;br />
在第一阶段，Inna 从数组 $a_1$中写出所有数字，在第 $i$ 个 $(i \ge 2)$ 阶段 Inna 会写出数组的所有元素 $a_i$ ，由 $n - i + 1$ 个整数组成; 数组 $a_i$ 的第 $k$ 个数定义如下：$a_{i} [k] = a_{i-1} [k]\ \mathrm{AND}\ a_{i-1} [k + 1]$ 。 这里 $\mathrm{AND}$ 是二进制的逐位与运算。&lt;/p>
&lt;p>Dima 决定检验 Inna 的技能。 他要求 Inna 改变阵列，进行练习并说出她在当前练习中写出的所有元素的总和，即：&lt;/p>
&lt;p>$$&lt;br />
\sum_{i=1}^n \sum_{j=1}^{n-i+1} a_i[j]&lt;br />
$$&lt;/p>
&lt;p>请帮助 Inna 回答问题！&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF379F」New Year Tree-树的直径-倍增</title><link>https://blog.chenqiqian.com/posts/cf379f/</link><pubDate>Sun, 30 Dec 2018 09:35:29 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 30 Dec 2018 09:35:29 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf379f/</guid><description>&lt;p>你是一个程序猿，现在有一棵新年树（并不是传统的带着叶子的树）——它有四个节点： $1$ ，$2$ ，$3$ ，$4$ . 其中$2$ ，$3$ ，$4$ 的父亲都是 $1$ .&lt;/p>
&lt;p>新年里，程序猿们往往会做一些有趣的事情。你则选择以往这棵树上加节点来取乐。 一个添加节点的操作是这样的：&lt;/p>
&lt;ol>
&lt;li>找到树上的一个叶子结点 $v$ .&lt;/li>
&lt;li>设现在树上有 $n$ 个节点，那么你现在会加入两个节点$n+1$ 和 $n+2$ ，它们都会成为 $v$ 的儿子.&lt;/li>
&lt;/ol>
&lt;p>你的任务是在做 $q$ 次这样的操作，并在每做完一次后计算一次树的直径。来吧，我们一起来解决这道新年问题吧！&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树形结构</category><category>树的直径</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF369E」Valera and Queries-线段树</title><link>https://blog.chenqiqian.com/posts/cf369e/</link><pubDate>Sat, 29 Dec 2018 23:41:25 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 29 Dec 2018 23:41:25 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf369e/</guid><description>&lt;p>有 $n$ 条线段，分别为 $[l_i,r_i]$ 。&lt;/p>
&lt;p>有 $m$ 个询问，分别为 $cnt_i,p_1,p_2,&amp;hellip;,p_{cnt_i}$ 。&lt;/p>
&lt;p>对于每个询问，输出有多少线段至少覆盖这 $cnt_i$ ​个点中的一个。（$\sum cnt_i \le 3 \cdot 10^5$）&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>树套树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF256E」Lucky Arrays-简单线段树</title><link>https://blog.chenqiqian.com/posts/cf256e/</link><pubDate>Thu, 27 Dec 2018 20:51:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 27 Dec 2018 20:51:00 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf256e/</guid><description>&lt;p>给定一个长度为 $n(1 \le n \le 77777)$ 的数列 $a$ ，初始的时候全为 0。&lt;/p>
&lt;p>给出一个 $3 \times 3$ 的矩阵 $w_{i,j}$ ，$w_{i,j} = 1$ 时代表 $(i,j)$ 这个**有序**数对为和谐的数对，否则 $(i,j)$ 不为一个和谐数对。&lt;/p>
&lt;p>一个数列 $a$ 是和谐的当且仅当对于所有的 $1\le i \le n-1$ ， $(a_i,a_{i+1})$ 均为和谐数对。&lt;/p>
&lt;p>有 $m(1\le m \le 77777)$ 次修改和询问，每次给出两个整数 $v_i,t_i$，将 $a_{v_i} (1 \le v_i \le n)$ 修改为 $t_i(0\le t_i \le 3)$。&lt;/p>
&lt;p>每次修改后都询问，如果将数列里所有的 $0$ 都替换为任意 $1$ 到 $3$ 之间的整数（不同位置的 $0$ 可以替换为不同的数），那么最后产生的和谐的数列有多少种。每次修改后的查询并不会使数列发生任何改变。&lt;/p>
&lt;p>答案对 $777777777$ 取模。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF212D」Cutting a Fence-简单数据结构</title><link>https://blog.chenqiqian.com/posts/cf212d/</link><pubDate>Wed, 26 Dec 2018 19:36:56 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 26 Dec 2018 19:36:56 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf212d/</guid><description>&lt;p>给定一个长度为 $n$ 的数列 $a_1,a_2,&amp;hellip;,a_n$，定义 $f(x,k) = \min_{i=0}^{k-1} (a_{x+i})$ ，请对于每一个 $k = 1$ 到 $n$ ，求出 $\sum_{i=1}^{n-k+1} f(i,k)$ 的值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF208E」Blood Cousins-线段树合并</title><link>https://blog.chenqiqian.com/posts/cf208e/</link><pubDate>Tue, 25 Dec 2018 21:08:48 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 25 Dec 2018 21:08:48 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf208e/</guid><description>&lt;p>给你一片森林，每次询问一个点与多少个点拥有共同的 $K$ 级祖先。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树形结构</category><category>线段树合并</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF160E」Buses and People-线段树</title><link>https://blog.chenqiqian.com/posts/cf160e/</link><pubDate>Mon, 24 Dec 2018 23:57:34 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 24 Dec 2018 23:57:34 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf160e/</guid><description>&lt;p>Bertown 大街可以抽象为一条数轴。在数轴上有 $10^9$ 个巴士站。站点按照它们在数轴上的顺序从 $1$ 到 $10^9$ 的整数编号。这个城市有 $n$ 辆公共汽车。每天第 $i$ 个公共汽车从 $s_i$ 位置出发，到 $f_i$ 位置停止（ $s_i &amp;lt; f_i$ ），它在所有位于 $s_i$ 与 $f_i$ 的中间站点停靠并且仅在晚上返回。公共汽车在时间 $t_i$ 开始行驶，并且它也在时间 $t_i$ 完成行驶（行驶、停靠都是瞬间的）。所有公共汽车的开始时间 $t_i$ 都不同。公交车有无限的容量。&lt;/p>
&lt;p>Bertown 有很多居民。今天第 $i$ 个人要从 $l_i$ 位置出发到 $r_i$ 位置结束（ $l_i &amp;lt; r_i$ ）；第 $i$ 个人在时间 $b_i$ 进入他的出发位置（ $l_i$ ）。一方面，每个人都希望尽快到达目的地，另一方面，他不想换乘公交车。&lt;/p>
&lt;p>也就是：为第 $i$ 个人挑选的公交汽车 $j$ ，满足 $s_j \leq l_i$, $r_i \leq f_j$ 和 $b_i \leq t_j$ 的条件下，$t_j$ 最小。&lt;/p>
&lt;p>你的任务是确定每个人今天是否可以到达目的地，如果可以，找到每个人将乘坐的公交车的号码，不可以则输出 $-1$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF115E」Linear Kingdom Races-dp+线段树优化</title><link>https://blog.chenqiqian.com/posts/cf115e/</link><pubDate>Sun, 23 Dec 2018 22:26:23 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 23 Dec 2018 22:26:23 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf115e/</guid><description>&lt;p>你是一个赛车比赛的组织者，想在线性王国中安排一些比赛。&lt;/p>
&lt;p>线性王国有 $n$ 条连续的从左到右的道路。道路从左到右依次编号为从 $1$ 到 $n$ ，因此道路按照升序排列。在这些道路上可能会有几场比赛，每一场比赛都将使用这些道路的某个连续的子序列。而且，如果某场比赛举行了，你将获得一定数额的金钱。没有比赛在时间上重叠，所以每一段道路可以在多个比赛中使用。&lt;/p>
&lt;p>不幸的是，&lt;strong>所有道路&lt;/strong>的状况都不佳，需要修理。每条路都有与之相关的维修费用，你需要支付这笔费用来修理道路。只有在某场比赛中需要使用的所有道路&lt;strong>都进行了修复&lt;/strong>，才能进行比赛。你的任务是修复道路并使你的利润最大化。你的利润被定义为你从比赛中获得的总金额减去你花在修理道路上的钱。&lt;strong>请注意，您可以决定不修任何道路，并获得利润 $0$ 。&lt;/strong>&lt;/p>
&lt;p>输出你能获得的最大利润。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>动态规划</category><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「CF91E」Igloo Skyscraper-分块</title><link>https://blog.chenqiqian.com/posts/cf91e/</link><pubDate>Sun, 23 Dec 2018 22:25:44 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 23 Dec 2018 22:25:44 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cf91e/</guid><description>&lt;p>有 $n$ 个海象（编号为 $1$ 到 $n$ ）参加比赛建造自己的摩天大楼 。在 $t=0$ 时，第 $i$ 个海象的摩天大楼的高度为 $a_i$ 。每一时刻，编号为 $i$ 的海象会完成 $b_i$ 层楼的建造。&lt;/p>
&lt;p>在奥运会现场报道的记者向活动组织者提出了 $q$ 次询问。每次询问给出三个数字 $l_i$ ，$r_i$ ，$t_i$。活动组织者用数字 $x$ 回答每个查询，$x$ 满足：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>数字 $x$ 位于从 $l_i$ 到 $r_i$ 的区间，即 $l_i \leq x \leq r_i$ 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>编号为 $x$ 的海象的摩天大楼在 $t_i$ 时刻拥有编号在 $[l_i,r_i]$ 中所有海象的摩天大楼中的最大高度。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>对于每位记者的查询，输出符合上述标准的海象的编号 $x$ 。&lt;strong>如果有多个可能的答案，请输出其中任何一个。&lt;/strong>&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>分块</category><category>OI</category><category>题解</category><category>Codeforces</category></item><item><title>「SCOI2016」美味-可持久化线段树</title><link>https://blog.chenqiqian.com/posts/scoi2016-delicious/</link><pubDate>Tue, 11 Dec 2018 21:16:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 11 Dec 2018 21:16:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2016-delicious/</guid><description>&lt;p>一家餐厅有 $n$ 道菜，编号 $1,\dots,n$ ，大家对第 $i$ 道菜的评价值为 $a_i(1 \leq i \leq n)$。有 $m$ 位顾客，第 $i$ 位顾客的期望值为 $b_i$，而他的偏好值为 $x_i$ 。因此，第 $i$ 位顾客认为第 $j$ 道菜的美味度为 $b_i\ \text{XOR}\ (a_j+x_i)$ ，$\text{XOR}$ 表示异或运算。&lt;/p>
&lt;p>第 $i$ 位顾客希望从这些菜中挑出他认为最美味的菜，即美味值最大的菜，但由于价格等因素，他只能从第 $l_i$ 道到第 $r_i$ 道中选择。请你帮助他们找出最美味的菜。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>可持久化主席树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2015」Kinoman-线段树</title><link>https://blog.chenqiqian.com/posts/poi2015-kinoman/</link><pubDate>Mon, 10 Dec 2018 19:50:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 10 Dec 2018 19:50:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2015-kinoman/</guid><description>&lt;p>共有 $m$ 部电影，编号为 $1$ 到 $m$，第 $i$ 部电影的好看值为 $w[i]$。在 $n$ 天之中（从 $1$ 到 $n$ 编号）每天会放映一部电影，第 $i$ 天放映的是第 $f[i]$ 部。你可以选择 $l,r(1 \leq l \leq r \leq n)$ ，并观看第 $l,l+1,\dots , r$ 天内所有的电影。如果同一部电影你观看多于一次，你会感到无聊，于是无法获得这部电影的好看值。所以你希望最大化观看且仅观看过一次的电影的好看值的总和。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「SHOI2013」发牌-fhq Treap</title><link>https://blog.chenqiqian.com/posts/shoi2013-card/</link><pubDate>Mon, 15 Oct 2018 21:59:15 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 15 Oct 2018 21:59:15 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/shoi2013-card/</guid><description>&lt;p>在一些扑克游戏里，如德州扑克，发牌是有讲究的。一般称呼专业的发牌手为荷官。荷官在发牌前，先要销牌。所谓销牌，就是把当前在牌库顶的那一张牌移动到牌库底，它用来防止玩家猜牌而影响游戏。&lt;/p>
&lt;p>假设一开始，荷官拿出了一副新牌，这副牌有 $N$ 张不同的牌，编号依次为 $1$ 到 $N$ 。由于是新牌，所以牌是按照顺序排好的，从牌库顶开始，依次为 $1, 2, \dots$ 直到$N$ ，$N$ 号牌在牌库底。为了发完所有的牌，荷官会进行$N$ 次发牌操作，在第 $i$ 次发牌之前，他会连续进行 $R_i$ 次销牌操作， $R_i$ 由输入给定。请问最后玩家拿到这副牌的顺序是什么样的？&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>平衡树</category><category>Treap</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SCOI2014」方伯伯的OJ-动态开点线段树</title><link>https://blog.chenqiqian.com/posts/scoi2014-onlinejudge/</link><pubDate>Wed, 03 Oct 2018 23:35:33 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 03 Oct 2018 23:35:33 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2014-onlinejudge/</guid><description>&lt;p>方伯伯正在做他的 OJ 。现在他在处理 OJ 上的用户排名问题。 OJ 上注册了 $n$ 个用户，编号为 $1$ ～ $n$ ，一开始他们按照编号排名。&lt;/p>
&lt;p>方伯伯会按照心情对这些用户做以下四种操作，修改用户的排名和编号 ，共有 $m$ 次操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>操作格式为 &lt;code>1 x y&lt;/code> ，意味着将编号为 $x$ 的用户编号改为 $y$ ，而排名不变，执行完该操作后需要输出该用户在队列中的位置，数据保证 $x$ 必然出现在队列中，同时， $y$ 是一个当前不在排名中的编号。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作格式为 &lt;code>2 x&lt;/code> ，意味着将编号为 $x$ 的用户的排名提升到第一位，执行完该操作后需要输出执行该操作前编号为 $x$ 用户的排名。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作格式为 &lt;code>3 x&lt;/code> ，意味着将编号为 $x$ 的用户的排名降到最后一位，执行完该操作后需要输出执行该操作前编号为 $x$ 用户的排名。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作格式为 &lt;code>4 k&lt;/code>，意味着查询当前排名为 $k$ 的用户编号，执行完该操作后需要输出当前操作用户的编号。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>对于 $100%$ 的数据， $1 \leq n \leq 10^8,1 \leq m \leq 10^5$。&lt;/p>
&lt;p>强制在线。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SCOI2015」情报传递-树链剖分-主席树</title><link>https://blog.chenqiqian.com/posts/scoi2015-intelligence/</link><pubDate>Tue, 02 Oct 2018 09:33:57 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 02 Oct 2018 09:33:57 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2015-intelligence/</guid><description>&lt;p>给定一个 $n$ 个节点的有根树，开始时每个节点的权值都为 $0$ 。一共有 $q$ 个时刻，每个时刻可能有如下两个操作之一：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>给定一个节点 $x$ ，从下一个时刻起每个时刻都给该节点的权值 $+1$（每个节点只会有一次该操作）；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>给定两个节点 $x,y$ 以及一个数 $C$ ，求这两个节点的简单路径上权值大于 $C$ 的节点个数，以及简单路径上的所有节点个数。&lt;/p>
&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>主席树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「BOI2007」Mokia-CDQ分治套CDQ分治</title><link>https://blog.chenqiqian.com/posts/boi2007-mokia/</link><pubDate>Mon, 17 Sep 2018 21:55:21 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 17 Sep 2018 21:55:21 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/boi2007-mokia/</guid><description>&lt;p>在定位系统中，世界被认为是一个 $W \times W$ 的正方形区域，由 $1 \times 1$ 的方格组成。每个方格都有一个坐标 $(x,y)$ ， $1 \leq x,y \leq W$。&lt;/p>
&lt;p>有三种命令，意义如下：&lt;/p>
&lt;ul>
&lt;li>&lt;code>0 W&lt;/code> 初始化一个全零矩阵。本命令仅开始时出现一次。&lt;/li>
&lt;li>&lt;code>1 x y A&lt;/code> 向方格 $(x,y)$ 中添加A个用户。A是正整数。&lt;/li>
&lt;li>&lt;code>2 X1 Y1 X2 Y2&lt;/code> 查询 $X1 \leq x \leq X_2$ ， $Y_1 \leq y \leq Y_2$ 所规定的矩形中的用户数量&lt;/li>
&lt;li>&lt;code>3&lt;/code> 无参数 结束程序。本命令仅结束时出现一次。&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>CDQ分治</category><category>数据结构</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「AHOI2013」作业-莫队</title><link>https://blog.chenqiqian.com/posts/ahoi2013-homework/</link><pubDate>Sat, 15 Sep 2018 22:38:10 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 15 Sep 2018 22:38:10 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/ahoi2013-homework/</guid><description>&lt;p>给定了一个长度为 $n$ 的数列和 $m$ 个询问。&lt;/p>
&lt;p>每个询问给定数列的一个区间 $[l,r]$ ，你要回答两个问题：&lt;/p>
&lt;ul>
&lt;li>该区间内大于等于 $a$ ，小于等于 $b$ 的数的个数，&lt;/li>
&lt;li>所有大于等于 $a$ ，小于等于 $b$ 的，且在该区间中出现过的数值的个数。&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>莫队</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「Luogu 2801」教主的魔法-分块</title><link>https://blog.chenqiqian.com/posts/luogu-2801/</link><pubDate>Sun, 09 Sep 2018 20:00:07 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 09 Sep 2018 20:00:07 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-2801/</guid><description>&lt;p>给定一个长度为 $N$ 的数列，每次一个操作或询问：&lt;/p>
&lt;ul>
&lt;li>把闭区间 $[L, R]$ 内的数全部加上一个整数 $W$&lt;/li>
&lt;li>问闭区间 $[L, R]$ 内有多少英雄身高大于等于 $C$&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>分块</category><category>数据结构</category><category>OI</category><category>题解</category><category>Luogu</category></item><item><title>「NOI2012」魔幻棋盘-差分+树套树</title><link>https://blog.chenqiqian.com/posts/noi2012-board/</link><pubDate>Fri, 24 Aug 2018 13:15:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 24 Aug 2018 13:15:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2012-board/</guid><description>&lt;p>将要读二年级的小 Q 买了一款新型益智玩具——魔幻棋盘，它是一个 $N$ 行 $M$ 列的网格棋盘，每个格子中均有一个正整数。棋盘守护者在棋盘的第 $X$ 行第 $Y$ 列（行与列均从 $1$ 开始编号）并且始终不会移动。棋盘守护者会进行两种操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>询问：他会以自己所在位置为基础，向四周随机扩展出一块大小不定的矩形区域，向你询问这一区域内所有数的最大公约数是多少。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改：他会随意挑选棋盘上的一块矩形区域，将这一区域内的所有数同时加上一个给定的整数。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>游戏说明书上附有这样一句话“聪明的小朋友，当你连续答对 $19930324$ 次询问后会得到一个惊喜噢！”。小 Q 十分想得到这个惊喜，于是每天都在玩这个玩具。但由于他粗心大意，经常算错数，难以达到这个目标。于是他来向你寻求帮助，希望你帮他写一个程序来回答棋盘守护者的询问，并保证 $100%$ 的正确率。&lt;/p>
&lt;p>为了简化问题，你的程序只需要完成棋盘守护者的 $T$ 次操作，并且问题保证任何时刻棋盘上的数字均为不超过 $2^{62} - 1$ 的正整数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>树套树</category><category>数据结构</category><category>差分</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「APIO2008」免费道路-生成树+并查集</title><link>https://blog.chenqiqian.com/posts/apio2008-road/</link><pubDate>Sat, 18 Aug 2018 20:44:05 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 18 Aug 2018 20:44:05 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/apio2008-road/</guid><description>&lt;p>给定一个 $n$ 个点，$m$ 条边的无向图，每条边有两种权值： $0$ 或者 $1$ 。&lt;/p>
&lt;p>先询问能不能找出一个生成树，使得其中恰有 $k$ 条 $0$ 边，若存在，输出任意一个方案，否则输出 &lt;code>no solution&lt;/code> 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>图论</category><category>生成树</category><category>数据结构</category><category>并查集</category><category>OI</category><category>题解</category><category>WC/CTSC/APIO</category></item><item><title>「SHOI2016」随机序列-线段树</title><link>https://blog.chenqiqian.com/posts/shoi2016-sequence/</link><pubDate>Sat, 18 Aug 2018 20:14:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 18 Aug 2018 20:14:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/shoi2016-sequence/</guid><description>&lt;p>你的面前有 $n$ 个数排成一行，分别为 $a_1,a_2,&amp;hellip;,a_n$ 。你打算在每相邻的两个 $a_i$c和 $a_{i+1}$ 间都插入一个加号、减号或者乘号。那么一共有 $3^{n-1}$ 种可能的表达式。&lt;/p>
&lt;p>你对所有可能的表达式的值的和非常感兴趣。但这毕竟太简单了，所以你还打算支持一个修改操作，可以修改某个 $a_i$ 的值。&lt;/p>
&lt;p>你能够编写一个程序对每个修改都输出修改完之后所有可能表达式的和吗？注意，修改是永久的，也就是说每次修改都是在上一次修改的基础上进行，而不是在最初的表达式上进行。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>线段树</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2012」小蓝的好友-Treap</title><link>https://blog.chenqiqian.com/posts/zjoi2012-friend/</link><pubDate>Thu, 16 Aug 2018 21:24:02 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 16 Aug 2018 21:24:02 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2012-friend/</guid><description>&lt;p>简单版题意：&lt;/p>
&lt;p>给定一个 $R \times C$ 的矩形，在其中 $N$ 个位置有&lt;strong>随机生成&lt;/strong>的资源点。现在请你求出在所有的子矩形中，至少包含一个资源点的矩形数量。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>Treap</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2012」网络-LCT</title><link>https://blog.chenqiqian.com/posts/zjoi2012-network/</link><pubDate>Fri, 03 Aug 2018 19:41:40 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 03 Aug 2018 19:41:40 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2012-network/</guid><description>&lt;p>有一个无向图 $G$ ，每个点有个权值，每条边有一个颜色。这个无向图满足以下两个条件：&lt;/p>
&lt;ul>
&lt;li>对于任意节点连出去的边中，相同颜色的边不超过两条。&lt;/li>
&lt;li>图中不存在同色的环，同色的环指相同颜色的边构成的环。&lt;/li>
&lt;/ul>
&lt;p>在这个图上，你要支持以下三种操作：&lt;/p>
&lt;ul>
&lt;li>修改一个节点的权值。&lt;/li>
&lt;li>修改一条边的颜色。&lt;/li>
&lt;li>查询由颜色 $c$ 的边构成的图中， $u$ 到节点 $v$ 之间的简单路径上的节点的权值的最大值。&lt;/li>
&lt;/ul>
&lt;p>对于 100% 的数据，保证颜色不多于 $10$ 种。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树形结构</category><category>LCT</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「POI2011」Tree Rotations-线段树合并</title><link>https://blog.chenqiqian.com/posts/poi2011-tree-rotations/</link><pubDate>Mon, 23 Jul 2018 22:51:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 23 Jul 2018 22:51:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2011-tree-rotations/</guid><description>&lt;p>现在有一棵二叉树，所有非叶子节点都有两个孩子。在每个叶子节点上有一个权值(有 $n$ 个叶子节点，满足这些权值为 $1&amp;hellip;n$ 的一个排列)。可以任意交换每个非叶子节点的左右孩子。&lt;br />
要求进行一系列交换，使得最终所有叶子节点的权值按照前序遍历序写出来，逆序对个数最少。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>树形结构</category><category>线段树合并</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「JLOI2015」城池攻占-左偏树</title><link>https://blog.chenqiqian.com/posts/jloi2015-fail/</link><pubDate>Sat, 21 Jul 2018 20:45:52 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 21 Jul 2018 20:45:52 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/jloi2015-fail/</guid><description>&lt;p>有 $m$ 个骑士攻占 $n$ 个城池。除 $1$ 号城池外，城池 $i$ 会受到另一座城池 $f_i$ 的管辖，其中 $f_i &amp;lt; i$。也就是说，所有城池构成了一棵有根树。第 $i$ 个骑士的初始战斗力为 $s_i$，第一个攻击的城池为 $c_i$。&lt;/p>
&lt;p>每个城池有一个防御值 $h_i$，如果一个骑士的战斗力大于等于城池的生命值，那么骑士就可以占领这座城池；否则占领失败，骑士将在这座城池牺牲。占领一个城池以后，骑士的战斗力将发生变化，然后继续攻击管辖这座城池的城池，直到占领 $1$ 号城池，或牺牲为止。&lt;/p>
&lt;p>除 $1$ 号城池外，每个城池 $i$ 会给出一个战斗力变化参数 $a_i$;$v_i$。若 $a_i = 0$，攻占城池 $i$ 以后骑士战斗力会增加 $v_i$；若 $a_i = 1$，攻占城池 $i$ 以后，战斗力会乘以 $v_i$。注意每个骑士是单独计算的。也就是说一个骑士攻击一座城池，不管结果如何，均不会影响其他骑士攻击这座城池的结果。&lt;/p>
&lt;p>对于每个城池，输出有多少个骑士在这里牺牲；对于每个骑士，输出他攻占的城池数量。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>左偏树</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「APIO2012」派遣-左偏树</title><link>https://blog.chenqiqian.com/posts/apio2012-dispatching/</link><pubDate>Sat, 21 Jul 2018 20:45:20 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 21 Jul 2018 20:45:20 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/apio2012-dispatching/</guid><description>&lt;p>给定一棵有根树，每个点有一个代价 $C_i$ ，权值 $L_i$ ，要求从这个树某个节点 $k$ 的子树（包含该节点）选取若干个节点，使得选取节点的个数乘上节点 $k$ 的权值最大，且这若干个节点的代价和不超过给定的限制 $M$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>左偏树</category><category>数据结构</category><category>OI</category><category>题解</category><category>WC/CTSC/APIO</category></item><item><title>左偏树学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-leftist-tree/</link><pubDate>Sat, 21 Jul 2018 20:39:31 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 21 Jul 2018 20:39:31 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-leftist-tree/</guid><description>&lt;p>左偏树是一种以二叉树为基础的数据结构，可以用来实现可以在$O(\log n)$时间内合并的堆。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>左偏树</category><category>数据结构</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「IOI2014」Wall-线段树</title><link>https://blog.chenqiqian.com/posts/ioi2014-wall/</link><pubDate>Tue, 17 Jul 2018 19:51:27 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Tue, 17 Jul 2018 19:51:27 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/ioi2014-wall/</guid><description>&lt;p>给定一个长度为 $n$ 且初始值全为 $0$ 的序列。你需要支持以下两种操作：&lt;/p>
&lt;ul>
&lt;li>$Add, L, R, h$ ：将序列 $[L, R]$ 内所有值小于 $h$ 的元素都赋为 $h$，此时不改变高度大于 $h$ 的元素值&lt;/li>
&lt;li>$Remove, L, R, h$：将序列 $[L, R]$ 内所有值大于 $h$ 的元素都赋为 $h$ ，此时不改变高度小于 $h$ 的元素值&lt;/li>
&lt;/ul>
&lt;p>你需要输出进行 $k$ 次上述操作之后的序列。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>OI</category><category>题解</category><category>IOI</category></item><item><title>「NOI2014」魔法森林-LCT</title><link>https://blog.chenqiqian.com/posts/noi2014-forest/</link><pubDate>Sat, 16 Jun 2018 11:36:51 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 16 Jun 2018 11:36:51 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2014-forest/</guid><description>&lt;p>给定一个 $n$ 个点 $m$ 条边的无向图，每条边有两个权值 $a_i,b_i$ 。请你找到一条从 $1 \rightarrow n$ 的道路，令道路上所有边的集合为 $S$ ，使 $ans = \max(a_i)+\max(b_j),i,j \in S$ 最小，求出这个最小值 $ans$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「CQOI2011」动态逆序对-CDQ分治</title><link>https://blog.chenqiqian.com/posts/cqoi2011-inverse/</link><pubDate>Thu, 07 Jun 2018 20:58:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 07 Jun 2018 20:58:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2011-inverse/</guid><description>&lt;p>对于序列 $A$ ，它的逆序对数定义为满足 $i&amp;lt;j$ ，且 $A_i&amp;gt;A_j$ 的数对 $(i,j)$ 的个数。&lt;br />
给出一个 $1$ 到 $n$ 的排列，按照某种顺序依次删除 $m$ 个元素，你的任务是在每次删除一个元素之前统计整个序列的逆序对数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>CDQ分治</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2013」K大数查询-整体二分</title><link>https://blog.chenqiqian.com/posts/zjoi2013-kth/</link><pubDate>Wed, 06 Jun 2018 19:17:02 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 06 Jun 2018 19:17:02 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2013-kth/</guid><description>&lt;p>有 $N$ 个位置， $M$ 个操作。&lt;/p>
&lt;p>操作有两种：&lt;/p>
&lt;ul>
&lt;li>如果是 &lt;code>1 a b c&lt;/code> 的形式表示在第 $a$ 个位置到第 $b$ 个位置，每个位置加入一个数 $c$ ；&lt;/li>
&lt;li>如果是 &lt;code>2 a b c&lt;/code> 形式，表示询问从第 $a$ 个位置到第 $b$ 个位置，第 $c$ 大的数是多少。&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>整体二分</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「LNOI2014」LCA-树链剖分-差分</title><link>https://blog.chenqiqian.com/posts/lnoi2014-lca/</link><pubDate>Sat, 02 Jun 2018 21:23:25 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 02 Jun 2018 21:23:25 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/lnoi2014-lca/</guid><description>&lt;p>给出一个 $n$ 个节点的有根树。有 $q$ 次询问，每次询问给出 $l,r,z$ ，求 $\sum_{l \leq i \leq r}dep[LCA(i,z)]$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>差分</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SCOI2013」多项式的运算-Splay</title><link>https://blog.chenqiqian.com/posts/scoi2013-function/</link><pubDate>Fri, 01 Jun 2018 21:12:47 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 01 Jun 2018 21:12:47 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/scoi2013-function/</guid><description>&lt;p>维护一个动态的关于 $x$的无穷多项式 ，这个多项式初始时对于所有 $i$ 有 $a_i = 0$&lt;/p>
&lt;p>$$&lt;br />
f(x)=a_0x^0+a_1x^1+a_2x^2&amp;hellip;&lt;br />
$$&lt;/p>
&lt;p>操作者可以进行四种操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>mul L R V&lt;/code> 表示将 $x^L$ 到 $x^R$ 这些项的系数乘上某个定值 $v$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>add L R V&lt;/code> 表示将 $x^L$ 到 $x^R$ 这些项的系数加上某个定值 $v$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>mulx L R&lt;/code> 表示将 $x^L$ 到 $x^R$ 这些项乘上x变量；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>query V&lt;/code> 求 $f(v)$ 的值。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>操作集中在前三种，第四种操作不会出现超过 $10$ 次。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>Splay</category><category>数据结构</category><category>平衡树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2014」旅行-树链剖分+动态开点线段树</title><link>https://blog.chenqiqian.com/posts/sdoi2014-journey/</link><pubDate>Thu, 24 May 2018 20:38:27 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 24 May 2018 20:38:27 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2014-journey/</guid><description>&lt;p>给定一棵 $n$ 个节点的树，对于每个点都有两个权值 $w_i,c_i$ 。&lt;/p>
&lt;p>存在 $m$ 个操作，分为4类。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>“&lt;code>CC x c&lt;/code>”：将 $c_x$ 更改为 $c$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“&lt;code>CW x w&lt;/code>”：将 $w_x$ 更改为 $w$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“&lt;code>QS x y&lt;/code>”：对所有满足在 $x$ 到 $y$ 路径上且 $c_i = c_x = c_y$ 的节点 $i$，求 $\sum w_i$ ；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“&lt;code>QM x y&lt;/code>”：对所有满足在 $x$ 到 $y$ 路径上且 $c_i = c_x = c_y$ 的节点 $i$ ，求 $\max(w_i)$ ；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>对于后两个操作，保证 $c_x = c_y$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>线段树</category><category>树链剖分</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>可持久化线段树学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-prsegtree/</link><pubDate>Thu, 24 May 2018 20:37:53 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 24 May 2018 20:37:53 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-prsegtree/</guid><description>&lt;p>可持久化线段树，是一种可以进行可持久化操作的线段树，具有优越的时间复杂度。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>可持久化线段树</category><category>主席树</category><category>数据结构</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「HNOI2010」弹飞绵羊-动态树</title><link>https://blog.chenqiqian.com/posts/hnoi2010-bounce/</link><pubDate>Fri, 18 May 2018 18:52:39 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 18 May 2018 18:52:39 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/hnoi2010-bounce/</guid><description>&lt;p>游戏一开始，&lt;code>Lostmonkey&lt;/code> 在地上沿着一条直线摆上 $n$ 个装置，每个装置设定初始弹力系数 $K_i$ ，当绵羊达到第 $i$ 个装置时，它会往后弹 $K_i$ 步，达到第 $i+K_i$ 个装置，若不存在第 $i+K_i$ 个装置，则绵羊被弹飞。&lt;/p>
&lt;p>存在两种操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查询在第 $i$ 个装置起步时，再经多少次会被弹飞。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改第 $i$ 个装置的弹力系数为 $K'$ 。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>保证任何时候，任何装置弹力系数均为正整数。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>LCT</category><category>数据结构</category><category>树形结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「HAOI2007」理想的正方形-单调队列</title><link>https://blog.chenqiqian.com/posts/haoi2007-square/</link><pubDate>Fri, 18 May 2018 18:52:06 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 18 May 2018 18:52:06 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/haoi2007-square/</guid><description>&lt;p>有一个 $a \times b$ 的整数组成的矩阵，现请你从中找出一个 $n\times n$ 的正方形区域，使得该区域所有数中的最大值和最小值的差最小，输出这个最小的差值。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>单调队列</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「CQOI2015」任务查询系统-可持久化线段树</title><link>https://blog.chenqiqian.com/posts/cqoi2015-mission/</link><pubDate>Wed, 16 May 2018 21:16:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 16 May 2018 21:16:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2015-mission/</guid><description>&lt;p>超级计算机中的任务用三元组 $(S_i,E_i,P_i)$ 描述， $(S_i,E_i,P_i)$ 表示任务运行区间为 $[S_i,E_i]$ ,其优先级为 $P_i$ 。&lt;/p>
&lt;p>给出 $n$ 个任务。随后给出 $m$ 个询问，第 $X_i$ 秒正在运行的任务中，优先级最小的 $K_i$ 个任务的优先级之和是多少。特别的，如果 $K_i$ 大于第 $X_i$ 秒正在运行的任务总数，则直接回答第 $X_i$ 秒正在运行的任务优先级之和。&lt;/p>
&lt;p>强制在线。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>可持久化线段树</category><category>差分</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「SDOI2008」洞穴勘测-LCT</title><link>https://blog.chenqiqian.com/posts/sdoi2008-cave/</link><pubDate>Sat, 12 May 2018 18:06:09 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 12 May 2018 18:06:09 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2008-cave/</guid><description>&lt;p>辉辉热衷于洞穴勘测。&lt;/p>
&lt;p>辉辉有一台监测仪器可以实时将通道的每一次改变状况，并在辉辉手边的终端机上显示：&lt;/p>
&lt;p>&lt;code>Connect u v&lt;/code>代表监测到洞穴u和洞穴v之间出现了一条通道，&lt;code>Destroy u v&lt;/code>代表监测到洞穴u和洞穴v之间的通道被毁。&lt;code>Query u v&lt;/code>，代表向监测仪询问此时洞穴u和洞穴v是否连通。&lt;/p>
&lt;p>保证无论通道怎么改变，任意时刻任意两个洞穴之间至多只有一条路径。&lt;/p>
&lt;p>已知在第一条指令显示之前，洞穴群中没有任何通道存在。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>LCT</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「Luogu2617」Dynamic Rankings-树状数组-可持久化线段树</title><link>https://blog.chenqiqian.com/posts/luogu-2617/</link><pubDate>Sat, 12 May 2018 18:05:36 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 12 May 2018 18:05:36 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-2617/</guid><description>&lt;p>给定一个含有 $n$ 个数的序列 ${a_n}$ ，回答询问或执行操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>Q i j k&lt;/code> （$1\leq i\leq j\leq n, 1\leq k\leq j-i+1$）表示询问$a[i],a[i+1]&amp;hellip;&amp;hellip;a[j]$中第 $k$ 小的数。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>C i t&lt;/code> ($1 \leq i \leq n,0\leq t \leq 10^{9}$)表示把 $a[i]$ 改变成为 $t$ 。&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>可持久化线段树</category><category>OI</category><category>题解</category><category>Luogu</category></item><item><title>「POI2014」KUR-Couriers-主席树</title><link>https://blog.chenqiqian.com/posts/poi2014-kur/</link><pubDate>Sun, 06 May 2018 19:38:00 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 06 May 2018 19:38:00 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/poi2014-kur/</guid><description>&lt;p>给一个数列 ${a_n}$ ，每次询问区间 $[l,r]$ 内有没有一个数出现次数超过一半。如果有，输出这个数，如果没有，输出 $0$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>主席树</category><category>线段树</category><category>可持久化线段树</category><category>OI</category><category>题解</category><category>各国OI</category></item><item><title>「Luogu3765」总统选举-平衡树-线段树</title><link>https://blog.chenqiqian.com/posts/luogu-3765/</link><pubDate>Wed, 25 Apr 2018 23:30:25 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 25 Apr 2018 23:30:25 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-3765/</guid><description>&lt;p>秋之国共有 $n$ 个人，分别编号为 $1,2,&amp;hellip;,n$ ，一开始每个人都投了一票，范围 $[1,n]$ ，表示支持对应编号的人当总统。共有 $m$ 次预选，每次选取编号 $[l_i,r_i]$ 内的选民展开小规模预选，在该区间内获得超过区间大小一半的票的人获胜，如果没有人获胜，则由小 C 钦定一位候选者获得此次预选的胜利（获胜者可以不在该区间内），每次预选的结果需要公布出来，并且每次会有 $k_i$ 个人决定将票改投向该次预选的获胜者。全部预选结束后，公布最后成为总统的候选人，没有候选人的话输出 $-1$ 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>平衡树</category><category>线段树</category><category>OI</category><category>题解</category><category>Luogu</category></item><item><title>「国家集训队」聪聪可可-点分治</title><link>https://blog.chenqiqian.com/posts/luogu-2634/</link><pubDate>Sun, 22 Apr 2018 13:14:39 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 22 Apr 2018 13:14:39 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-2634/</guid><description>&lt;p>有一颗 $n$（$n&amp;lt;20000$）个节点的树，每条边都有边权。接下来由聪聪和可可分别随即选一个点，如果两点之间简单路径上的边权和是 $3$ 的倍数，则判聪聪赢，否则可可赢。&lt;/p>
&lt;p>聪聪非常爱思考问题，希望知道对于这张图自己的获胜概率是多少。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>点分治</category><category>数据结构</category><category>树形结构</category><category>OI</category><category>题解</category><category>国家集训队</category></item><item><title>「NOI2015」软件包管理器-树链剖分</title><link>https://blog.chenqiqian.com/posts/noi2015-manager/</link><pubDate>Mon, 09 Apr 2018 21:07:03 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Mon, 09 Apr 2018 21:07:03 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2015-manager/</guid><description>&lt;p>你决定设计你自己的软件包管理器。如果软件包 A 依赖软件包 B ，那么安装软件包 A 以前，必须先安装软件包 B 。同时，如果想要卸载软件包 B ，则必须卸载软件包 A 。现在你已经获得了所有的软件包之间的依赖关系。除 $0$ 号软件包以外，所有软件包都会依赖一个且仅一个软件包，而 $0$ 号软件包不依赖任何一个软件包。依赖关系不存在环。&lt;/p>
&lt;p>现在有一些安装或卸载软件包的操作，需要求出这个操作实际上会改变多少个软件包的安装状态（即安装操作会安装多少个未安装的软件包，或卸载操作会卸载多少个已安装的软件包）。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>线段树</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「国家集训队」数颜色-带修改莫队</title><link>https://blog.chenqiqian.com/posts/luogu-1903/</link><pubDate>Sat, 31 Mar 2018 12:21:42 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 31 Mar 2018 12:21:42 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-1903/</guid><description>&lt;p>墨墨购买了一套 $N$ 支彩色画笔（其中有些颜色可能相同）。墨墨会向你发布如下指令：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;code>Q L R&lt;/code> 代表询问你从第 $L$ 支画笔到第 $R$ 支画笔中共有几种不同颜色的画笔。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>R P Col&lt;/code> 把第 $P$ 支画笔替换为颜色 $Col$ 。&lt;/p>
&lt;/li>
&lt;/ol></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>莫队</category><category>OI</category><category>题解</category><category>国家集训队</category></item><item><title>「Violet」蒲公英-分块</title><link>https://blog.chenqiqian.com/posts/luogu-4168/</link><pubDate>Sat, 31 Mar 2018 11:30:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 31 Mar 2018 11:30:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/luogu-4168/</guid><description>&lt;p>给定一个数列 ${a_n}$ ，$m$ 次询问在 $[l,r]$ 区间内的最小众数。&lt;br />
强制在线。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>分块</category><category>数据结构</category><category>OI</category><category>题解</category></item><item><title>「SDOI2011」染色-树链剖分+线段树</title><link>https://blog.chenqiqian.com/posts/sdoi2011-colour/</link><pubDate>Wed, 14 Mar 2018 21:20:54 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 14 Mar 2018 21:20:54 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/sdoi2011-colour/</guid><description>&lt;p>给定一棵有 $n$ 个节点的无根树和 $m$ 个操作，操作有两类：&lt;/p>
&lt;ul>
&lt;li>将节点 $a$ 到节点 $b$ 路径上所有点都染成颜色 $c$ ；&lt;/li>
&lt;li>询问节点 $a$ 到节点 $b$ 路径上的颜色段数量（连续相同颜色被认为是同一段），&lt;/li>
&lt;/ul>
&lt;p>如“112221”由3段组成：“11”、“222”和“1”。&lt;/p>
&lt;p>请你写一个程序依次完成这 $m$ 个操作。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>线段树</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2008」树的统计-树链剖分</title><link>https://blog.chenqiqian.com/posts/zjoi2008-count/</link><pubDate>Sat, 10 Mar 2018 21:18:32 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 10 Mar 2018 21:18:32 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2008-count/</guid><description>&lt;p>给定一颗 $n$ 个节点的树，节点编号为 $1$ 到 $n$ ，每个节点都有一个权值 $w_i$ 。&lt;/p>
&lt;p>有以下三种操作或询问：&lt;/p>
&lt;p>I. &lt;code>CHANGE u t&lt;/code> : 把结点 $u$ 的权值改为 $t$&lt;/p>
&lt;p>II. &lt;code>QMAX u v&lt;/code>: 询问从点 $u$ 到点 $v$ 的路径上的节点的最大权值&lt;/p>
&lt;p>III. &lt;code>QSUM u v&lt;/code>: 询问从点 $u$ 到点 $v$ 的路径上的节点的权值和&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>树链剖分</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「ZJOI2007」报表统计-平衡树</title><link>https://blog.chenqiqian.com/posts/zjoi2007-count/</link><pubDate>Sat, 03 Mar 2018 18:29:17 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 03 Mar 2018 18:29:17 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/zjoi2007-count/</guid><description>&lt;p>有一个长度为 $n$ 的整数序列，并且有以下三种操作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>INSERT i k&lt;/code> ：在原数列的第 $i$ 个数后面添加一个新数 $k$ ；如果原数列的第 $i$ 个数已经添加了若干数，则添加在这些数的最后&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MIN GAP&lt;/code>：查询相邻两个数的之间差值（绝对值）的最小值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MIN SORT GAP&lt;/code>：查询所有数中最接近的两个数的差值（绝对值）&lt;/p>
&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>Treap</category><category>平衡树</category><category>数据结构</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2005」维护数列-非旋Treap</title><link>https://blog.chenqiqian.com/posts/noi2005-sequence/</link><pubDate>Sat, 17 Feb 2018 21:48:01 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 17 Feb 2018 21:48:01 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2005-sequence/</guid><description>&lt;p>维护一个数列，给定初始的 $n$ 个数字。&lt;/p>
&lt;p>现有六种命令：&lt;/p>
&lt;ul>
&lt;li>在第 $pos$ 个数后插入 $tot$ 个数&lt;/li>
&lt;li>翻转从第 $pos$ 个数开始的 $tot$ 个数&lt;/li>
&lt;li>删除从第 $pos$ 个数开始的 $tot$ 个数&lt;/li>
&lt;li>查询从第 $pos$ 个数开始的 $tot$ 个数的和&lt;/li>
&lt;li>设定从第 $pos$ 个数开始的 $tot$ 个数设定为 $c$&lt;/li>
&lt;li>查询整个数列中和最大的连续子区间的和&lt;/li>
&lt;/ul></description><dc:creator>cqqqwq</dc:creator><category>Treap</category><category>平衡树</category><category>数据结构</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>非旋Treap学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-none-rotating-treap/</link><pubDate>Sat, 17 Feb 2018 19:45:17 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sat, 17 Feb 2018 19:45:17 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-none-rotating-treap/</guid><description>&lt;p>非旋 Treap ，是一种不基于旋转的平衡树。它基于 Treap 的树堆思想，并且能够高效的完成某些对区间的操作，而且灵活性比较高。它也可以进行可持久化的操作。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>Treap</category><category>平衡树</category><category>数据结构</category><category>模板</category><category>OI</category><category>学习笔记</category></item><item><title>「NOI2002」银河英雄传说-并查集</title><link>https://blog.chenqiqian.com/posts/noi2002-hero/</link><pubDate>Sun, 11 Feb 2018 16:27:45 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Sun, 11 Feb 2018 16:27:45 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2002-hero/</guid><description>&lt;p>初始时，第 $i$ 号战舰处于第 $i$ 列 $(i = 1, 2, …, 30000)$ 。&lt;/p>
&lt;p>有两种指令：&lt;/p>
&lt;p>合并指令为 &lt;code>M i j&lt;/code> ，含义为将第 $i$ 号战舰所在的整个战舰队列，作为一个整体（头在前尾在后）接至第 $j$ 号战舰所在的战舰队列的尾部。&lt;/p>
&lt;p>询问指令为 &lt;code>C i j&lt;/code> 。该指令意思询问第 $i$ 号战舰与第 $j$ 号战舰当前是否在同一列中，如果在同一列中，那么它们之间布置有多少战舰。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>并查集</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>「CQOI2014」排序机械臂-Splay</title><link>https://blog.chenqiqian.com/posts/cqoi2014-sort/</link><pubDate>Fri, 02 Feb 2018 15:12:44 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Fri, 02 Feb 2018 15:12:44 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/cqoi2014-sort/</guid><description>&lt;p>维护一个序列，第 $i$ 次操作时寻找第i小的数的所在位置 $P_i$,并将 $(P_{i-1},P_{i}]$ 的区间翻转。&lt;/p>
&lt;p>如果有相同的数，必须保证排序后它们的相对位置关系与初始时相同。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>平衡树</category><category>Splay</category><category>OI</category><category>题解</category><category>各省省选</category></item><item><title>「NOI2004」郁闷的出纳员-Splay</title><link>https://blog.chenqiqian.com/posts/noi2004-cashier/</link><pubDate>Wed, 31 Jan 2018 21:05:48 +0000</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Wed, 31 Jan 2018 21:05:48 +0000</atom:modified><guid>https://blog.chenqiqian.com/posts/noi2004-cashier/</guid><description>&lt;p>维护一个数列。&lt;/p>
&lt;p>现有四种命令，新加入一个数 $k$ ，把每个数加上 $k$ ，把每个数减去 $k$ ，查询第 $k$ 大的数。如果数列中的任意数小于 $min$ ，将它立即删除。并在最后输出总共删去的数的个数 $res$ 。&lt;/p>
&lt;p>如果新加入的数 $k$ 的初值小于 $min$ ，它将不会被加入数列。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>平衡树</category><category>Splay</category><category>OI</category><category>题解</category><category>NOI</category></item><item><title>Treap学习笔记</title><link>https://blog.chenqiqian.com/posts/notes-treap/</link><pubDate>Thu, 03 Aug 2017 11:10:34 +0800</pubDate><author>cqqqwq@outlook.com (cqqqwq)</author><atom:modified>Thu, 03 Aug 2017 11:10:34 +0800</atom:modified><guid>https://blog.chenqiqian.com/posts/notes-treap/</guid><description>&lt;p>闲下来了，开始写一点学习笔记，也希望能给后人造福吧。&lt;/p>
&lt;p>第一篇来说一说 Treap 。&lt;/p></description><dc:creator>cqqqwq</dc:creator><category>数据结构</category><category>平衡树</category><category>Treap</category><category>笔记</category><category>模板</category><category>test</category></item></channel></rss>