<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【洛谷】P1043 数字游戏]]></title>
    <url>%2F2017%2F12%2F23%2F%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1043-%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F%2F</url>
    <content type="text"><![CDATA[题目描述丁丁最近沉迷于一个数字游戏之中。这个游戏看似简单，但丁丁在研究了许多天之后却发觉原来在简单的规则下想要赢得这个游戏并不那么容易。游戏是这样的，在你面前有一圈整数（一共n个），你要按顺序将其分为m个部分，各部分内的数字相加，相加所得的m个结果对10取模后再相乘，最终得到一个数k。游戏的要求是使你所得的k最大或者最小。 例如，对于下面这圈数字（n=4，m=2）： 要求最小值时，((2-1) mod 10)×((4+3) mod 10)=1×7=7，要求最大值时，为((2+4+3) mod 10)×(-1 mod 10)=9×9=81。特别值得注意的是，无论是负数还是正数，对10取模的结果均为非负值。 丁丁请你编写程序帮他赢得这个游戏。 输入输出格式输入格式：输入文件第一行有两个整数，n（1≤n≤50）和m（1≤m≤9）。以下n行每行有个整数，其绝对值不大于104，按顺序给出圈中的数字，首尾相接。 输出格式：输出文件有两行，各包含一个非负整数。第一行是你程序得到的最小值，第二行是最大值。 输入输出样例输入样例#1：123454 243-12 输出样例#1：12781 说明很水的一道dp题目。只要知道断环为链剩下的也都不难。题解洛谷没给过，现在也找不到了，只有代码还剩了下来。代码里面也有注释，凑活看看也可以。 代码``` #include #include #include #include using namespace std; long long num[150],dp_1[150],dp_2[150];//_1放最大值,_2放最小值 int n,m; inline int mod(long long nnn){//mod函数，不解释 int w = int(floor(double(nnn)/10)); return nnn - w*10;} int main(){ scanf(“%d %d”,&amp;n,&amp;m); for(int i = 1;i&lt;=n;i++){//断环为链的准备 scanf(“%lld”,&amp;(num[i])); num[i+n] = num[i]; } for(int i = 1;i&lt;=2n;i++)//前缀和的处理 num[i] = num[i-1]+num[i]; //正经dp long long maxn = -1,minn = 0x3f3f3f3f; for(int s = 1;s&lt;=n;s++){//枚举起点 memset(dp_1,0,sizeof(dp_1));//清零dp数组 memset(dp_2,0,sizeof(dp_2)); for(int j = 0;j&lt;m;j++){//板子由少到多 for(int i = s;i&lt;=s+n;i++){//上一个插板子的地方 if(j == 0){//j==0的时候的处理，其实也可以叫初始化 dp_1[i] = dp_2[i] = mod(num[s+n]-num[i]); continue; } long long maxtmp = -1,mintmp = 0x3f3f3f3f;//对所有可能下一状态的遍历，并取最大或最小值 for(int x = i+1;x&lt;=s+n-j-1;x++){ maxtmp = max(maxtmp,dp_1[x]mod(num[x]-num[i])); mintmp = min(mintmp,dp_2[x]*mod(num[x]-num[i])); } dp_1[i] = maxtmp;//取最大最小值 dp_2[i] = mintmp; } } maxn = max(dp_1[s],maxn);//对于起点不同的最大最小值进行更新 minn = min(dp_2[s],minn); } printf(“%lld\n%lld\n”,minn,maxn);//开心的输出结果 return 0;}]]></content>
  </entry>
  <entry>
    <title><![CDATA[可能是最简单的线段树介绍]]></title>
    <url>%2F2017%2F12%2F18%2F%E5%8F%AF%E8%83%BD%E6%98%AF%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%BA%BF%E6%AE%B5%E6%A0%91%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[看了网上的各种线段树介绍，实在是觉得有点复杂。所以先开一个坑，慢慢填。 0x00 概述本文假设读者对基本编程知识已经有所了解，并能够熟练掌握（to be finished）。本文将从是什么、为什么、怎么做、有什么用这几个方面来介绍一下线段树这一重要的数据结构。 0x01 什么是线段树为了学习线段树这样一个数据结构，我们需要先搞明白这是一个什么东西。]]></content>
  </entry>
  <entry>
    <title><![CDATA[[转载]达拉崩吧-OI版]]></title>
    <url>%2F2017%2F12%2F16%2F%E8%BD%AC%E8%BD%BD-%E8%BE%BE%E6%8B%89%E5%B4%A9%E5%90%A7OI%E7%89%88%2F</url>
    <content type="text"><![CDATA[原文地址：点此查看很久很久以前 算法突然出现 带来导论 带走了智商又消失不见 编程十分危险 世间谁最勇敢 一位懵逼儿赶来 大声喊 我要写出最高的树 打出最大的表 搜进最深的递归 把AC带回到面前 老师非常高兴 忙问他的技能 年轻人想了想 他说 老师我会 非确定性有穷状态决策自动机 再来一次 非确定性有穷状态决策自动机 是不是 非确定性有穷状态决策自动机 对对是 非确定性有穷状态决策自动机 懵逼无名少年 捧着算法导论 带着大家的希望 从学校里出发 战胜BUG来袭 获得调试神技 无数代码见证 他慢慢升级 偏远论坛角落 参与所有话题 一路排序 伴随指引前路的单链表 进入决赛考场 比赛和可怕难题 少年打开IDE 难题道 我是 Floyd区间DP均衡红黑树 再来一次 Floyd区间DP均衡红黑树 是不是 Kruskal一维DP二叉排序树 不对是 Floyd区间DP均衡红黑树 于是 非确定性有限状态决策自动机 打出 深度搜索模拟枚举单源最短路 应用 拓扑排序Trie结构Polya定律 套入 Dijkasta联通分量BellmanFord 最后 非确定性有限状态决策自动机 他使用了 IO优化树链剖分输出random 调用了 矩阵速幂虚二叉树行列式消元 完成了 凸包扫描后缀数组网络最大流 老师听说 非确定性有限状态决策自动机 他忘了写 #include freopen 就让 非确定性有限状态决策自动机 全手写 map/set稳定婚姻KMP实现 啦啦 懵逼少年 敲着键盘 Ctrl+V来几遍 他发明了一个算法 也在天天渐渐复杂 为了避免以后麻烦 算法叫做暴力法 它的全名十分难念 我不想说一遍]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[洛谷大事记]]></title>
    <url>%2F2017%2F12%2F13%2F%E6%B4%9B%E8%B0%B7%E5%A4%A7%E4%BA%8B%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[洛谷里程碑 2017-09-14 20:32 注册 2017-10-17 21:00 AC*1 2017-10-23 08:50 蓝名 2017-10-29 10:05 绿名 2017-11-01 20:07 AC*50 2017-11-19 16:37 新手村AC 2017-11-25 11:51 AC*100 2017-11-29 17:55 橙名 2017-12-17 22:28 AC*150 2017-12-22 21:03 提交*500]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>洛谷</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日常颓废]]></title>
    <url>%2F2017%2F12%2F05%2F%E6%97%A5%E5%B8%B8%E9%A2%93%E5%BA%9F%2F</url>
    <content type="text"><![CDATA[颓…颓废？？？ 啧啧。今天真的来写一写吧。明天也许是周三了吧（捂脸），久违的统练就要来了呢。 但一不小心就又开始了日常颓废。先是生物练习册错一大堆，数学练习册错一大堆。看了看背后正在落灰的算法导论。不是很令人开心的一天。不过今天达成了一个成就，把同桌成功拉去打了一会乒乓球。非常的有趣。 愿明天生物统练不爆炸。]]></content>
      <categories>
        <category>日常</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[测试一下]]></title>
    <url>%2F2017%2F12%2F04%2F%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%2F</url>
    <content type="text"><![CDATA[第一篇文章或许这就是我的第一篇文章了？？？ 瞎搞一番果然颇有乐趣哈哈哈哈.以后不定期更新题解和算法什么乱七八糟的，没准也有我的吐槽哈哈哈。]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F12%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
