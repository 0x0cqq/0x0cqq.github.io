<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2018%2F01%2F14%2Ftest%2F</url>
    <content type="text"><![CDATA[test测试。]]></content>
      <categories>
        <category>总结</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[2018 JanWeek2]]></title>
    <url>%2F2018%2F01%2F13%2F2018-JanWeek2%2F</url>
    <content type="text"><![CDATA[2018年一月 第二周2018.1.7-2018.1.14 写在前面莫名的就突然有一种做一做总结的欲望。想到爸爸。以前啊，总是能看到爸爸每周做一次周报，每月做一次月报，季报，年报，诸如此类。其实也未尝不是一种好想法吧。尤其对我这种健忘的人，以后只要看看这些总结，也就能知道一些好玩的事情了。 正文转眼就2018了。这一周也没干什么正事，不过是写写作业、出出题，打打游戏。期末考试前的最后一周，真的很有趣呢。第二次轮到写班级日志，也只是草草敷衍了事。这一周没有竞赛课，也就更没有时间去督促自己coding了。看着某人luogu上一条直线的刷题数量，扎心。考完试后一定要玩命的学，玩命的刷题。这半个月复习期末带来的的损失真是不小的。 TodoList这周完成无 下周 复习&amp;考好期末 考完试学： Trie Treap 出没出完的题 准备好冬令营旅游]]></content>
      <categories>
        <category>总结</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[“长大”]]></title>
    <url>%2F2018%2F01%2F03%2F%E2%80%9C%E9%95%BF%E5%A4%A7%E2%80%9D%2F</url>
    <content type="text"><![CDATA[随谈或许，我一直认为我早就长大了吧。 那应该是在五年级的时候。我又一次去找老师，又一次没有说成我心中最为完美的想法，又一次的陷入沉思。那个时候，我真正的意识到，或许并不是所有事情，都能按照我心中最好的方式去进行吧。或许从那以后，我以为我就再也不会为了我心中的梦想的世界——或者说更美好的事情，去与人争辩了吧。而初中，也确实是，和人争辩大多也都是做错了题或者做对了题去跟同学和老师的争辩了吧。 一度，我竟真的以为我长大了。 那些记忆已经很模糊了，而近几天发生的事情却还历历在目。 看到某位同学的随笔，某位同学的批语，又想到了好多。 最近写了不少随笔，也阅了不少随笔。而我写的随笔有不少却像是“抱怨”，“抱怨”班歌比赛的劳民伤财，抱怨体育运动的不切实际，抱怨《论语》的无理考法。 最近和几位同学互相批判了一番。价值观的不同其实是必然的。或许你有一身嫉世热血，或许我有一颗如冰寒心。脚踏实地还是仰望星空？向理想前行还是于现实混沌？谁又会知道呢。想了很久要不要提笔写下自己的想法，最后还是放弃了。早就应该知道，这些事情，笑笑就好，何必去劳心费神呢？但又不知道为何，最近总是想写，想去表达所有一切一切的想法，或许应该收收了吧。 “这不是能随心所欲的年纪。”说的真的是好啊。或许，从小学就应该想到的吧。但为什么现在又忘记了呢？谁会知道呢。也许是一颗心不再凉的彻骨，也许是一不小心就忘记了以前吧。 这句话可以说是，“一语点破梦中人”。小学的无数经历让我曾以为我已经从这梦中醒来，再也不会去做那荒诞的梦；但如今发现，到底是梦还是现实却也分不太清。或许我仍然还在梦中？或许是我一直都错了？谁又知道呢。 曾经以为长大，但恍然之间被人点醒，却才知道梦仍然在。有梦是不是一件好事呢？ 或许几年之后仍会有相同的感慨吧。但现在，真的没有时间去思考那么多。但也许julao们不一定吧。 不如先滚去把作业写完。 另祝各位2018吉祥快乐，万事如意。]]></content>
      <categories>
        <category>日常</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[【洛谷】P1043 数字游戏]]></title>
    <url>%2F2017%2F12%2F23%2F%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1043-%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F%2F</url>
    <content type="text"><![CDATA[题目描述丁丁最近沉迷于一个数字游戏之中。这个游戏看似简单，但丁丁在研究了许多天之后却发觉原来在简单的规则下想要赢得这个游戏并不那么容易。游戏是这样的，在你面前有一圈整数（一共n个），你要按顺序将其分为m个部分，各部分内的数字相加，相加所得的m个结果对10取模后再相乘，最终得到一个数k。游戏的要求是使你所得的k最大或者最小。 例如，对于下面这圈数字（n=4，m=2）： 要求最小值时，((2-1) mod 10)×((4+3) mod 10)=1×7=7，要求最大值时，为((2+4+3) mod 10)×(-1 mod 10)=9×9=81。特别值得注意的是，无论是负数还是正数，对10取模的结果均为非负值。 丁丁请你编写程序帮他赢得这个游戏。 输入输出格式输入格式：输入文件第一行有两个整数，n（1≤n≤50）和m（1≤m≤9）。以下n行每行有个整数，其绝对值不大于104，按顺序给出圈中的数字，首尾相接。 输出格式：输出文件有两行，各包含一个非负整数。第一行是你程序得到的最小值，第二行是最大值。 输入输出样例输入样例#1：123454 243-12 输出样例#1：12781 说明很水的一道dp题目。只要知道断环为链剩下的也都不难。题解洛谷没给过，现在也找不到了，只有代码还剩了下来。代码里面也有注释，凑活看看也可以。 代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;algorithm&gt;#include &lt;cmath&gt;using namespace std;long long num[150],dp_1[150],dp_2[150];//_1放最大值,_2放最小值int n,m;inline int mod(long long nnn)&#123;//mod函数，不解释 int w = int(floor(double(nnn)/10)); return nnn - w*10;&#125;int main()&#123; scanf("%d %d",&amp;n,&amp;m); for(int i = 1;i&lt;=n;i++)&#123;//断环为链的准备 scanf("%lld",&amp;(num[i])); num[i+n] = num[i]; &#125; for(int i = 1;i&lt;=2*n;i++)//前缀和的处理 num[i] = num[i-1]+num[i]; //正经dp long long maxn = -1,minn = 0x3f3f3f3f; for(int s = 1;s&lt;=n;s++)&#123;//枚举起点 memset(dp_1,0,sizeof(dp_1));//清零dp数组 memset(dp_2,0,sizeof(dp_2)); for(int j = 0;j&lt;m;j++)&#123;//板子由少到多 for(int i = s;i&lt;=s+n;i++)&#123;//上一个插板子的地方 if(j == 0)&#123;//j==0的时候的处理，其实也可以叫初始化 dp_1[i] = dp_2[i] = mod(num[s+n]-num[i]); continue; &#125; long long maxtmp = -1,mintmp = 0x3f3f3f3f;//对所有可能下一状态的遍历，并取最大或最小值 for(int x = i+1;x&lt;=s+n-j-1;x++)&#123; maxtmp = max(maxtmp,dp_1[x]*mod(num[x]-num[i])); mintmp = min(mintmp,dp_2[x]*mod(num[x]-num[i])); &#125; dp_1[i] = maxtmp;//取最大最小值 dp_2[i] = mintmp; &#125; &#125; maxn = max(dp_1[s],maxn);//对于起点不同的最大最小值进行更新 minn = min(dp_2[s],minn); &#125; printf("%lld\n%lld\n",minn,maxn);//开心的输出结果 return 0;&#125;]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>洛谷 题解</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[可能是最简单的线段树介绍]]></title>
    <url>%2F2017%2F12%2F18%2F%E5%8F%AF%E8%83%BD%E6%98%AF%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%BA%BF%E6%AE%B5%E6%A0%91%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[看了网上的各种线段树介绍，实在是觉得有点复杂。所以先开一个坑，慢慢填。 0x00 概述本文假设读者对基本编程知识已经有所了解，并能够熟练掌握一些基本的算法。本文将从是什么、为什么、怎么做、有什么用这几个方面来介绍一下线段树这一重要的数据结构。 0x01 什么是线段树为了学习线段树这样一个数据结构，我们需要先搞明白这是一个什么东西。 线段树是一种二叉搜索树，与区间树相似，它将一个区间划分成一些区间，每个单元区间对应线段树中的一个叶结点。 0x02 线段树有什么用呢一句话：在O(log n)的对数时间查询数组中某个区间内的最大值，最小值，以及区间内所有数的和；并能够在对数时间内对一段连续的区间中的每一个数进行加减、乘除以及设置操作的一种数据结构。 权且猜测读者已经了解了树状数组。在树状数组的学习中，我们会知道，树状数组的出现其实是为了平衡前缀和、普通数组这两种数据结构，它能做到的就是在O(log n)的对数时间内求一段区间的和，以及改变某个数的值。 但是倘若需要对区间进行操作该怎么办呢？如果我将区间中的每一个数都进行操作的话，那么时间复杂度已经达到了O(n)，显然是我们不能承受之慢。这个时候，我们就需要下面即将介绍的——线段树。 0x03 怎么做到的呢这一部分主要分为以下几个部分 说到线段树，就不得不说—— 线段树的核心思想——懒惰（lazy）标记(to be finished)]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>介绍</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[转载]达拉崩吧-OI版]]></title>
    <url>%2F2017%2F12%2F16%2F%E8%BD%AC%E8%BD%BD-%E8%BE%BE%E6%8B%89%E5%B4%A9%E5%90%A7OI%E7%89%88%2F</url>
    <content type="text"><![CDATA[原文地址：点此查看很久很久以前 算法突然出现 带来导论 带走了智商又消失不见 编程十分危险 世间谁最勇敢 一位懵逼儿赶来 大声喊 我要写出最高的树 打出最大的表 搜进最深的递归 把AC带回到面前 老师非常高兴 忙问他的技能 年轻人想了想 他说 老师我会 非确定性有穷状态决策自动机 再来一次 非确定性有穷状态决策自动机 是不是 非确定性有穷状态决策自动机 对对是 非确定性有穷状态决策自动机 懵逼无名少年 捧着算法导论 带着大家的希望 从学校里出发 战胜BUG来袭 获得调试神技 无数代码见证 他慢慢升级 偏远论坛角落 参与所有话题 一路排序 伴随指引前路的单链表 进入决赛考场 比赛和可怕难题 少年打开IDE 难题道 我是 Floyd区间DP均衡红黑树 再来一次 Floyd区间DP均衡红黑树 是不是 Kruskal一维DP二叉排序树 不对是 Floyd区间DP均衡红黑树 于是 非确定性有限状态决策自动机 打出 深度搜索模拟枚举单源最短路 应用 拓扑排序Trie结构Polya定律 套入 Dijkasta联通分量BellmanFord 最后 非确定性有限状态决策自动机 他使用了 IO优化树链剖分输出random 调用了 矩阵速幂虚二叉树行列式消元 完成了 凸包扫描后缀数组网络最大流 老师听说 非确定性有限状态决策自动机 他忘了写 #include freopen 就让 非确定性有限状态决策自动机 全手写 map/set稳定婚姻KMP实现 啦啦 懵逼少年 敲着键盘 Ctrl+V来几遍 他发明了一个算法 也在天天渐渐复杂 为了避免以后麻烦 算法叫做暴力法 它的全名十分难念 我不想说一遍]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[洛谷大事记]]></title>
    <url>%2F2017%2F12%2F13%2F%E6%B4%9B%E8%B0%B7%E5%A4%A7%E4%BA%8B%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[里程碑 2017-09-14 20:32 注册 2017-10-17 21:00 AC*1 2017-10-23 08:50 第一次蓝名 2017-10-29 10:05 第一次绿名 2017-11-01 20:07 AC*50 2017-11-11&amp;12 NOIp2017 tg观光游省二 2017-11-19 16:37 新手村AC 2017-11-25 11:51 AC*100 2017-11-29 17:55 第一次橙名 2017-12-17 22:28 AC*150 2017-12-22 21:03 提交*500 2018-01-03 19:16 第一次红名]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>洛谷</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日常颓废]]></title>
    <url>%2F2017%2F12%2F05%2F%E6%97%A5%E5%B8%B8%E9%A2%93%E5%BA%9F%2F</url>
    <content type="text"><![CDATA[颓…颓废？？？ 啧啧。今天真的来写一写吧。明天也许是周三了吧（捂脸），久违的统练就要来了呢。 但一不小心就又开始了日常颓废。先是生物练习册错一大堆，数学练习册错一大堆。看了看背后正在落灰的算法导论。不是很令人开心的一天。不过今天达成了一个成就，把同桌成功拉去打了一会乒乓球。非常的有趣。 愿明天生物统练不爆炸。]]></content>
      <categories>
        <category>日常</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[测试一下]]></title>
    <url>%2F2017%2F12%2F04%2F%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x6216;&#x8BB8;&#x8FD9;&#x5C31;&#x662F;&#x6211;&#x7684;&#x7B2C;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x4E86;&#xFF1F;&#xFF1F;&#xFF1F; &#x778E;&#x641E;&#x4E00;&#x756A;&#x679C;&#x7136;&#x9887;&#x6709;&#x4E50;&#x8DA3;&#x54C8;&#x54C8;&#x54C8;&#x54C8;.&#x4EE5;&#x540E;&#x4E0D;&#x5B9A;&#x671F;&#x66F4;&#x65B0;&#x9898;&#x89E3;&#x548C;&#x7B97;&#x6CD5;&#x4EC0;&#x4E48;&#x4E71;&#x4E03;&#x516B;&#x7CDF;&#x7684;&#x6CA1;&#x51C6;&#x4E5F;&#x6709;&#x6211;&#x7684;&#x5410;&#x69FD;&#x54C8;&#x54C8;&#x54C8;&#x3002;]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F12%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
