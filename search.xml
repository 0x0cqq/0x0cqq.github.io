<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[考试前要看的东西]]></title>
    <url>%2F2018%2F01%2F28%2F%E8%80%83%E8%AF%95%E5%89%8D%E8%A6%81%E7%9C%8B%E7%9A%84%E4%B8%9C%E8%A5%BF%2F</url>
    <content type="text"><![CDATA[OI考试前最好来看一看 会不断的补充。 考前 带好需要的东西 笔 纸 水 吃的 适量的衣服 复习以下膜版 线段树&amp;树状数组 平衡树 dp 图论 数学 ……（来日补充 早点睡 吃点好的 考中 思路放开 不要鄙视暴力 不要给自己太大压力 多喝水 多上厕所（学习d姓大神 遇到不会做的题目时的checklist： 看下数据范围和题目要求 尝试对算法入座 先敲个30分左右的暴力 仔细回顾一遍学过的所有数据结构如上面所列 没准可以打个表？？ 评估一下思考的代价和不做的代价 后面的题如果有思路可以先做 不要慌 再做不出来去玩局初级扫雷平静一下 写暴力对拍 最后检查两遍文件输入输出 除非一点都不会 不能不写 考后 吃顿好的。 拉个人出去玩。 再吃顿好的。 忘掉比赛。]]></content>
      <categories>
        <category>OI</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[2018 JanWeek4&Month1]]></title>
    <url>%2F2018%2F01%2F28%2F2018-JanWeek4-Month1%2F</url>
    <content type="text"><![CDATA[2018年一月 第四周 &amp;&amp; 2018年一月2018.1.22-2018.1.282018.1 正文其实本该昨天写的。但由于昨天上午考试，下午去参加一个会一直到12点，然后也就没有时间去写总结了。 转眼间，一月就过去了呢。这一个月大约是高中生活以来最充实的一个月吧。截止我现在写总结的时候，寒假似乎还没有开始。前几天一直不停不停的从早上到晚课，然而今天却还是要考四个小时的试。啧啧。在一月里，期末也考完了，冬令营也搞完了，然而感觉生活还是很忙。也无比的怀念新年联欢的时候，那种轻松悠闲的感觉。而且，毕竟，那还是去年。 不过忙也好，至少说明现在不是在碌碌无为。寒假也许都会这么充实下去吧。话说农历新年也快要来了，我也又要回老家了。 这一周开始接着在冬令营颓废，然后去了两天学校，却还是不得已参加一坨令人无语的活动。真不知道该庆幸去了冬令营还是不去了。 学期也算是正是结束了。下一个noip事实上也越来越近了。回首这一个学期，学会了很多，但同时也意识到，和高手们差的也很多。最后的十个月，我想将是不亚于中考冲刺的那10个月的一个体验吧（虽然我觉得那十个月就是颓过去的。想想也真是有趣，如果这一堆流程走完，大概也得到明年五六月份了。而那个时候，或许高三的总复习都快要开始了。 然后高中生活就过去了。 TodoList这周完成 考完试学： Trie ✔成功学习 Treap ✔成功实现 出没出完的题 ✔颓了一道膜版交上去了 愉快的度过冬令营 ✔旅游很顺利 愉快 结课考试不爆0 ✔5分哈哈哈 每天保证3-5道的刷题效率 ✘大概也就每天2.5道左右 顺便写点寒假作业 ✔强行水完了化学和一半的物理作业 下周 实现AC自动机 学会fhq Treap或者Splay 写完至少物理、地理、一小半数学的寒假作业 至少写一篇题解发到这里（待选主题：线段树，状压dp 出去玩\(≧▽≦)/]]></content>
      <categories>
        <category>总结</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[冬令营旅游记]]></title>
    <url>%2F2018%2F01%2F25%2F%E5%86%AC%E4%BB%A4%E8%90%A5%E6%97%85%E6%B8%B8%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[今年冬天，去了趟北京冬令营旅游。其实本就没有抱着什么信心。NOIP只考了二等奖，好多提高组的基础知识都没有学完。但还是义无反顾的去了。也许早就知道会是这个样子。 Day1冬令营在北师大附中。虽然是去过的地方，然而还是十分迷茫的找啊找。第一天主要是颁奖仪式等等。第一次体会到如坐针毡的感觉。深刻的觉得，旁边的人哪个都好像那么巨，而自己，却是那么蒟蒻。生怕做错哪怕一点事情，而同班的OIer却还没有来冬令营。万幸，找到了几个看着还比较眼熟的，果然是同学。 下午是胡伟栋老师的课，讲的是深搜。“这也许是某些人冬令营唯一能听懂的一节课。”或许就是我吧。讲的的确不难，而且还是蛮有趣的。果然很厉害呢。 Day2第一次考试。看到题瞬间懵逼。一道题都不会做呢。只好随便写了几个暴力骗分，发了条pyq之后就开始玩跳一跳。坐在我旁边的貌似是小学六年级。不得不感叹，年轻真好。如果能来五年冬令营还进不了省队，说什么我都不相信。祝他有光明的前途吧。 下午开始讲题。首先看了看程序，40／400。被std十倍杀。不过也很正常。这天下午的讲课似乎还比较友善，好像主要讲了贪心和归纳的思想。我个人认为讲的还是不错的，我也忍住了，没有睡着。讲的例题我竟然也能听懂。不容易。 Day3第二天考试。还是一道题都不会。依旧是，暴力骗分然后就玩跳一跳。我现在也依然认为，如果冬令营再多几天，没准我的跳一跳水平还能有长足的进步。考完试才知道，第一道题原来只是有技巧的打表。果然还是too naive呢。不过同来的两位同学也没能做出后面的题，还是有了一点心理安慰的呢。不过最后只考了20分。扎心。 下午讲的是国家集训队自选题。其实我都不记得讲的是什么了。只记得也是好难。无奈只好打起了世征。居然打过了一个征服。噫…… 回家居然水过了Treap，值得庆贺。 Day4第三天考试。今天竟然恍惚的以为自己做出来了一道贪心。然而我还是太天真。std竟是什么我都没有听说过的费用流。不过勉强骗到了30分还是50分。后面几道题接着无穷骗分，跳一跳。最后居然骗上了100分。不错不错。 下午好像讲的是国家集训队的自选题。实在实在好难。听着听着实在听不懂，于是开始学上午考到的KMP。然而写了好久还没有写对。最后到家再写还是没有写对。最后发现把一个int数组不小心开成了char。我大概是个傻子吧。 回家不知道为什么脑子抽风了，稀里糊涂的总共坐了四趟公交才到家。坐了好久都没坐过的无轨电车。终于体会到在冷风中瑟瑟发抖的等公交车的感觉。诶。回到家都一个半小时了。 Day5最后一天考试。一看到题，就觉得可以暴力打表。然并卵。调一个暴力程序调了一个小时才终于调对。然后打表两分钟。啧啧啧。后面第二道题最后半个小时才开始写，写了个暴力打表。然而最后只打到30分都不到。据说还有人查OEIS的？？？我怎么没想到？？？非常有趣。学习了一个新技能。最后一道题好像颇为吐槽。反正我也不会做。 下午讲高精度，我也没听，也只是记得巨佬1300多行的高精度膜版。终于把第三道线段树的题给出完了。下午回家去坐了特4，一路坐着回家很excited。啧啧啧。 啧啧 总结一下吧。去了趟冬令营，考了四天试，得分250/1400。啧啧。某d姓人大概考了1000分吧。差距固然存在，也就告诉了我前进该向何方，到了什么程度才能算强者吧。 和某人晚上谈论了一下。某人这一段时间好像经常听我的感慨吧，谢谢你。还吐槽了我的“强弱”标准。但的确是，每进入一个阶段，总会觉得自己很弱，而强者遥不可及。但尤其在我认真对待的OI里，目标的无望却真的有些让人绝望。OI在高考里不会考到，选择了这项，那是真的真的喜欢。但似乎真的有点晚了。 省一看起来不像是难事，可省队，实在是遥不可及。 如果不进队，那么竞赛好像用处也不是很大。可我毕竟选择它，除了竞赛，更多的也是喜欢吧。 我永远都不会认输的。 明年，再来。]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>冬令营</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018 JanWeek3]]></title>
    <url>%2F2018%2F01%2F20%2F2018-JanWeek3%2F</url>
    <content type="text"><![CDATA[2018年一月 第三周2018.1.15-2018.1.21 正文这一周可是干了不少事。期末考试考的也还算不错，校次竟然还前进了两名。所以看来也许可以寒假认真刷题了？？？这周学了不少东西。主要是线段树和状压dp，感觉也不是太难。冬令营今天是第一天，听了胡伟栋的“深度优先搜索”，估计也就是冬令营唯一能听懂的一节课了。要说还有什么的话就是洛谷的AC终于到了200。不容易啊。不过马上就能到寒假了。定一个目标，寒假刷过100题吧。所以，希望寒假再回来洛谷的AC能过300吧。 TodoList这周完成 考好期末 ✔考的还不错 考完试学： Trie ✘根本没学 Treap ✘还没有实现 出没出完的题 ✘还是懒得出题 准备好冬令营旅游 ✔旅游目前顺利 下周 愉快的度过冬令营 结课考试不爆0 每天保证3-5道的刷题效率 顺便写点寒假作业]]></content>
      <categories>
        <category>总结</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[2018 JanWeek2]]></title>
    <url>%2F2018%2F01%2F13%2F2018-JanWeek2%2F</url>
    <content type="text"><![CDATA[2018年一月 第二周2018.1.7-2018.1.14 写在前面莫名的就突然有一种做一做总结的欲望。想到爸爸。以前啊，总是能看到爸爸每周做一次周报，每月做一次月报，季报，年报，诸如此类。其实也未尝不是一种好想法吧。尤其对我这种健忘的人，以后只要看看这些总结，也就能知道一些好玩的事情了。 正文转眼就2018了。这一周也没干什么正事，不过是写写作业、出出题，打打游戏。期末考试前的最后一周，真的很有趣呢。第二次轮到写班级日志，也只是草草敷衍了事。这一周没有竞赛课，也就更没有时间去督促自己coding了。看着某人luogu上一条直线的刷题数量，扎心。考完试后一定要玩命的学，玩命的刷题。这半个月复习期末带来的的损失真是不小的。 TodoList这周完成无 下周 复习&amp;考好期末 考完试学： Trie Treap 出没出完的题 准备好冬令营旅游]]></content>
      <categories>
        <category>总结</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[“长大”]]></title>
    <url>%2F2018%2F01%2F03%2F%E2%80%9C%E9%95%BF%E5%A4%A7%E2%80%9D%2F</url>
    <content type="text"><![CDATA[随谈或许，我一直认为我早就长大了吧。 那应该是在五年级的时候。我又一次去找老师，又一次没有说成我心中最为完美的想法，又一次的陷入沉思。那个时候，我真正的意识到，或许并不是所有事情，都能按照我心中最好的方式去进行吧。或许从那以后，我以为我就再也不会为了我心中的梦想的世界——或者说更美好的事情，去与人争辩了吧。而初中，也确实是，和人争辩大多也都是做错了题或者做对了题去跟同学和老师的争辩了吧。 一度，我竟真的以为我长大了。 那些记忆已经很模糊了，而近几天发生的事情却还历历在目。 看到某位同学的随笔，某位同学的批语，又想到了好多。 最近写了不少随笔，也阅了不少随笔。而我写的随笔有不少却像是“抱怨”，“抱怨”班歌比赛的劳民伤财，抱怨体育运动的不切实际，抱怨《论语》的无理考法。 最近和几位同学互相批判了一番。价值观的不同其实是必然的。或许你有一身嫉世热血，或许我有一颗如冰寒心。脚踏实地还是仰望星空？向理想前行还是于现实混沌？谁又会知道呢。想了很久要不要提笔写下自己的想法，最后还是放弃了。早就应该知道，这些事情，笑笑就好，何必去劳心费神呢？但又不知道为何，最近总是想写，想去表达所有一切一切的想法，或许应该收收了吧。 “这不是能随心所欲的年纪。”说的真的是好啊。或许，从小学就应该想到的吧。但为什么现在又忘记了呢？谁会知道呢。也许是一颗心不再凉的彻骨，也许是一不小心就忘记了以前吧。 这句话可以说是，“一语点破梦中人”。小学的无数经历让我曾以为我已经从这梦中醒来，再也不会去做那荒诞的梦；但如今发现，到底是梦还是现实却也分不太清。或许我仍然还在梦中？或许是我一直都错了？谁又知道呢。 曾经以为长大，但恍然之间被人点醒，却才知道梦仍然在。有梦是不是一件好事呢？ 或许几年之后仍会有相同的感慨吧。但现在，真的没有时间去思考那么多。但也许julao们不一定吧。 不如先滚去把作业写完。 另祝各位2018吉祥快乐，万事如意。]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【洛谷】P1043 数字游戏]]></title>
    <url>%2F2017%2F12%2F23%2F%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1043-%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F%2F</url>
    <content type="text"><![CDATA[题目描述丁丁最近沉迷于一个数字游戏之中。这个游戏看似简单，但丁丁在研究了许多天之后却发觉原来在简单的规则下想要赢得这个游戏并不那么容易。游戏是这样的，在你面前有一圈整数（一共n个），你要按顺序将其分为m个部分，各部分内的数字相加，相加所得的m个结果对10取模后再相乘，最终得到一个数k。游戏的要求是使你所得的k最大或者最小。 例如，对于下面这圈数字（n=4，m=2）： 要求最小值时，((2-1) mod 10)×((4+3) mod 10)=1×7=7，要求最大值时，为((2+4+3) mod 10)×(-1 mod 10)=9×9=81。特别值得注意的是，无论是负数还是正数，对10取模的结果均为非负值。 丁丁请你编写程序帮他赢得这个游戏。 输入输出格式输入格式：输入文件第一行有两个整数，n（1≤n≤50）和m（1≤m≤9）。以下n行每行有个整数，其绝对值不大于104，按顺序给出圈中的数字，首尾相接。 输出格式：输出文件有两行，各包含一个非负整数。第一行是你程序得到的最小值，第二行是最大值。 输入输出样例输入样例#1：123454 243-12 输出样例#1：12781 说明很水的一道dp题目。只要知道断环为链剩下的也都不难。题解洛谷没给过，现在也找不到了，只有代码还剩了下来。代码里面也有注释，凑活看看也可以。 代码点击切换显示状态 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;algorithm&gt;#include &lt;cmath&gt;using namespace std;long long num[150],dp_1[150],dp_2[150];//_1放最大值,_2放最小值int n,m;inline int mod(long long nnn)&#123;//mod函数，不解释 int w = int(floor(double(nnn)/10)); return nnn - w*10;&#125;int main()&#123; scanf("%d %d",&amp;n,&amp;m); for(int i = 1;i&lt;=n;i++)&#123;//断环为链的准备 scanf("%lld",&amp;(num[i])); num[i+n] = num[i]; &#125; for(int i = 1;i&lt;=2*n;i++)//前缀和的处理 num[i] = num[i-1]+num[i]; //正经dp long long maxn = -1,minn = 0x3f3f3f3f; for(int s = 1;s&lt;=n;s++)&#123;//枚举起点 memset(dp_1,0,sizeof(dp_1));//清零dp数组 memset(dp_2,0,sizeof(dp_2)); for(int j = 0;j&lt;m;j++)&#123;//板子由少到多 for(int i = s;i&lt;=s+n;i++)&#123;//上一个插板子的地方 if(j == 0)&#123;//j==0的时候的处理，其实也可以叫初始化 dp_1[i] = dp_2[i] = mod(num[s+n]-num[i]); continue; &#125; long long maxtmp = -1,mintmp = 0x3f3f3f3f;//对所有可能下一状态的遍历，并取最大或最小值 for(int x = i+1;x&lt;=s+n-j-1;x++)&#123; maxtmp = max(maxtmp,dp_1[x]*mod(num[x]-num[i])); mintmp = min(mintmp,dp_2[x]*mod(num[x]-num[i])); &#125; dp_1[i] = maxtmp;//取最大最小值 dp_2[i] = mintmp; &#125; &#125; maxn = max(dp_1[s],maxn);//对于起点不同的最大最小值进行更新 minn = min(dp_2[s],minn); &#125; printf("%lld\n%lld\n",minn,maxn);//开心的输出结果 return 0;&#125;]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>洛谷</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[可能是最简单的线段树介绍]]></title>
    <url>%2F2017%2F12%2F18%2F%E5%8F%AF%E8%83%BD%E6%98%AF%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%BA%BF%E6%AE%B5%E6%A0%91%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[看了网上的各种线段树介绍，实在是觉得有点复杂。所以先开一个坑，慢慢填。 0x00 概述本文将从是什么、为什么、怎么做、有什么用这几个方面来介绍一下线段树这一重要的数据结构。 0x01 什么是线段树为了学习线段树这样一个数据结构，我们需要先搞明白这是一个什么东西。 线段树是一种二叉搜索树，与区间树相似，它将一个区间划分成一些区间，每个单元区间对应线段树中的一个叶结点。 而每一个节点所包含的区间恰好被其子节点均分为两半。 0x02 线段树有什么用呢一句话：在O(log n)的对数时间维护和查询某段区间的诸如和，最小值，最大值等信息。 权且猜测读者已经了解了树状数组。在树状数组的学习中，我们会知道，树状数组的出现其实是为了平衡前缀和、普通数组这两种数据结构，它能做到的就是在O(log n)的对数时间内求一段区间的和，以及改变某个数的值。 但是倘若需要对区间进行操作该怎么办呢？如果我将区间中的每一个数都进行操作的话，那么时间复杂度已经达到了O(n)，显然是我们不能承受之慢。如果不使用差分版的树状数组这个时候，我们就需要下面即将介绍的——线段树。 0x03 操作开始是打算直接讲lazy标记的，但感觉没有代码讲数据结构简直是耍流氓，所以我们先来看一个简单的线段树的代码。 首先明确我们的需求：能够实现一个支持区间加法，区间求和的线段树。 头文件部分1234567#define ll long long#define lson (nown&lt;&lt;1)#define rson (nown&lt;&lt;1|1)#define mid ((l+r)&gt;&gt;1)#define MAXN 100005ll sumn[MAXN&lt;&lt;2],addn[MAXN&lt;&lt;2]; 我一般喜欢把这几个东西先define出来，这样以后的代码能简洁很多。 在这里，我使用的数组来模拟树形结构。```代表当前节点，规定nown*2为左子节点，nown*2+1为为右子节点12345678### 函数1：push_up```cppvoid push_up(int nown)&#123; sumn[nown] = sumn[lson] + sumn[rson];&#125; …0x04 怎么做到的呢这一部分主要分为以下几个部分 说到线段树，就不得不说—— 线段树的核心思想——懒惰（lazy）标记为什么叫lazy标记呢？顾名思义，也就是为了使我们的修改操作更加的快速，我们会犯一些懒。主要来说，就是不做完所有的区间修改。我们如果发现我们目前要修改的这个区间完全被线段树某个节点对应的区间包含，那么我们就可以意识到，这个区间里的每一个点，我们都需要做这样一个修改。那么我们就会给这个区间打上一个lazy标记，标志着，我知道这个区间要改，我还没有改完这个区间以下的子区间。 帮助理解lazy标记的重要性质性质：我们可以认为，在线段树这样的树状结构上，lazy标记以上的部分的信息都是完全准确的。 (to be finished)]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>介绍</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[转载]达拉崩吧-OI版]]></title>
    <url>%2F2017%2F12%2F16%2F%E8%BD%AC%E8%BD%BD-%E8%BE%BE%E6%8B%89%E5%B4%A9%E5%90%A7OI%E7%89%88%2F</url>
    <content type="text"><![CDATA[原文地址：点此查看很久很久以前 算法突然出现 带来导论 带走了智商又消失不见 编程十分危险 世间谁最勇敢 一位懵逼儿赶来 大声喊 我要写出最高的树 打出最大的表 搜进最深的递归 把AC带回到面前 老师非常高兴 忙问他的技能 年轻人想了想 他说 老师我会 非确定性有穷状态决策自动机 再来一次 非确定性有穷状态决策自动机 是不是 非确定性有穷状态决策自动机 对对是 非确定性有穷状态决策自动机 懵逼无名少年 捧着算法导论 带着大家的希望 从学校里出发 战胜BUG来袭 获得调试神技 无数代码见证 他慢慢升级 偏远论坛角落 参与所有话题 一路排序 伴随指引前路的单链表 进入决赛考场 比赛和可怕难题 少年打开IDE 难题道 我是 Floyd区间DP均衡红黑树 再来一次 Floyd区间DP均衡红黑树 是不是 Kruskal一维DP二叉排序树 不对是 Floyd区间DP均衡红黑树 于是 非确定性有限状态决策自动机 打出 深度搜索模拟枚举单源最短路 应用 拓扑排序Trie结构Polya定律 套入 Dijkasta联通分量BellmanFord 最后 非确定性有限状态决策自动机 他使用了 IO优化树链剖分输出random 调用了 矩阵速幂虚二叉树行列式消元 完成了 凸包扫描后缀数组网络最大流 老师听说 非确定性有限状态决策自动机 他忘了写 #include freopen 就让 非确定性有限状态决策自动机 全手写 map/set稳定婚姻KMP实现 啦啦 懵逼少年 敲着键盘 Ctrl+V来几遍 他发明了一个算法 也在天天渐渐复杂 为了避免以后麻烦 算法叫做暴力法 它的全名十分难念 我不想说一遍]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>歌曲</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[洛谷大事记]]></title>
    <url>%2F2017%2F12%2F13%2F%E6%B4%9B%E8%B0%B7%E5%A4%A7%E4%BA%8B%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[里程碑 2017-09-14 20:32 注册 2017-10-17 21:00 AC*1 2017-10-23 08:50 第一次蓝名 2017-10-29 10:05 第一次绿名 2017-11-01 20:07 AC*50 2017-11-11&amp;12 NOIp2017 tg观光游省二 2017-11-19 16:37 新手村AC 2017-11-25 11:51 AC*100 2017-11-29 17:55 第一次橙名 2017-12-17 22:28 AC*150 2017-12-22 21:03 提交*500 2018-01-03 19:16 第一次红名 2018-01-20 20:34 AC*200 2018-01-20~27 第一次冬令营观光游]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>洛谷</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日常颓废]]></title>
    <url>%2F2017%2F12%2F05%2F%E6%97%A5%E5%B8%B8%E9%A2%93%E5%BA%9F%2F</url>
    <content type="text"><![CDATA[颓…颓废？？？ 啧啧。今天真的来写一写吧。明天也许是周三了吧（捂脸），久违的统练就要来了呢。 但一不小心就又开始了日常颓废。先是生物练习册错一大堆，数学练习册错一大堆。看了看背后正在落灰的算法导论。不是很令人开心的一天。不过今天达成了一个成就，把同桌成功拉去打了一会乒乓球。非常的有趣。 愿明天生物统练不爆炸。]]></content>
      <categories>
        <category>日常</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[测试一下]]></title>
    <url>%2F2017%2F12%2F04%2F%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x6216;&#x8BB8;&#x8FD9;&#x5C31;&#x662F;&#x6211;&#x7684;&#x7B2C;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x4E86;&#xFF1F;&#xFF1F;&#xFF1F; &#x778E;&#x641E;&#x4E00;&#x756A;&#x679C;&#x7136;&#x9887;&#x6709;&#x4E50;&#x8DA3;&#x54C8;&#x54C8;&#x54C8;&#x54C8;.&#x4EE5;&#x540E;&#x4E0D;&#x5B9A;&#x671F;&#x66F4;&#x65B0;&#x9898;&#x89E3;&#x548C;&#x7B97;&#x6CD5;&#x4EC0;&#x4E48;&#x4E71;&#x4E03;&#x516B;&#x7CDF;&#x7684;&#x6CA1;&#x51C6;&#x4E5F;&#x6709;&#x6211;&#x7684;&#x5410;&#x69FD;&#x54C8;&#x54C8;&#x54C8;&#x3002;]]></content>
  </entry>
</search>
